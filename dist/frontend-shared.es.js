import { jsx as R, jsxs as ge, Fragment as Up } from "react/jsx-runtime";
import A, { useState as ee, useRef as q, useSyncExternalStore as j$, useLayoutEffect as qp, useEffect as oe, isValidElement as qn, cloneElement as ra, useCallback as be, createContext as de, useContext as le, forwardRef as Ee, createElement as dl, useMemo as G } from "react";
import Oc, { flushSync as z$, createPortal as K$ } from "react-dom";
function U$(e, t) {
  for (var r = 0; r < t.length; r++) {
    const n = t[r];
    if (typeof n != "string" && !Array.isArray(n)) {
      for (const i in n)
        if (i !== "default" && !(i in e)) {
          const a = Object.getOwnPropertyDescriptor(n, i);
          a && Object.defineProperty(e, i, a.get ? a : {
            enumerable: !0,
            get: () => n[i]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
function Hp(e) {
  var t, r, n = "";
  if (typeof e == "string" || typeof e == "number") n += e;
  else if (typeof e == "object") if (Array.isArray(e)) {
    var i = e.length;
    for (t = 0; t < i; t++) e[t] && (r = Hp(e[t])) && (n && (n += " "), n += r);
  } else for (r in e) e[r] && (n && (n += " "), n += r);
  return n;
}
function dr() {
  for (var e, t, r = 0, n = "", i = arguments.length; r < i; r++) (e = arguments[r]) && (t = Hp(e)) && (n && (n += " "), n += t);
  return n;
}
const na = (e) => typeof e == "number" && !isNaN(e), ln = (e) => typeof e == "string", Ct = (e) => typeof e == "function", mo = (e) => ln(e) || Ct(e) ? e : null, fl = (e) => qn(e) || ln(e) || Ct(e) || na(e);
function q$(e, t, r) {
  r === void 0 && (r = 300);
  const { scrollHeight: n, style: i } = e;
  requestAnimationFrame(() => {
    i.minHeight = "initial", i.height = n + "px", i.transition = `all ${r}ms`, requestAnimationFrame(() => {
      i.height = "0", i.padding = "0", i.margin = "0", setTimeout(t, r);
    });
  });
}
function Ds(e) {
  let { enter: t, exit: r, appendPosition: n = !1, collapse: i = !0, collapseDuration: a = 300 } = e;
  return function(o) {
    let { children: s, position: u, preventExitTransition: l, done: c, nodeRef: d, isIn: f, playToast: h } = o;
    const p = n ? `${t}--${u}` : t, v = n ? `${r}--${u}` : r, g = q(0);
    return qp(() => {
      const $ = d.current, m = p.split(" "), b = (D) => {
        D.target === d.current && (h(), $.removeEventListener("animationend", b), $.removeEventListener("animationcancel", b), g.current === 0 && D.type !== "animationcancel" && $.classList.remove(...m));
      };
      $.classList.add(...m), $.addEventListener("animationend", b), $.addEventListener("animationcancel", b);
    }, []), oe(() => {
      const $ = d.current, m = () => {
        $.removeEventListener("animationend", m), i ? q$($, c, a) : c();
      };
      f || (l ? m() : (g.current = 1, $.className += ` ${v}`, $.addEventListener("animationend", m)));
    }, [f]), A.createElement(A.Fragment, null, s);
  };
}
function df(e, t) {
  return e != null ? { content: e.content, containerId: e.props.containerId, id: e.props.toastId, theme: e.props.theme, type: e.props.type, data: e.props.data || {}, isLoading: e.props.isLoading, icon: e.props.icon, status: t } : {};
}
const ft = /* @__PURE__ */ new Map();
let ia = [];
const hl = /* @__PURE__ */ new Set(), H$ = (e) => hl.forEach((t) => t(e)), Wp = () => ft.size > 0;
function Qp(e, t) {
  var r;
  if (t) return !((r = ft.get(t)) == null || !r.isToastActive(e));
  let n = !1;
  return ft.forEach((i) => {
    i.isToastActive(e) && (n = !0);
  }), n;
}
function Gp(e, t) {
  fl(e) && (Wp() || ia.push({ content: e, options: t }), ft.forEach((r) => {
    r.buildToast(e, t);
  }));
}
function ff(e, t) {
  ft.forEach((r) => {
    t != null && t != null && t.containerId ? (t == null ? void 0 : t.containerId) === r.id && r.toggle(e, t == null ? void 0 : t.id) : r.toggle(e, t == null ? void 0 : t.id);
  });
}
function W$(e) {
  const { subscribe: t, getSnapshot: r, setProps: n } = q(function(a) {
    const o = a.containerId || 1;
    return { subscribe(s) {
      const u = /* @__PURE__ */ function(c, d, f) {
        let h = 1, p = 0, v = [], g = [], $ = [], m = d;
        const b = /* @__PURE__ */ new Map(), D = /* @__PURE__ */ new Set(), S = () => {
          $ = Array.from(b.values()), D.forEach((y) => y());
        }, P = (y) => {
          g = y == null ? [] : g.filter((_) => _ !== y), S();
        }, B = (y) => {
          const { toastId: _, onOpen: w, updateId: E, children: k } = y.props, C = E == null;
          y.staleId && b.delete(y.staleId), b.set(_, y), g = [...g, y.props.toastId].filter((T) => T !== y.staleId), S(), f(df(y, C ? "added" : "updated")), C && Ct(w) && w(qn(k) && k.props);
        };
        return { id: c, props: m, observe: (y) => (D.add(y), () => D.delete(y)), toggle: (y, _) => {
          b.forEach((w) => {
            _ != null && _ !== w.props.toastId || Ct(w.toggle) && w.toggle(y);
          });
        }, removeToast: P, toasts: b, clearQueue: () => {
          p -= v.length, v = [];
        }, buildToast: (y, _) => {
          if (((ne) => {
            let { containerId: me, toastId: xe, updateId: _e } = ne;
            const Fe = me ? me !== c : c !== 1, V = b.has(xe) && _e == null;
            return Fe || V;
          })(_)) return;
          const { toastId: w, updateId: E, data: k, staleId: C, delay: T } = _, L = () => {
            P(w);
          }, O = E == null;
          O && p++;
          const x = { ...m, style: m.toastStyle, key: h++, ...Object.fromEntries(Object.entries(_).filter((ne) => {
            let [me, xe] = ne;
            return xe != null;
          })), toastId: w, updateId: E, data: k, closeToast: L, isIn: !1, className: mo(_.className || m.toastClassName), bodyClassName: mo(_.bodyClassName || m.bodyClassName), progressClassName: mo(_.progressClassName || m.progressClassName), autoClose: !_.isLoading && (U = _.autoClose, K = m.autoClose, U === !1 || na(U) && U > 0 ? U : K), deleteToast() {
            const ne = b.get(w), { onClose: me, children: xe } = ne.props;
            Ct(me) && me(qn(xe) && xe.props), f(df(ne, "removed")), b.delete(w), p--, p < 0 && (p = 0), v.length > 0 ? B(v.shift()) : S();
          } };
          var U, K;
          x.closeButton = m.closeButton, _.closeButton === !1 || fl(_.closeButton) ? x.closeButton = _.closeButton : _.closeButton === !0 && (x.closeButton = !fl(m.closeButton) || m.closeButton);
          let j = y;
          qn(y) && !ln(y.type) ? j = ra(y, { closeToast: L, toastProps: x, data: k }) : Ct(y) && (j = y({ closeToast: L, toastProps: x, data: k }));
          const ae = { content: j, props: x, staleId: C };
          m.limit && m.limit > 0 && p > m.limit && O ? v.push(ae) : na(T) ? setTimeout(() => {
            B(ae);
          }, T) : B(ae);
        }, setProps(y) {
          m = y;
        }, setToggle: (y, _) => {
          b.get(y).toggle = _;
        }, isToastActive: (y) => g.some((_) => _ === y), getSnapshot: () => m.newestOnTop ? $.reverse() : $ };
      }(o, a, H$);
      ft.set(o, u);
      const l = u.observe(s);
      return ia.forEach((c) => Gp(c.content, c.options)), ia = [], () => {
        l(), ft.delete(o);
      };
    }, setProps(s) {
      var u;
      (u = ft.get(o)) == null || u.setProps(s);
    }, getSnapshot() {
      var s;
      return (s = ft.get(o)) == null ? void 0 : s.getSnapshot();
    } };
  }(e)).current;
  n(e);
  const i = j$(t, r, r);
  return { getToastToRender: function(a) {
    if (!i) return [];
    const o = /* @__PURE__ */ new Map();
    return i.forEach((s) => {
      const { position: u } = s.props;
      o.has(u) || o.set(u, []), o.get(u).push(s);
    }), Array.from(o, (s) => a(s[0], s[1]));
  }, isToastActive: Qp, count: i == null ? void 0 : i.length };
}
function Q$(e) {
  const [t, r] = ee(!1), [n, i] = ee(!1), a = q(null), o = q({ start: 0, delta: 0, removalDistance: 0, canCloseOnClick: !0, canDrag: !1, didMove: !1 }).current, { autoClose: s, pauseOnHover: u, closeToast: l, onClick: c, closeOnClick: d } = e;
  var f, h;
  function p() {
    r(!0);
  }
  function v() {
    r(!1);
  }
  function g(b) {
    const D = a.current;
    o.canDrag && D && (o.didMove = !0, t && v(), o.delta = e.draggableDirection === "x" ? b.clientX - o.start : b.clientY - o.start, o.start !== b.clientX && (o.canCloseOnClick = !1), D.style.transform = `translate3d(${e.draggableDirection === "x" ? `${o.delta}px, var(--y)` : `0, calc(${o.delta}px + var(--y))`},0)`, D.style.opacity = "" + (1 - Math.abs(o.delta / o.removalDistance)));
  }
  function $() {
    document.removeEventListener("pointermove", g), document.removeEventListener("pointerup", $);
    const b = a.current;
    if (o.canDrag && o.didMove && b) {
      if (o.canDrag = !1, Math.abs(o.delta) > o.removalDistance) return i(!0), e.closeToast(), void e.collapseAll();
      b.style.transition = "transform 0.2s, opacity 0.2s", b.style.removeProperty("transform"), b.style.removeProperty("opacity");
    }
  }
  (h = ft.get((f = { id: e.toastId, containerId: e.containerId, fn: r }).containerId || 1)) == null || h.setToggle(f.id, f.fn), oe(() => {
    if (e.pauseOnFocusLoss) return document.hasFocus() || v(), window.addEventListener("focus", p), window.addEventListener("blur", v), () => {
      window.removeEventListener("focus", p), window.removeEventListener("blur", v);
    };
  }, [e.pauseOnFocusLoss]);
  const m = { onPointerDown: function(b) {
    if (e.draggable === !0 || e.draggable === b.pointerType) {
      o.didMove = !1, document.addEventListener("pointermove", g), document.addEventListener("pointerup", $);
      const D = a.current;
      o.canCloseOnClick = !0, o.canDrag = !0, D.style.transition = "none", e.draggableDirection === "x" ? (o.start = b.clientX, o.removalDistance = D.offsetWidth * (e.draggablePercent / 100)) : (o.start = b.clientY, o.removalDistance = D.offsetHeight * (e.draggablePercent === 80 ? 1.5 * e.draggablePercent : e.draggablePercent) / 100);
    }
  }, onPointerUp: function(b) {
    const { top: D, bottom: S, left: P, right: B } = a.current.getBoundingClientRect();
    b.nativeEvent.type !== "touchend" && e.pauseOnHover && b.clientX >= P && b.clientX <= B && b.clientY >= D && b.clientY <= S ? v() : p();
  } };
  return s && u && (m.onMouseEnter = v, e.stacked || (m.onMouseLeave = p)), d && (m.onClick = (b) => {
    c && c(b), o.canCloseOnClick && l();
  }), { playToast: p, pauseToast: v, isRunning: t, preventExitTransition: n, toastRef: a, eventHandlers: m };
}
function G$(e) {
  let { delay: t, isRunning: r, closeToast: n, type: i = "default", hide: a, className: o, style: s, controlledProgress: u, progress: l, rtl: c, isIn: d, theme: f } = e;
  const h = a || u && l === 0, p = { ...s, animationDuration: `${t}ms`, animationPlayState: r ? "running" : "paused" };
  u && (p.transform = `scaleX(${l})`);
  const v = dr("Toastify__progress-bar", u ? "Toastify__progress-bar--controlled" : "Toastify__progress-bar--animated", `Toastify__progress-bar-theme--${f}`, `Toastify__progress-bar--${i}`, { "Toastify__progress-bar--rtl": c }), g = Ct(o) ? o({ rtl: c, type: i, defaultClassName: v }) : dr(v, o), $ = { [u && l >= 1 ? "onTransitionEnd" : "onAnimationEnd"]: u && l < 1 ? null : () => {
    d && n();
  } };
  return A.createElement("div", { className: "Toastify__progress-bar--wrp", "data-hidden": h }, A.createElement("div", { className: `Toastify__progress-bar--bg Toastify__progress-bar-theme--${f} Toastify__progress-bar--${i}` }), A.createElement("div", { role: "progressbar", "aria-hidden": h ? "true" : "false", "aria-label": "notification timer", className: g, style: p, ...$ }));
}
let Z$ = 1;
const Zp = () => "" + Z$++;
function Y$(e) {
  return e && (ln(e.toastId) || na(e.toastId)) ? e.toastId : Zp();
}
function qi(e, t) {
  return Gp(e, t), t.toastId;
}
function Fo(e, t) {
  return { ...t, type: t && t.type || e, toastId: Y$(t) };
}
function qa(e) {
  return (t, r) => qi(t, Fo(e, r));
}
function Ie(e, t) {
  return qi(e, Fo("default", t));
}
Ie.loading = (e, t) => qi(e, Fo("default", { isLoading: !0, autoClose: !1, closeOnClick: !1, closeButton: !1, draggable: !1, ...t })), Ie.promise = function(e, t, r) {
  let n, { pending: i, error: a, success: o } = t;
  i && (n = ln(i) ? Ie.loading(i, r) : Ie.loading(i.render, { ...r, ...i }));
  const s = { isLoading: null, autoClose: null, closeOnClick: null, closeButton: null, draggable: null }, u = (c, d, f) => {
    if (d == null) return void Ie.dismiss(n);
    const h = { type: c, ...s, ...r, data: f }, p = ln(d) ? { render: d } : d;
    return n ? Ie.update(n, { ...h, ...p }) : Ie(p.render, { ...h, ...p }), f;
  }, l = Ct(e) ? e() : e;
  return l.then((c) => u("success", o, c)).catch((c) => u("error", a, c)), l;
}, Ie.success = qa("success"), Ie.info = qa("info"), Ie.error = qa("error"), Ie.warning = qa("warning"), Ie.warn = Ie.warning, Ie.dark = (e, t) => qi(e, Fo("default", { theme: "dark", ...t })), Ie.dismiss = function(e) {
  (function(t) {
    var r;
    if (Wp()) {
      if (t == null || ln(r = t) || na(r)) ft.forEach((n) => {
        n.removeToast(t);
      });
      else if (t && ("containerId" in t || "id" in t)) {
        const n = ft.get(t.containerId);
        n ? n.removeToast(t.id) : ft.forEach((i) => {
          i.removeToast(t.id);
        });
      }
    } else ia = ia.filter((n) => t != null && n.options.toastId !== t);
  })(e);
}, Ie.clearWaitingQueue = function(e) {
  e === void 0 && (e = {}), ft.forEach((t) => {
    !t.props.limit || e.containerId && t.id !== e.containerId || t.clearQueue();
  });
}, Ie.isActive = Qp, Ie.update = function(e, t) {
  t === void 0 && (t = {});
  const r = ((n, i) => {
    var a;
    let { containerId: o } = i;
    return (a = ft.get(o || 1)) == null ? void 0 : a.toasts.get(n);
  })(e, t);
  if (r) {
    const { props: n, content: i } = r, a = { delay: 100, ...n, ...t, toastId: t.toastId || e, updateId: Zp() };
    a.toastId !== e && (a.staleId = e);
    const o = a.render || i;
    delete a.render, qi(o, a);
  }
}, Ie.done = (e) => {
  Ie.update(e, { progress: 1 });
}, Ie.onChange = function(e) {
  return hl.add(e), () => {
    hl.delete(e);
  };
}, Ie.play = (e) => ff(!0, e), Ie.pause = (e) => ff(!1, e);
const J$ = typeof window < "u" ? qp : oe, Ha = (e) => {
  let { theme: t, type: r, isLoading: n, ...i } = e;
  return A.createElement("svg", { viewBox: "0 0 24 24", width: "100%", height: "100%", fill: t === "colored" ? "currentColor" : `var(--toastify-icon-color-${r})`, ...i });
}, hu = { info: function(e) {
  return A.createElement(Ha, { ...e }, A.createElement("path", { d: "M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z" }));
}, warning: function(e) {
  return A.createElement(Ha, { ...e }, A.createElement("path", { d: "M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z" }));
}, success: function(e) {
  return A.createElement(Ha, { ...e }, A.createElement("path", { d: "M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z" }));
}, error: function(e) {
  return A.createElement(Ha, { ...e }, A.createElement("path", { d: "M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z" }));
}, spinner: function() {
  return A.createElement("div", { className: "Toastify__spinner" });
} }, X$ = (e) => {
  const { isRunning: t, preventExitTransition: r, toastRef: n, eventHandlers: i, playToast: a } = Q$(e), { closeButton: o, children: s, autoClose: u, onClick: l, type: c, hideProgressBar: d, closeToast: f, transition: h, position: p, className: v, style: g, bodyClassName: $, bodyStyle: m, progressClassName: b, progressStyle: D, updateId: S, role: P, progress: B, rtl: y, toastId: _, deleteToast: w, isIn: E, isLoading: k, closeOnClick: C, theme: T } = e, L = dr("Toastify__toast", `Toastify__toast-theme--${T}`, `Toastify__toast--${c}`, { "Toastify__toast--rtl": y }, { "Toastify__toast--close-on-click": C }), O = Ct(v) ? v({ rtl: y, position: p, type: c, defaultClassName: L }) : dr(L, v), x = function(ae) {
    let { theme: ne, type: me, isLoading: xe, icon: _e } = ae, Fe = null;
    const V = { theme: ne, type: me };
    return _e === !1 || (Ct(_e) ? Fe = _e({ ...V, isLoading: xe }) : qn(_e) ? Fe = ra(_e, V) : xe ? Fe = hu.spinner() : ((ie) => ie in hu)(me) && (Fe = hu[me](V))), Fe;
  }(e), U = !!B || !u, K = { closeToast: f, type: c, theme: T };
  let j = null;
  return o === !1 || (j = Ct(o) ? o(K) : qn(o) ? ra(o, K) : function(ae) {
    let { closeToast: ne, theme: me, ariaLabel: xe = "close" } = ae;
    return A.createElement("button", { className: `Toastify__close-button Toastify__close-button--${me}`, type: "button", onClick: (_e) => {
      _e.stopPropagation(), ne(_e);
    }, "aria-label": xe }, A.createElement("svg", { "aria-hidden": "true", viewBox: "0 0 14 16" }, A.createElement("path", { fillRule: "evenodd", d: "M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z" })));
  }(K)), A.createElement(h, { isIn: E, done: w, position: p, preventExitTransition: r, nodeRef: n, playToast: a }, A.createElement("div", { id: _, onClick: l, "data-in": E, className: O, ...i, style: g, ref: n }, A.createElement("div", { ...E && { role: P }, className: Ct($) ? $({ type: c }) : dr("Toastify__toast-body", $), style: m }, x != null && A.createElement("div", { className: dr("Toastify__toast-icon", { "Toastify--animate-icon Toastify__zoom-enter": !k }) }, x), A.createElement("div", null, s)), j, A.createElement(G$, { ...S && !U ? { key: `pb-${S}` } : {}, rtl: y, theme: T, delay: u, isRunning: t, isIn: E, closeToast: f, hide: d, type: c, style: D, className: b, controlledProgress: U, progress: B || 0 })));
}, Es = function(e, t) {
  return t === void 0 && (t = !1), { enter: `Toastify--animate Toastify__${e}-enter`, exit: `Toastify--animate Toastify__${e}-exit`, appendPosition: t };
}, ex = Ds(Es("bounce", !0));
Ds(Es("slide", !0));
Ds(Es("zoom"));
Ds(Es("flip"));
const tx = { position: "top-right", transition: ex, autoClose: 5e3, closeButton: !0, pauseOnHover: !0, pauseOnFocusLoss: !0, draggable: "touch", draggablePercent: 80, draggableDirection: "x", role: "alert", theme: "light" };
function rx(e) {
  let t = { ...tx, ...e };
  const r = e.stacked, [n, i] = ee(!0), a = q(null), { getToastToRender: o, isToastActive: s, count: u } = W$(t), { className: l, style: c, rtl: d, containerId: f } = t;
  function h(v) {
    const g = dr("Toastify__toast-container", `Toastify__toast-container--${v}`, { "Toastify__toast-container--rtl": d });
    return Ct(l) ? l({ position: v, rtl: d, defaultClassName: g }) : dr(g, mo(l));
  }
  function p() {
    r && (i(!0), Ie.play());
  }
  return J$(() => {
    if (r) {
      var v;
      const g = a.current.querySelectorAll('[data-in="true"]'), $ = 12, m = (v = t.position) == null ? void 0 : v.includes("top");
      let b = 0, D = 0;
      Array.from(g).reverse().forEach((S, P) => {
        const B = S;
        B.classList.add("Toastify__toast--stacked"), P > 0 && (B.dataset.collapsed = `${n}`), B.dataset.pos || (B.dataset.pos = m ? "top" : "bot");
        const y = b * (n ? 0.2 : 1) + (n ? 0 : $ * P);
        B.style.setProperty("--y", `${m ? y : -1 * y}px`), B.style.setProperty("--g", `${$}`), B.style.setProperty("--s", "" + (1 - (n ? D : 0))), b += B.offsetHeight, D += 0.025;
      });
    }
  }, [n, u, r]), A.createElement("div", { ref: a, className: "Toastify", id: f, onMouseEnter: () => {
    r && (i(!1), Ie.pause());
  }, onMouseLeave: p }, o((v, g) => {
    const $ = g.length ? { ...c } : { ...c, pointerEvents: "none" };
    return A.createElement("div", { className: h(v), style: $, key: `container-${v}` }, g.map((m) => {
      let { content: b, props: D } = m;
      return A.createElement(X$, { ...D, stacked: r, collapseAll: p, isIn: s(D.toastId, D.containerId), style: D.style, key: `toast-${D.key}` }, b);
    }));
  }));
}
function Yp(e) {
  const t = Object.prototype.toString.call(e);
  return e instanceof Date || typeof e == "object" && t === "[object Date]" ? new e.constructor(+e) : typeof e == "number" || t === "[object Number]" || typeof e == "string" || t === "[object String]" ? new Date(e) : /* @__PURE__ */ new Date(NaN);
}
function nx(e, t) {
  return e instanceof Date ? new e.constructor(t) : new Date(t);
}
function ix(e, t) {
  const r = +Yp(e);
  return nx(e, r + t);
}
const Jp = 6e4, Xp = 36e5;
function ax(e, t) {
  return ix(e, t * 1e3);
}
function kr(e, t) {
  const r = e < 0 ? "-" : "", n = Math.abs(e).toString().padStart(t, "0");
  return r + n;
}
function ox(e, t) {
  const r = Yp(e);
  if (isNaN(r.getTime()))
    throw new RangeError("Invalid time value");
  let n = "", i = "";
  const a = "-", o = ":";
  {
    const s = kr(r.getDate(), 2), u = kr(r.getMonth() + 1, 2);
    n = `${kr(r.getFullYear(), 4)}${a}${u}${a}${s}`;
  }
  {
    const s = r.getTimezoneOffset();
    if (s !== 0) {
      const h = Math.abs(s), p = kr(Math.trunc(h / 60), 2), v = kr(h % 60, 2);
      i = `${s < 0 ? "+" : "-"}${p}:${v}`;
    } else
      i = "Z";
    const u = kr(r.getHours(), 2), l = kr(r.getMinutes(), 2), c = kr(r.getSeconds(), 2), d = n === "" ? "" : "T", f = [u, l, c].join(o);
    n = `${n}${d}${f}${i}`;
  }
  return n;
}
function sx(e, t) {
  const n = dx(e);
  let i;
  if (n.date) {
    const u = fx(n.date, 2);
    i = hx(u.restDateString, u.year);
  }
  if (!i || isNaN(i.getTime()))
    return /* @__PURE__ */ new Date(NaN);
  const a = i.getTime();
  let o = 0, s;
  if (n.time && (o = px(n.time), isNaN(o)))
    return /* @__PURE__ */ new Date(NaN);
  if (n.timezone) {
    if (s = mx(n.timezone), isNaN(s))
      return /* @__PURE__ */ new Date(NaN);
  } else {
    const u = new Date(a + o), l = /* @__PURE__ */ new Date(0);
    return l.setFullYear(
      u.getUTCFullYear(),
      u.getUTCMonth(),
      u.getUTCDate()
    ), l.setHours(
      u.getUTCHours(),
      u.getUTCMinutes(),
      u.getUTCSeconds(),
      u.getUTCMilliseconds()
    ), l;
  }
  return new Date(a + o + s);
}
const Wa = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
}, ux = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/, lx = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/, cx = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function dx(e) {
  const t = {}, r = e.split(Wa.dateTimeDelimiter);
  let n;
  if (r.length > 2)
    return t;
  if (/:/.test(r[0]) ? n = r[0] : (t.date = r[0], n = r[1], Wa.timeZoneDelimiter.test(t.date) && (t.date = e.split(Wa.timeZoneDelimiter)[0], n = e.substr(
    t.date.length,
    e.length
  ))), n) {
    const i = Wa.timezone.exec(n);
    i ? (t.time = n.replace(i[1], ""), t.timezone = i[1]) : t.time = n;
  }
  return t;
}
function fx(e, t) {
  const r = new RegExp(
    "^(?:(\\d{4}|[+-]\\d{" + (4 + t) + "})|(\\d{2}|[+-]\\d{" + (2 + t) + "})$)"
  ), n = e.match(r);
  if (!n) return { year: NaN, restDateString: "" };
  const i = n[1] ? parseInt(n[1]) : null, a = n[2] ? parseInt(n[2]) : null;
  return {
    year: a === null ? i : a * 100,
    restDateString: e.slice((n[1] || n[2]).length)
  };
}
function hx(e, t) {
  if (t === null) return /* @__PURE__ */ new Date(NaN);
  const r = e.match(ux);
  if (!r) return /* @__PURE__ */ new Date(NaN);
  const n = !!r[4], i = wi(r[1]), a = wi(r[2]) - 1, o = wi(r[3]), s = wi(r[4]), u = wi(r[5]) - 1;
  if (n)
    return $x(t, s, u) ? vx(t, s, u) : /* @__PURE__ */ new Date(NaN);
  {
    const l = /* @__PURE__ */ new Date(0);
    return !gx(t, a, o) || !bx(t, i) ? /* @__PURE__ */ new Date(NaN) : (l.setUTCFullYear(t, a, Math.max(i, o)), l);
  }
}
function wi(e) {
  return e ? parseInt(e) : 1;
}
function px(e) {
  const t = e.match(lx);
  if (!t) return NaN;
  const r = pu(t[1]), n = pu(t[2]), i = pu(t[3]);
  return xx(r, n, i) ? r * Xp + n * Jp + i * 1e3 : NaN;
}
function pu(e) {
  return e && parseFloat(e.replace(",", ".")) || 0;
}
function mx(e) {
  if (e === "Z") return 0;
  const t = e.match(cx);
  if (!t) return 0;
  const r = t[1] === "+" ? -1 : 1, n = parseInt(t[2]), i = t[3] && parseInt(t[3]) || 0;
  return Dx(n, i) ? r * (n * Xp + i * Jp) : NaN;
}
function vx(e, t, r) {
  const n = /* @__PURE__ */ new Date(0);
  n.setUTCFullYear(e, 0, 4);
  const i = n.getUTCDay() || 7, a = (t - 1) * 7 + r + 1 - i;
  return n.setUTCDate(n.getUTCDate() + a), n;
}
const yx = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function em(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function gx(e, t, r) {
  return t >= 0 && t <= 11 && r >= 1 && r <= (yx[t] || (em(e) ? 29 : 28));
}
function bx(e, t) {
  return t >= 1 && t <= (em(e) ? 366 : 365);
}
function $x(e, t, r) {
  return t >= 1 && t <= 53 && r >= 0 && r <= 6;
}
function xx(e, t, r) {
  return e === 24 ? t === 0 && r === 0 : r >= 0 && r < 60 && t >= 0 && t < 60 && e >= 0 && e < 25;
}
function Dx(e, t) {
  return t >= 0 && t <= 59;
}
const ni = {
  isProd: !0,
  isDev: !1,
  ssoUrl: "https://media-library-api.spillover.com/sso",
  ssoDevUrl: "http://localhost:3030/sso",
  engageGraphqlEndpoint: "https://rails-admin.spillover.com/graphql",
  engageGraphqlDevEndpoint: "http://localhost:8080/graphql",
  accountsGraphqlEndpoint: "https://accounts-api.spillover.com/graphql",
  accountsGraphqlDevEndpoint: "http://localhost:3000/graphql"
};
var mu = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, a; n < i; n++)
    (a || !(n in t)) && (a || (a = Array.prototype.slice.call(t, 0, n)), a[n] = t[n]);
  return e.concat(a || Array.prototype.slice.call(t));
}, Ex = function() {
  function e(t) {
    var r = t.debug, n = r === void 0 ? !1 : r;
    this.debug = n, this.lines = [];
  }
  return e.prototype.emit = function(t, r) {
    if (t in console) {
      var n = e.prefix;
      console[t].apply(console, mu([n], r, !1));
    }
  }, e.prototype.tailLogs = function() {
    var t = this;
    this.lines.forEach(function(r) {
      var n = r[0], i = r[1];
      return t.emit(n, i);
    });
  }, e.prototype.getLogs = function() {
    return this.lines;
  }, e.prototype.write = function(t, r) {
    var n = e.buffer;
    this.lines = mu(mu([], this.lines.slice(1 - n), !0), [[t, r]], !1), (this.debug || t !== "log") && this.emit(t, r);
  }, e.prototype.info = function() {
    for (var t = [], r = 0; r < arguments.length; r++)
      t[r] = arguments[r];
    this.write("log", t);
  }, e.prototype.warn = function() {
    for (var t = [], r = 0; r < arguments.length; r++)
      t[r] = arguments[r];
    this.write("warn", t);
  }, e.prototype.error = function() {
    for (var t = [], r = 0; r < arguments.length; r++)
      t[r] = arguments[r];
    this.write("error", t);
  }, e.buffer = 30, e.prefix = "[apollo-cache-persist]", e;
}(), wx = function() {
  function e(t) {
    var r = t.cache, n = t.serialize, i = n === void 0 ? !0 : n;
    this.cache = r, this.serialize = i;
  }
  return e.prototype.extract = function() {
    var t = this.cache.extract();
    return this.serialize && (t = JSON.stringify(t)), t;
  }, e.prototype.restore = function(t) {
    this.serialize && typeof t == "string" && (t = JSON.parse(t)), t != null && this.cache.restore(t);
  }, e;
}(), Qa = function(e, t, r, n) {
  function i(a) {
    return a instanceof r ? a : new r(function(o) {
      o(a);
    });
  }
  return new (r || (r = Promise))(function(a, o) {
    function s(c) {
      try {
        l(n.next(c));
      } catch (d) {
        o(d);
      }
    }
    function u(c) {
      try {
        l(n.throw(c));
      } catch (d) {
        o(d);
      }
    }
    function l(c) {
      c.done ? a(c.value) : i(c.value).then(s, u);
    }
    l((n = n.apply(e, t || [])).next());
  });
}, Ga = function(e, t) {
  var r = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, n, i, a, o;
  return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(l) {
    return function(c) {
      return u([l, c]);
    };
  }
  function u(l) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, l[0] && (r = 0)), r; ) try {
      if (n = 1, i && (a = l[0] & 2 ? i.return : l[0] ? i.throw || ((a = i.return) && a.call(i), 0) : i.next) && !(a = a.call(i, l[1])).done) return a;
      switch (i = 0, a && (l = [l[0] & 2, a.value]), l[0]) {
        case 0:
        case 1:
          a = l;
          break;
        case 4:
          return r.label++, { value: l[1], done: !1 };
        case 5:
          r.label++, i = l[1], l = [0];
          continue;
        case 7:
          l = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (a = r.trys, !(a = a.length > 0 && a[a.length - 1]) && (l[0] === 6 || l[0] === 2)) {
            r = 0;
            continue;
          }
          if (l[0] === 3 && (!a || l[1] > a[0] && l[1] < a[3])) {
            r.label = l[1];
            break;
          }
          if (l[0] === 6 && r.label < a[1]) {
            r.label = a[1], a = l;
            break;
          }
          if (a && r.label < a[2]) {
            r.label = a[2], r.ops.push(l);
            break;
          }
          a[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      l = t.call(e, r);
    } catch (c) {
      l = [6, c], i = 0;
    } finally {
      n = a = 0;
    }
    if (l[0] & 5) throw l[1];
    return { value: l[0] ? l[1] : void 0, done: !0 };
  }
}, tm = function() {
  function e(t) {
    var r = t.storage, n = t.key, i = n === void 0 ? "apollo-cache-persist" : n;
    this.storage = r, this.key = i;
  }
  return e.prototype.read = function() {
    return Qa(this, void 0, void 0, function() {
      return Ga(this, function(t) {
        return [2, this.storage.getItem(this.key)];
      });
    });
  }, e.prototype.write = function(t) {
    return Qa(this, void 0, void 0, function() {
      return Ga(this, function(r) {
        switch (r.label) {
          case 0:
            return [4, this.storage.setItem(this.key, t)];
          case 1:
            return r.sent(), [2];
        }
      });
    });
  }, e.prototype.purge = function() {
    return Qa(this, void 0, void 0, function() {
      return Ga(this, function(t) {
        switch (t.label) {
          case 0:
            return [4, this.storage.removeItem(this.key)];
          case 1:
            return t.sent(), [2];
        }
      });
    });
  }, e.prototype.getSize = function() {
    return Qa(this, void 0, void 0, function() {
      var t;
      return Ga(this, function(r) {
        switch (r.label) {
          case 0:
            return [4, this.storage.getItem(this.key)];
          case 1:
            return t = r.sent(), t == null ? [2, 0] : [2, typeof t == "string" ? t.length : null];
        }
      });
    });
  }, e;
}(), vu = function(e, t, r, n) {
  function i(a) {
    return a instanceof r ? a : new r(function(o) {
      o(a);
    });
  }
  return new (r || (r = Promise))(function(a, o) {
    function s(c) {
      try {
        l(n.next(c));
      } catch (d) {
        o(d);
      }
    }
    function u(c) {
      try {
        l(n.throw(c));
      } catch (d) {
        o(d);
      }
    }
    function l(c) {
      c.done ? a(c.value) : i(c.value).then(s, u);
    }
    l((n = n.apply(e, t || [])).next());
  });
}, yu = function(e, t) {
  var r = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, n, i, a, o;
  return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(l) {
    return function(c) {
      return u([l, c]);
    };
  }
  function u(l) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, l[0] && (r = 0)), r; ) try {
      if (n = 1, i && (a = l[0] & 2 ? i.return : l[0] ? i.throw || ((a = i.return) && a.call(i), 0) : i.next) && !(a = a.call(i, l[1])).done) return a;
      switch (i = 0, a && (l = [l[0] & 2, a.value]), l[0]) {
        case 0:
        case 1:
          a = l;
          break;
        case 4:
          return r.label++, { value: l[1], done: !1 };
        case 5:
          r.label++, i = l[1], l = [0];
          continue;
        case 7:
          l = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (a = r.trys, !(a = a.length > 0 && a[a.length - 1]) && (l[0] === 6 || l[0] === 2)) {
            r = 0;
            continue;
          }
          if (l[0] === 3 && (!a || l[1] > a[0] && l[1] < a[3])) {
            r.label = l[1];
            break;
          }
          if (l[0] === 6 && r.label < a[1]) {
            r.label = a[1], a = l;
            break;
          }
          if (a && r.label < a[2]) {
            r.label = a[2], r.ops.push(l);
            break;
          }
          a[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      l = t.call(e, r);
    } catch (c) {
      l = [6, c], i = 0;
    } finally {
      n = a = 0;
    }
    if (l[0] & 5) throw l[1];
    return { value: l[0] ? l[1] : void 0, done: !0 };
  }
}, rm = function() {
  function e(t, r) {
    var n = t.log, i = t.cache, a = t.storage, o = r.maxSize, s = o === void 0 ? 1024 * 1024 : o, u = r.persistenceMapper;
    this.log = n, this.cache = i, this.storage = a, this.paused = !1, u && (this.persistenceMapper = u), s && (this.maxSize = s);
  }
  return e.prototype.persist = function() {
    return vu(this, void 0, void 0, function() {
      var t, r;
      return yu(this, function(n) {
        switch (n.label) {
          case 0:
            return n.trys.push([0, 6, , 7]), t = this.cache.extract(), !this.paused && this.persistenceMapper ? [4, this.persistenceMapper(t)] : [3, 2];
          case 1:
            t = n.sent(), n.label = 2;
          case 2:
            return this.maxSize != null && typeof t == "string" && t.length > this.maxSize && !this.paused ? [4, this.purge()] : [3, 4];
          case 3:
            return n.sent(), this.paused = !0, [2];
          case 4:
            return this.paused ? [2] : [4, this.storage.write(t)];
          case 5:
            return n.sent(), this.log.info(typeof t == "string" ? "Persisted cache of size ".concat(t.length, " characters") : "Persisted cache"), [3, 7];
          case 6:
            throw r = n.sent(), this.log.error("Error persisting cache", r), r;
          case 7:
            return [2];
        }
      });
    });
  }, e.prototype.restore = function() {
    return vu(this, void 0, void 0, function() {
      var t, r;
      return yu(this, function(n) {
        switch (n.label) {
          case 0:
            return n.trys.push([0, 5, , 6]), [4, this.storage.read()];
          case 1:
            return t = n.sent(), t == null ? [3, 3] : [4, this.cache.restore(t)];
          case 2:
            return n.sent(), this.log.info(typeof t == "string" ? "Restored cache of size ".concat(t.length, " characters") : "Restored cache"), [3, 4];
          case 3:
            this.log.info("No stored cache to restore"), n.label = 4;
          case 4:
            return [3, 6];
          case 5:
            throw r = n.sent(), this.log.error("Error restoring cache", r), r;
          case 6:
            return [2];
        }
      });
    });
  }, e.prototype.purge = function() {
    return vu(this, void 0, void 0, function() {
      var t;
      return yu(this, function(r) {
        switch (r.label) {
          case 0:
            return r.trys.push([0, 2, , 3]), [4, this.storage.purge()];
          case 1:
            return r.sent(), this.log.info("Purged cache storage"), [3, 3];
          case 2:
            throw t = r.sent(), this.log.error("Error purging cache storage", t), t;
          case 3:
            return [2];
        }
      });
    });
  }, e;
}();
const nm = function(e) {
  var t = e.cache;
  return function(r) {
    var n = t.write, i = t.evict, a = t.modify, o = t.gc;
    return t.write = function() {
      for (var s = [], u = 0; u < arguments.length; u++)
        s[u] = arguments[u];
      var l = n.apply(t, s);
      return r(), l;
    }, t.evict = function() {
      for (var s = [], u = 0; u < arguments.length; u++)
        s[u] = arguments[u];
      var l = i.apply(t, s);
      return r(), l;
    }, t.modify = function() {
      for (var s = [], u = 0; u < arguments.length; u++)
        s[u] = arguments[u];
      var l = a.apply(t, s);
      return r(), l;
    }, t.gc = function() {
      for (var s = [], u = 0; u < arguments.length; u++)
        s[u] = arguments[u];
      var l = o.apply(t, s);
      return r(), l;
    }, function() {
      t.write = n, t.evict = i, t.modify = a, t.gc = o;
    };
  };
}, Cx = function(e) {
  var t = e.log, r = e.cache;
  return function(n) {
    return t.warn("Trigger option `background` not available on web; using `write` trigger"), nm({ cache: r })(n);
  };
};
var Sx = function() {
  function e(t, r) {
    var n = t.log, i = t.persistor, a = this;
    this.fire = function() {
      if (!a.debounce) {
        a.persist();
        return;
      }
      a.timeout != null && clearTimeout(a.timeout), a.timeout = setTimeout(a.persist, a.debounce);
    }, this.persist = function() {
      a.paused || a.persistor.persist();
    };
    var o = e.defaultDebounce, s = r.cache, u = r.debounce, l = r.trigger, c = l === void 0 ? "write" : l;
    if (c)
      switch (this.debounce = u ?? o, this.persistor = i, this.paused = !1, c) {
        case "write":
          this.uninstall = nm({ cache: s })(this.fire);
          break;
        case "background":
          u && n.warn("Debounce is not recommended with `background` trigger"), this.debounce = u, this.uninstall = Cx({ cache: s, log: n })(this.fire);
          break;
        default:
          if (typeof c == "function")
            this.uninstall = c(this.fire);
          else
            throw Error("Unrecognized trigger option: ".concat(c));
      }
  }
  return e.prototype.pause = function() {
    this.paused = !0;
  }, e.prototype.resume = function() {
    this.paused = !1;
  }, e.prototype.remove = function() {
    this.uninstall && (this.uninstall(), this.uninstall = null, this.paused = !0);
  }, e.defaultDebounce = 1e3, e;
}(), kx = function() {
  function e(t) {
    if (!t.cache)
      throw new Error("In order to persist your Apollo Cache, you need to pass in a cache. Please see https://www.apollographql.com/docs/react/basics/caching.html for our default InMemoryCache.");
    if (!t.storage)
      throw new Error("In order to persist your Apollo Cache, you need to pass in an underlying storage provider. Please see https://github.com/apollographql/apollo-cache-persist#storage-providers");
    var r = new Ex(t), n = new wx(t), i = new tm(t), a = new rm({ log: r, cache: n, storage: i }, t), o = new Sx({ log: r, persistor: a }, t);
    this.log = r, this.cache = n, this.storage = i, this.persistor = a, this.trigger = o;
  }
  return e.prototype.persist = function() {
    return this.persistor.persist();
  }, e.prototype.restore = function() {
    return this.persistor.restore();
  }, e.prototype.purge = function() {
    return this.persistor.purge();
  }, e.prototype.pause = function() {
    this.trigger.pause();
  }, e.prototype.resume = function() {
    this.trigger.resume();
  }, e.prototype.remove = function() {
    this.trigger.remove();
  }, e.prototype.getLogs = function(t) {
    if (t === void 0 && (t = !1), t)
      this.log.tailLogs();
    else
      return this.log.getLogs();
  }, e.prototype.getSize = function() {
    return this.storage.getSize();
  }, e;
}(), Ic = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var a in i) Object.prototype.hasOwnProperty.call(i, a) && (n[a] = i[a]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}();
(function(e) {
  Ic(t, e);
  function t(r) {
    var n = e.call(this, r) || this;
    return n.storage = new Tx(r), n.persistor = new Px({ log: n.log, cache: n.cache, storage: n.storage }, r), n;
  }
  return t.prototype.restoreSync = function() {
    this.persistor.restoreSync();
  }, t;
})(kx);
var Px = function(e) {
  Ic(t, e);
  function t(r, n) {
    var i = r.log, a = r.cache, o = r.storage;
    return e.call(this, { log: i, cache: a, storage: o }, n) || this;
  }
  return t.prototype.restoreSync = function() {
    this.cache.restore(this.storage.readSync());
  }, t;
}(rm), Tx = function(e) {
  Ic(t, e);
  function t(r) {
    return e.call(this, r) || this;
  }
  return t.prototype.readSync = function() {
    return this.storage.getItem(this.key);
  }, t;
}(tm), Ax = function() {
  function e(t) {
    this.storage = t;
  }
  return e.prototype.getItem = function(t) {
    return this.storage.getItem(t);
  }, e.prototype.removeItem = function(t) {
    return this.storage.removeItem(t);
  }, e.prototype.setItem = function(t, r) {
    return r !== null ? this.storage.setItem(t, r) : this.removeItem(t);
  }, e;
}();
function _x(e, t, r = window) {
  const n = q();
  oe(() => {
    n.current = t;
  }, [t]), oe(
    () => {
      if (!(r == null ? void 0 : r.addEventListener)) return;
      const a = (o) => n.current(o);
      return r.addEventListener(e, a), () => {
        r.removeEventListener(e, a);
      };
    },
    [e, r]
    // Re-run if eventName or element changes.
  );
}
const im = new Ax(window.localStorage);
function Rc(e) {
  try {
    const t = im.getItem(e);
    return t ? JSON.parse(t) : null;
  } catch (t) {
    return console.error(t), null;
  }
}
function am(e, t) {
  try {
    const r = t instanceof Function ? t(Rc(e)) : t;
    im.setItem(
      e,
      r !== null ? JSON.stringify(r) : null
    );
  } catch (r) {
    console.error(r);
  }
  return t;
}
function Fx(e, t, r = { sync: !1 }) {
  const [n, i] = ee(
    () => Rc(e) || t
  ), a = be(
    (s) => {
      !s.isTrusted || !r.sync || s.key === e && i(JSON.parse(s.newValue));
    },
    [e, r.sync]
  );
  return _x("storage", a), [n, (s) => i(am(e, s))];
}
class ii {
  constructor(t) {
    this.accessToken = t.accessToken, this.expiresAt = t.expiresAt, this.ownerId = t.ownerId;
  }
  static fromOAuthResponse(t, r) {
    return new ii({
      accessToken: t.access_token,
      expiresAt: ax(/* @__PURE__ */ new Date(), t.expires_in),
      ownerId: r
    });
  }
  static fromStored(t) {
    return new ii({
      ...t,
      expiresAt: sx(t.expiresAt)
    });
  }
  get dataForStorage() {
    return {
      accessToken: this.accessToken,
      expiresAt: ox(this.expiresAt),
      ownerId: this.ownerId
    };
  }
  get expiresIn() {
    return this.expiresAt - /* @__PURE__ */ new Date();
  }
  get isExpired() {
    return this.expiresIn <= 0;
  }
  get isValid() {
    return !this.isExpired;
  }
}
const Bc = "sfsAuthTokenData";
function om(e) {
  if (e.error)
    throw new Error(`SSO callback error: ${e.error}`);
  return e;
}
function Ox(e) {
  return new Promise((t, r) => {
    const n = document.createElement("iframe");
    n.src = e, n.classList.add("border-0", "w-0", "h-0", "absolute", "invisible"), n.width = 0, n.height = 0;
    const i = (a) => {
      if (a.source !== n.contentWindow) return;
      n.remove();
      const {
        data: { type: o, payload: s }
      } = a;
      switch (o) {
        case "UNAUTHENTICATED":
          window.removeEventListener("message", i), r(new Error("SSO_UNAUTHENTICATED"));
          break;
        case "SSO_CALLBACK":
          window.removeEventListener("message", i), t(om(s));
          break;
        default:
          console.error("Unknown message type", o, s);
      }
    };
    window.addEventListener("message", i), document.body.appendChild(n);
  });
}
function Ix(e) {
  return new Promise((t, r) => {
    const n = window.open(e, "ssoLogin", "width=600,height=480");
    if (!n) return r(new Error("Failed to open login popup."));
    const i = setInterval(() => {
      n.closed && (clearInterval(i), r(new Error("Login popup closed.")));
    }, 1e3), a = (o) => {
      if (o.source !== n) return;
      const {
        data: { type: s, payload: u }
      } = o;
      s === "SSO_CALLBACK" && (clearInterval(i), n.close(), window.removeEventListener("message", a), t(om(u)));
    };
    window.addEventListener("message", a);
  });
}
async function Mc({ mode: e, ownerId: t }) {
  const r = e === "development" ? ni.ssoDevUrl : ni.ssoUrl;
  let n;
  try {
    n = await Ox(r);
  } catch (a) {
    if (a.message === "SSO_UNAUTHENTICATED") {
      const o = Ix(r);
      n = await Ie.promise(
        o,
        {
          pending: "Please login to use this feature",
          success: "Successfully logged in!",
          error: "Failed to login. You need to login to use this feature."
        },
        { position: "bottom-right" }
      );
    } else
      throw a;
  }
  const i = ii.fromOAuthResponse(n, t);
  return am(Bc, i.dataForStorage), i.accessToken;
}
function sm({ ownerId: e }) {
  const t = Rc(Bc);
  if (t && t.ownerId === e) {
    const { accessToken: r } = ii.fromStored(t);
    return r;
  }
  return null;
}
const Rx = de({
  isAuthenticated: !1,
  tokenData: null,
  reauth: () => {
  }
});
function Bx({ children: e, mode: t, ownerId: r }) {
  const n = Mx({ mode: t, ownerId: r });
  return /* @__PURE__ */ R(Rx.Provider, { value: n, children: e });
}
function Mx({ mode: e, ownerId: t }) {
  let r;
  const [n, i] = Fx(
    Bc,
    null,
    { sync: !0 }
  ), a = () => {
    i(null), Mc({ mode: e, ownerId: t });
  };
  n && (t !== n.ownerId ? a() : r = ii.fromStored(n));
  const o = !!(r != null && r.accessToken);
  return {
    accessToken: r == null ? void 0 : r.accessToken,
    isAuthenticated: o,
    reauth: a
  };
}
var pl = function(e, t) {
  return pl = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, n) {
    r.__proto__ = n;
  } || function(r, n) {
    for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (r[i] = n[i]);
  }, pl(e, t);
};
function Kt(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  pl(e, t);
  function r() {
    this.constructor = e;
  }
  e.prototype = t === null ? Object.create(t) : (r.prototype = t.prototype, new r());
}
var M = function() {
  return M = Object.assign || function(t) {
    for (var r, n = 1, i = arguments.length; n < i; n++) {
      r = arguments[n];
      for (var a in r) Object.prototype.hasOwnProperty.call(r, a) && (t[a] = r[a]);
    }
    return t;
  }, M.apply(this, arguments);
};
function zt(e, t) {
  var r = {};
  for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++)
      t.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
  return r;
}
function Fr(e, t, r, n) {
  function i(a) {
    return a instanceof r ? a : new r(function(o) {
      o(a);
    });
  }
  return new (r || (r = Promise))(function(a, o) {
    function s(c) {
      try {
        l(n.next(c));
      } catch (d) {
        o(d);
      }
    }
    function u(c) {
      try {
        l(n.throw(c));
      } catch (d) {
        o(d);
      }
    }
    function l(c) {
      c.done ? a(c.value) : i(c.value).then(s, u);
    }
    l((n = n.apply(e, t || [])).next());
  });
}
function Or(e, t) {
  var r = { label: 0, sent: function() {
    if (a[0] & 1) throw a[1];
    return a[1];
  }, trys: [], ops: [] }, n, i, a, o;
  return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function s(l) {
    return function(c) {
      return u([l, c]);
    };
  }
  function u(l) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, l[0] && (r = 0)), r; ) try {
      if (n = 1, i && (a = l[0] & 2 ? i.return : l[0] ? i.throw || ((a = i.return) && a.call(i), 0) : i.next) && !(a = a.call(i, l[1])).done) return a;
      switch (i = 0, a && (l = [l[0] & 2, a.value]), l[0]) {
        case 0:
        case 1:
          a = l;
          break;
        case 4:
          return r.label++, { value: l[1], done: !1 };
        case 5:
          r.label++, i = l[1], l = [0];
          continue;
        case 7:
          l = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (a = r.trys, !(a = a.length > 0 && a[a.length - 1]) && (l[0] === 6 || l[0] === 2)) {
            r = 0;
            continue;
          }
          if (l[0] === 3 && (!a || l[1] > a[0] && l[1] < a[3])) {
            r.label = l[1];
            break;
          }
          if (l[0] === 6 && r.label < a[1]) {
            r.label = a[1], a = l;
            break;
          }
          if (a && r.label < a[2]) {
            r.label = a[2], r.ops.push(l);
            break;
          }
          a[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      l = t.call(e, r);
    } catch (c) {
      l = [6, c], i = 0;
    } finally {
      n = a = 0;
    }
    if (l[0] & 5) throw l[1];
    return { value: l[0] ? l[1] : void 0, done: !0 };
  }
}
function jt(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, a; n < i; n++)
    (a || !(n in t)) && (a || (a = Array.prototype.slice.call(t, 0, n)), a[n] = t[n]);
  return e.concat(a || Array.prototype.slice.call(t));
}
var gu = "Invariant Violation", hf = Object.setPrototypeOf, Nx = hf === void 0 ? function(e, t) {
  return e.__proto__ = t, e;
} : hf, um = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      r === void 0 && (r = gu);
      var n = e.call(this, typeof r == "number" ? gu + ": " + r + " (see https://github.com/apollographql/invariant-packages)" : r) || this;
      return n.framesToPop = 1, n.name = gu, Nx(n, t.prototype), n;
    }
    return t;
  }(Error)
);
function Jr(e, t) {
  if (!e)
    throw new um(t);
}
var lm = ["debug", "log", "warn", "error", "silent"], Lx = lm.indexOf("log");
function Za(e) {
  return function() {
    if (lm.indexOf(e) >= Lx) {
      var t = console[e] || console.log;
      return t.apply(console, arguments);
    }
  };
}
(function(e) {
  e.debug = Za("debug"), e.log = Za("log"), e.warn = Za("warn"), e.error = Za("error");
})(Jr || (Jr = {}));
var Nc = "3.10.6";
function Lt(e) {
  try {
    return e();
  } catch {
  }
}
const ml = Lt(function() {
  return globalThis;
}) || Lt(function() {
  return window;
}) || Lt(function() {
  return self;
}) || Lt(function() {
  return global;
}) || // We don't expect the Function constructor ever to be invoked at runtime, as
// long as at least one of globalThis, window, self, or global is defined, so
// we are under no obligation to make it easy for static analysis tools to
// detect syntactic usage of the Function constructor. If you think you can
// improve your static analysis to detect this obfuscation, think again. This
// is an arms race you cannot win, at least not in JavaScript.
Lt(function() {
  return Lt.constructor("return this")();
});
var pf = /* @__PURE__ */ new Map();
function vl(e) {
  var t = pf.get(e) || 1;
  return pf.set(e, t + 1), "".concat(e, ":").concat(t, ":").concat(Math.random().toString(36).slice(2));
}
function cm(e, t) {
  t === void 0 && (t = 0);
  var r = vl("stringifyForDisplay");
  return JSON.stringify(e, function(n, i) {
    return i === void 0 ? r : i;
  }, t).split(JSON.stringify(r)).join("<undefined>");
}
function Ya(e) {
  return function(t) {
    for (var r = [], n = 1; n < arguments.length; n++)
      r[n - 1] = arguments[n];
    if (typeof t == "number") {
      var i = t;
      t = Lc(i), t || (t = Vc(i, r), r = []);
    }
    e.apply(void 0, [t].concat(r));
  };
}
var ue = Object.assign(function(t, r) {
  for (var n = [], i = 2; i < arguments.length; i++)
    n[i - 2] = arguments[i];
  t || Jr(t, Lc(r, n) || Vc(r, n));
}, {
  debug: Ya(Jr.debug),
  log: Ya(Jr.log),
  warn: Ya(Jr.warn),
  error: Ya(Jr.error)
});
function ht(e) {
  for (var t = [], r = 1; r < arguments.length; r++)
    t[r - 1] = arguments[r];
  return new um(Lc(e, t) || Vc(e, t));
}
var mf = Symbol.for("ApolloErrorMessageHandler_" + Nc);
function dm(e) {
  return typeof e == "string" ? e : cm(e, 2).slice(0, 1e3);
}
function Lc(e, t) {
  if (t === void 0 && (t = []), !!e)
    return ml[mf] && ml[mf](e, t.map(dm));
}
function Vc(e, t) {
  if (t === void 0 && (t = []), !!e)
    return "An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#".concat(encodeURIComponent(JSON.stringify({
      version: Nc,
      message: e,
      args: t.map(dm)
    })));
}
function vo(e, t) {
  if (!!!e)
    throw new Error(t);
}
function Vx(e) {
  return typeof e == "object" && e !== null;
}
function jx(e, t) {
  if (!!!e)
    throw new Error(
      "Unexpected invariant triggered."
    );
}
const zx = /\r\n|[\n\r]/g;
function yl(e, t) {
  let r = 0, n = 1;
  for (const i of e.body.matchAll(zx)) {
    if (typeof i.index == "number" || jx(!1), i.index >= t)
      break;
    r = i.index + i[0].length, n += 1;
  }
  return {
    line: n,
    column: t + 1 - r
  };
}
function Kx(e) {
  return fm(
    e.source,
    yl(e.source, e.start)
  );
}
function fm(e, t) {
  const r = e.locationOffset.column - 1, n = "".padStart(r) + e.body, i = t.line - 1, a = e.locationOffset.line - 1, o = t.line + a, s = t.line === 1 ? r : 0, u = t.column + s, l = `${e.name}:${o}:${u}
`, c = n.split(/\r\n|[\n\r]/g), d = c[i];
  if (d.length > 120) {
    const f = Math.floor(u / 80), h = u % 80, p = [];
    for (let v = 0; v < d.length; v += 80)
      p.push(d.slice(v, v + 80));
    return l + vf([
      [`${o} |`, p[0]],
      ...p.slice(1, f + 1).map((v) => ["|", v]),
      ["|", "^".padStart(h)],
      ["|", p[f + 1]]
    ]);
  }
  return l + vf([
    // Lines specified like this: ["prefix", "string"],
    [`${o - 1} |`, c[i - 1]],
    [`${o} |`, d],
    ["|", "^".padStart(u)],
    [`${o + 1} |`, c[i + 1]]
  ]);
}
function vf(e) {
  const t = e.filter(([n, i]) => i !== void 0), r = Math.max(...t.map(([n]) => n.length));
  return t.map(([n, i]) => n.padStart(r) + (i ? " " + i : "")).join(`
`);
}
function Ux(e) {
  const t = e[0];
  return t == null || "kind" in t || "length" in t ? {
    nodes: t,
    source: e[1],
    positions: e[2],
    path: e[3],
    originalError: e[4],
    extensions: e[5]
  } : t;
}
class jc extends Error {
  /**
   * An array of `{ line, column }` locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */
  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */
  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */
  /**
   * The original error thrown from a field resolver during execution.
   */
  /**
   * Extension fields to add to the formatted error.
   */
  /**
   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.
   */
  constructor(t, ...r) {
    var n, i, a;
    const { nodes: o, source: s, positions: u, path: l, originalError: c, extensions: d } = Ux(r);
    super(t), this.name = "GraphQLError", this.path = l ?? void 0, this.originalError = c ?? void 0, this.nodes = yf(
      Array.isArray(o) ? o : o ? [o] : void 0
    );
    const f = yf(
      (n = this.nodes) === null || n === void 0 ? void 0 : n.map((p) => p.loc).filter((p) => p != null)
    );
    this.source = s ?? (f == null || (i = f[0]) === null || i === void 0 ? void 0 : i.source), this.positions = u ?? (f == null ? void 0 : f.map((p) => p.start)), this.locations = u && s ? u.map((p) => yl(s, p)) : f == null ? void 0 : f.map((p) => yl(p.source, p.start));
    const h = Vx(
      c == null ? void 0 : c.extensions
    ) ? c == null ? void 0 : c.extensions : void 0;
    this.extensions = (a = d ?? h) !== null && a !== void 0 ? a : /* @__PURE__ */ Object.create(null), Object.defineProperties(this, {
      message: {
        writable: !0,
        enumerable: !0
      },
      name: {
        enumerable: !1
      },
      nodes: {
        enumerable: !1
      },
      source: {
        enumerable: !1
      },
      positions: {
        enumerable: !1
      },
      originalError: {
        enumerable: !1
      }
    }), c != null && c.stack ? Object.defineProperty(this, "stack", {
      value: c.stack,
      writable: !0,
      configurable: !0
    }) : Error.captureStackTrace ? Error.captureStackTrace(this, jc) : Object.defineProperty(this, "stack", {
      value: Error().stack,
      writable: !0,
      configurable: !0
    });
  }
  get [Symbol.toStringTag]() {
    return "GraphQLError";
  }
  toString() {
    let t = this.message;
    if (this.nodes)
      for (const r of this.nodes)
        r.loc && (t += `

` + Kx(r.loc));
    else if (this.source && this.locations)
      for (const r of this.locations)
        t += `

` + fm(this.source, r);
    return t;
  }
  toJSON() {
    const t = {
      message: this.message
    };
    return this.locations != null && (t.locations = this.locations), this.path != null && (t.path = this.path), this.extensions != null && Object.keys(this.extensions).length > 0 && (t.extensions = this.extensions), t;
  }
}
function yf(e) {
  return e === void 0 || e.length === 0 ? void 0 : e;
}
function ot(e, t, r) {
  return new jc(`Syntax Error: ${r}`, {
    source: e,
    positions: [t]
  });
}
class qx {
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The Token at which this Node begins.
   */
  /**
   * The Token at which this Node ends.
   */
  /**
   * The Source document the AST represents.
   */
  constructor(t, r, n) {
    this.start = t.start, this.end = r.end, this.startToken = t, this.endToken = r, this.source = n;
  }
  get [Symbol.toStringTag]() {
    return "Location";
  }
  toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  }
}
class hm {
  /**
   * The kind of Token.
   */
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The 1-indexed line number on which this Token appears.
   */
  /**
   * The 1-indexed column number at which this Token begins.
   */
  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   *
   * Note: is undefined for punctuation tokens, but typed as string for
   * convenience in the parser.
   */
  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  constructor(t, r, n, i, a, o) {
    this.kind = t, this.start = r, this.end = n, this.line = i, this.column = a, this.value = o, this.prev = null, this.next = null;
  }
  get [Symbol.toStringTag]() {
    return "Token";
  }
  toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  }
}
const pm = {
  Name: [],
  Document: ["definitions"],
  OperationDefinition: [
    "name",
    "variableDefinitions",
    "directives",
    "selectionSet"
  ],
  VariableDefinition: ["variable", "type", "defaultValue", "directives"],
  Variable: ["name"],
  SelectionSet: ["selections"],
  Field: ["alias", "name", "arguments", "directives", "selectionSet"],
  Argument: ["name", "value"],
  FragmentSpread: ["name", "directives"],
  InlineFragment: ["typeCondition", "directives", "selectionSet"],
  FragmentDefinition: [
    "name",
    // Note: fragment variable definitions are deprecated and will removed in v17.0.0
    "variableDefinitions",
    "typeCondition",
    "directives",
    "selectionSet"
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ["values"],
  ObjectValue: ["fields"],
  ObjectField: ["name", "value"],
  Directive: ["name", "arguments"],
  NamedType: ["name"],
  ListType: ["type"],
  NonNullType: ["type"],
  SchemaDefinition: ["description", "directives", "operationTypes"],
  OperationTypeDefinition: ["type"],
  ScalarTypeDefinition: ["description", "name", "directives"],
  ObjectTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  FieldDefinition: ["description", "name", "arguments", "type", "directives"],
  InputValueDefinition: [
    "description",
    "name",
    "type",
    "defaultValue",
    "directives"
  ],
  InterfaceTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  UnionTypeDefinition: ["description", "name", "directives", "types"],
  EnumTypeDefinition: ["description", "name", "directives", "values"],
  EnumValueDefinition: ["description", "name", "directives"],
  InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
  DirectiveDefinition: ["description", "name", "arguments", "locations"],
  SchemaExtension: ["directives", "operationTypes"],
  ScalarTypeExtension: ["name", "directives"],
  ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
  InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
  UnionTypeExtension: ["name", "directives", "types"],
  EnumTypeExtension: ["name", "directives", "values"],
  InputObjectTypeExtension: ["name", "directives", "fields"]
}, Hx = new Set(Object.keys(pm));
function gf(e) {
  const t = e == null ? void 0 : e.kind;
  return typeof t == "string" && Hx.has(t);
}
var Mn;
(function(e) {
  e.QUERY = "query", e.MUTATION = "mutation", e.SUBSCRIPTION = "subscription";
})(Mn || (Mn = {}));
var gl;
(function(e) {
  e.QUERY = "QUERY", e.MUTATION = "MUTATION", e.SUBSCRIPTION = "SUBSCRIPTION", e.FIELD = "FIELD", e.FRAGMENT_DEFINITION = "FRAGMENT_DEFINITION", e.FRAGMENT_SPREAD = "FRAGMENT_SPREAD", e.INLINE_FRAGMENT = "INLINE_FRAGMENT", e.VARIABLE_DEFINITION = "VARIABLE_DEFINITION", e.SCHEMA = "SCHEMA", e.SCALAR = "SCALAR", e.OBJECT = "OBJECT", e.FIELD_DEFINITION = "FIELD_DEFINITION", e.ARGUMENT_DEFINITION = "ARGUMENT_DEFINITION", e.INTERFACE = "INTERFACE", e.UNION = "UNION", e.ENUM = "ENUM", e.ENUM_VALUE = "ENUM_VALUE", e.INPUT_OBJECT = "INPUT_OBJECT", e.INPUT_FIELD_DEFINITION = "INPUT_FIELD_DEFINITION";
})(gl || (gl = {}));
var te;
(function(e) {
  e.NAME = "Name", e.DOCUMENT = "Document", e.OPERATION_DEFINITION = "OperationDefinition", e.VARIABLE_DEFINITION = "VariableDefinition", e.SELECTION_SET = "SelectionSet", e.FIELD = "Field", e.ARGUMENT = "Argument", e.FRAGMENT_SPREAD = "FragmentSpread", e.INLINE_FRAGMENT = "InlineFragment", e.FRAGMENT_DEFINITION = "FragmentDefinition", e.VARIABLE = "Variable", e.INT = "IntValue", e.FLOAT = "FloatValue", e.STRING = "StringValue", e.BOOLEAN = "BooleanValue", e.NULL = "NullValue", e.ENUM = "EnumValue", e.LIST = "ListValue", e.OBJECT = "ObjectValue", e.OBJECT_FIELD = "ObjectField", e.DIRECTIVE = "Directive", e.NAMED_TYPE = "NamedType", e.LIST_TYPE = "ListType", e.NON_NULL_TYPE = "NonNullType", e.SCHEMA_DEFINITION = "SchemaDefinition", e.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition", e.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition", e.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition", e.FIELD_DEFINITION = "FieldDefinition", e.INPUT_VALUE_DEFINITION = "InputValueDefinition", e.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition", e.UNION_TYPE_DEFINITION = "UnionTypeDefinition", e.ENUM_TYPE_DEFINITION = "EnumTypeDefinition", e.ENUM_VALUE_DEFINITION = "EnumValueDefinition", e.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition", e.DIRECTIVE_DEFINITION = "DirectiveDefinition", e.SCHEMA_EXTENSION = "SchemaExtension", e.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension", e.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension", e.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension", e.UNION_TYPE_EXTENSION = "UnionTypeExtension", e.ENUM_TYPE_EXTENSION = "EnumTypeExtension", e.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension";
})(te || (te = {}));
function bl(e) {
  return e === 9 || e === 32;
}
function aa(e) {
  return e >= 48 && e <= 57;
}
function mm(e) {
  return e >= 97 && e <= 122 || // A-Z
  e >= 65 && e <= 90;
}
function vm(e) {
  return mm(e) || e === 95;
}
function Wx(e) {
  return mm(e) || aa(e) || e === 95;
}
function Qx(e) {
  var t;
  let r = Number.MAX_SAFE_INTEGER, n = null, i = -1;
  for (let o = 0; o < e.length; ++o) {
    var a;
    const s = e[o], u = Gx(s);
    u !== s.length && (n = (a = n) !== null && a !== void 0 ? a : o, i = o, o !== 0 && u < r && (r = u));
  }
  return e.map((o, s) => s === 0 ? o : o.slice(r)).slice(
    (t = n) !== null && t !== void 0 ? t : 0,
    i + 1
  );
}
function Gx(e) {
  let t = 0;
  for (; t < e.length && bl(e.charCodeAt(t)); )
    ++t;
  return t;
}
function Zx(e, t) {
  const r = e.replace(/"""/g, '\\"""'), n = r.split(/\r\n|[\n\r]/g), i = n.length === 1, a = n.length > 1 && n.slice(1).every((h) => h.length === 0 || bl(h.charCodeAt(0))), o = r.endsWith('\\"""'), s = e.endsWith('"') && !o, u = e.endsWith("\\"), l = s || u, c = (
    // add leading and trailing new lines only if it improves readability
    !i || e.length > 70 || l || a || o
  );
  let d = "";
  const f = i && bl(e.charCodeAt(0));
  return (c && !f || a) && (d += `
`), d += r, (c || l) && (d += `
`), '"""' + d + '"""';
}
var z;
(function(e) {
  e.SOF = "<SOF>", e.EOF = "<EOF>", e.BANG = "!", e.DOLLAR = "$", e.AMP = "&", e.PAREN_L = "(", e.PAREN_R = ")", e.SPREAD = "...", e.COLON = ":", e.EQUALS = "=", e.AT = "@", e.BRACKET_L = "[", e.BRACKET_R = "]", e.BRACE_L = "{", e.PIPE = "|", e.BRACE_R = "}", e.NAME = "Name", e.INT = "Int", e.FLOAT = "Float", e.STRING = "String", e.BLOCK_STRING = "BlockString", e.COMMENT = "Comment";
})(z || (z = {}));
class Yx {
  /**
   * The previously focused non-ignored token.
   */
  /**
   * The currently focused non-ignored token.
   */
  /**
   * The (1-indexed) line containing the current token.
   */
  /**
   * The character offset at which the current line begins.
   */
  constructor(t) {
    const r = new hm(z.SOF, 0, 0, 0, 0);
    this.source = t, this.lastToken = r, this.token = r, this.line = 1, this.lineStart = 0;
  }
  get [Symbol.toStringTag]() {
    return "Lexer";
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */
  advance() {
    return this.lastToken = this.token, this.token = this.lookahead();
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */
  lookahead() {
    let t = this.token;
    if (t.kind !== z.EOF)
      do
        if (t.next)
          t = t.next;
        else {
          const r = Xx(this, t.end);
          t.next = r, r.prev = t, t = r;
        }
      while (t.kind === z.COMMENT);
    return t;
  }
}
function Jx(e) {
  return e === z.BANG || e === z.DOLLAR || e === z.AMP || e === z.PAREN_L || e === z.PAREN_R || e === z.SPREAD || e === z.COLON || e === z.EQUALS || e === z.AT || e === z.BRACKET_L || e === z.BRACKET_R || e === z.BRACE_L || e === z.PIPE || e === z.BRACE_R;
}
function mi(e) {
  return e >= 0 && e <= 55295 || e >= 57344 && e <= 1114111;
}
function ws(e, t) {
  return ym(e.charCodeAt(t)) && gm(e.charCodeAt(t + 1));
}
function ym(e) {
  return e >= 55296 && e <= 56319;
}
function gm(e) {
  return e >= 56320 && e <= 57343;
}
function cn(e, t) {
  const r = e.source.body.codePointAt(t);
  if (r === void 0)
    return z.EOF;
  if (r >= 32 && r <= 126) {
    const n = String.fromCodePoint(r);
    return n === '"' ? `'"'` : `"${n}"`;
  }
  return "U+" + r.toString(16).toUpperCase().padStart(4, "0");
}
function Je(e, t, r, n, i) {
  const a = e.line, o = 1 + r - e.lineStart;
  return new hm(t, r, n, a, o, i);
}
function Xx(e, t) {
  const r = e.source.body, n = r.length;
  let i = t;
  for (; i < n; ) {
    const a = r.charCodeAt(i);
    switch (a) {
      case 65279:
      case 9:
      case 32:
      case 44:
        ++i;
        continue;
      case 10:
        ++i, ++e.line, e.lineStart = i;
        continue;
      case 13:
        r.charCodeAt(i + 1) === 10 ? i += 2 : ++i, ++e.line, e.lineStart = i;
        continue;
      case 35:
        return eD(e, i);
      case 33:
        return Je(e, z.BANG, i, i + 1);
      case 36:
        return Je(e, z.DOLLAR, i, i + 1);
      case 38:
        return Je(e, z.AMP, i, i + 1);
      case 40:
        return Je(e, z.PAREN_L, i, i + 1);
      case 41:
        return Je(e, z.PAREN_R, i, i + 1);
      case 46:
        if (r.charCodeAt(i + 1) === 46 && r.charCodeAt(i + 2) === 46)
          return Je(e, z.SPREAD, i, i + 3);
        break;
      case 58:
        return Je(e, z.COLON, i, i + 1);
      case 61:
        return Je(e, z.EQUALS, i, i + 1);
      case 64:
        return Je(e, z.AT, i, i + 1);
      case 91:
        return Je(e, z.BRACKET_L, i, i + 1);
      case 93:
        return Je(e, z.BRACKET_R, i, i + 1);
      case 123:
        return Je(e, z.BRACE_L, i, i + 1);
      case 124:
        return Je(e, z.PIPE, i, i + 1);
      case 125:
        return Je(e, z.BRACE_R, i, i + 1);
      case 34:
        return r.charCodeAt(i + 1) === 34 && r.charCodeAt(i + 2) === 34 ? oD(e, i) : rD(e, i);
    }
    if (aa(a) || a === 45)
      return tD(e, i, a);
    if (vm(a))
      return sD(e, i);
    throw ot(
      e.source,
      i,
      a === 39 ? `Unexpected single quote character ('), did you mean to use a double quote (")?` : mi(a) || ws(r, i) ? `Unexpected character: ${cn(e, i)}.` : `Invalid character: ${cn(e, i)}.`
    );
  }
  return Je(e, z.EOF, n, n);
}
function eD(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1;
  for (; i < n; ) {
    const a = r.charCodeAt(i);
    if (a === 10 || a === 13)
      break;
    if (mi(a))
      ++i;
    else if (ws(r, i))
      i += 2;
    else
      break;
  }
  return Je(
    e,
    z.COMMENT,
    t,
    i,
    r.slice(t + 1, i)
  );
}
function tD(e, t, r) {
  const n = e.source.body;
  let i = t, a = r, o = !1;
  if (a === 45 && (a = n.charCodeAt(++i)), a === 48) {
    if (a = n.charCodeAt(++i), aa(a))
      throw ot(
        e.source,
        i,
        `Invalid number, unexpected digit after 0: ${cn(
          e,
          i
        )}.`
      );
  } else
    i = bu(e, i, a), a = n.charCodeAt(i);
  if (a === 46 && (o = !0, a = n.charCodeAt(++i), i = bu(e, i, a), a = n.charCodeAt(i)), (a === 69 || a === 101) && (o = !0, a = n.charCodeAt(++i), (a === 43 || a === 45) && (a = n.charCodeAt(++i)), i = bu(e, i, a), a = n.charCodeAt(i)), a === 46 || vm(a))
    throw ot(
      e.source,
      i,
      `Invalid number, expected digit but got: ${cn(
        e,
        i
      )}.`
    );
  return Je(
    e,
    o ? z.FLOAT : z.INT,
    t,
    i,
    n.slice(t, i)
  );
}
function bu(e, t, r) {
  if (!aa(r))
    throw ot(
      e.source,
      t,
      `Invalid number, expected digit but got: ${cn(
        e,
        t
      )}.`
    );
  const n = e.source.body;
  let i = t + 1;
  for (; aa(n.charCodeAt(i)); )
    ++i;
  return i;
}
function rD(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1, a = i, o = "";
  for (; i < n; ) {
    const s = r.charCodeAt(i);
    if (s === 34)
      return o += r.slice(a, i), Je(e, z.STRING, t, i + 1, o);
    if (s === 92) {
      o += r.slice(a, i);
      const u = r.charCodeAt(i + 1) === 117 ? r.charCodeAt(i + 2) === 123 ? nD(e, i) : iD(e, i) : aD(e, i);
      o += u.value, i += u.size, a = i;
      continue;
    }
    if (s === 10 || s === 13)
      break;
    if (mi(s))
      ++i;
    else if (ws(r, i))
      i += 2;
    else
      throw ot(
        e.source,
        i,
        `Invalid character within String: ${cn(
          e,
          i
        )}.`
      );
  }
  throw ot(e.source, i, "Unterminated string.");
}
function nD(e, t) {
  const r = e.source.body;
  let n = 0, i = 3;
  for (; i < 12; ) {
    const a = r.charCodeAt(t + i++);
    if (a === 125) {
      if (i < 5 || !mi(n))
        break;
      return {
        value: String.fromCodePoint(n),
        size: i
      };
    }
    if (n = n << 4 | Ni(a), n < 0)
      break;
  }
  throw ot(
    e.source,
    t,
    `Invalid Unicode escape sequence: "${r.slice(
      t,
      t + i
    )}".`
  );
}
function iD(e, t) {
  const r = e.source.body, n = bf(r, t + 2);
  if (mi(n))
    return {
      value: String.fromCodePoint(n),
      size: 6
    };
  if (ym(n) && r.charCodeAt(t + 6) === 92 && r.charCodeAt(t + 7) === 117) {
    const i = bf(r, t + 8);
    if (gm(i))
      return {
        value: String.fromCodePoint(n, i),
        size: 12
      };
  }
  throw ot(
    e.source,
    t,
    `Invalid Unicode escape sequence: "${r.slice(t, t + 6)}".`
  );
}
function bf(e, t) {
  return Ni(e.charCodeAt(t)) << 12 | Ni(e.charCodeAt(t + 1)) << 8 | Ni(e.charCodeAt(t + 2)) << 4 | Ni(e.charCodeAt(t + 3));
}
function Ni(e) {
  return e >= 48 && e <= 57 ? e - 48 : e >= 65 && e <= 70 ? e - 55 : e >= 97 && e <= 102 ? e - 87 : -1;
}
function aD(e, t) {
  const r = e.source.body;
  switch (r.charCodeAt(t + 1)) {
    case 34:
      return {
        value: '"',
        size: 2
      };
    case 92:
      return {
        value: "\\",
        size: 2
      };
    case 47:
      return {
        value: "/",
        size: 2
      };
    case 98:
      return {
        value: "\b",
        size: 2
      };
    case 102:
      return {
        value: "\f",
        size: 2
      };
    case 110:
      return {
        value: `
`,
        size: 2
      };
    case 114:
      return {
        value: "\r",
        size: 2
      };
    case 116:
      return {
        value: "	",
        size: 2
      };
  }
  throw ot(
    e.source,
    t,
    `Invalid character escape sequence: "${r.slice(
      t,
      t + 2
    )}".`
  );
}
function oD(e, t) {
  const r = e.source.body, n = r.length;
  let i = e.lineStart, a = t + 3, o = a, s = "";
  const u = [];
  for (; a < n; ) {
    const l = r.charCodeAt(a);
    if (l === 34 && r.charCodeAt(a + 1) === 34 && r.charCodeAt(a + 2) === 34) {
      s += r.slice(o, a), u.push(s);
      const c = Je(
        e,
        z.BLOCK_STRING,
        t,
        a + 3,
        // Return a string of the lines joined with U+000A.
        Qx(u).join(`
`)
      );
      return e.line += u.length - 1, e.lineStart = i, c;
    }
    if (l === 92 && r.charCodeAt(a + 1) === 34 && r.charCodeAt(a + 2) === 34 && r.charCodeAt(a + 3) === 34) {
      s += r.slice(o, a), o = a + 1, a += 4;
      continue;
    }
    if (l === 10 || l === 13) {
      s += r.slice(o, a), u.push(s), l === 13 && r.charCodeAt(a + 1) === 10 ? a += 2 : ++a, s = "", o = a, i = a;
      continue;
    }
    if (mi(l))
      ++a;
    else if (ws(r, a))
      a += 2;
    else
      throw ot(
        e.source,
        a,
        `Invalid character within String: ${cn(
          e,
          a
        )}.`
      );
  }
  throw ot(e.source, a, "Unterminated string.");
}
function sD(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1;
  for (; i < n; ) {
    const a = r.charCodeAt(i);
    if (Wx(a))
      ++i;
    else
      break;
  }
  return Je(
    e,
    z.NAME,
    t,
    i,
    r.slice(t, i)
  );
}
const uD = 10, bm = 2;
function zc(e) {
  return Cs(e, []);
}
function Cs(e, t) {
  switch (typeof e) {
    case "string":
      return JSON.stringify(e);
    case "function":
      return e.name ? `[function ${e.name}]` : "[function]";
    case "object":
      return lD(e, t);
    default:
      return String(e);
  }
}
function lD(e, t) {
  if (e === null)
    return "null";
  if (t.includes(e))
    return "[Circular]";
  const r = [...t, e];
  if (cD(e)) {
    const n = e.toJSON();
    if (n !== e)
      return typeof n == "string" ? n : Cs(n, r);
  } else if (Array.isArray(e))
    return fD(e, r);
  return dD(e, r);
}
function cD(e) {
  return typeof e.toJSON == "function";
}
function dD(e, t) {
  const r = Object.entries(e);
  return r.length === 0 ? "{}" : t.length > bm ? "[" + hD(e) + "]" : "{ " + r.map(
    ([i, a]) => i + ": " + Cs(a, t)
  ).join(", ") + " }";
}
function fD(e, t) {
  if (e.length === 0)
    return "[]";
  if (t.length > bm)
    return "[Array]";
  const r = Math.min(uD, e.length), n = e.length - r, i = [];
  for (let a = 0; a < r; ++a)
    i.push(Cs(e[a], t));
  return n === 1 ? i.push("... 1 more item") : n > 1 && i.push(`... ${n} more items`), "[" + i.join(", ") + "]";
}
function hD(e) {
  const t = Object.prototype.toString.call(e).replace(/^\[object /, "").replace(/]$/, "");
  if (t === "Object" && typeof e.constructor == "function") {
    const r = e.constructor.name;
    if (typeof r == "string" && r !== "")
      return r;
  }
  return t;
}
const pD = globalThis.process && // eslint-disable-next-line no-undef
process.env.NODE_ENV === "production", mD = (
  /* c8 ignore next 6 */
  // FIXME: https://github.com/graphql/graphql-js/issues/2317
  pD ? function(t, r) {
    return t instanceof r;
  } : function(t, r) {
    if (t instanceof r)
      return !0;
    if (typeof t == "object" && t !== null) {
      var n;
      const i = r.prototype[Symbol.toStringTag], a = (
        // We still need to support constructor's name to detect conflicts with older versions of this library.
        Symbol.toStringTag in t ? t[Symbol.toStringTag] : (n = t.constructor) === null || n === void 0 ? void 0 : n.name
      );
      if (i === a) {
        const o = zc(t);
        throw new Error(`Cannot use ${i} "${o}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
      }
    }
    return !1;
  }
);
class $m {
  constructor(t, r = "GraphQL request", n = {
    line: 1,
    column: 1
  }) {
    typeof t == "string" || vo(!1, `Body must be a string. Received: ${zc(t)}.`), this.body = t, this.name = r, this.locationOffset = n, this.locationOffset.line > 0 || vo(
      !1,
      "line in locationOffset is 1-indexed and must be positive."
    ), this.locationOffset.column > 0 || vo(
      !1,
      "column in locationOffset is 1-indexed and must be positive."
    );
  }
  get [Symbol.toStringTag]() {
    return "Source";
  }
}
function vD(e) {
  return mD(e, $m);
}
function yD(e, t) {
  return new gD(e, t).parseDocument();
}
class gD {
  constructor(t, r = {}) {
    const n = vD(t) ? t : new $m(t);
    this._lexer = new Yx(n), this._options = r, this._tokenCounter = 0;
  }
  /**
   * Converts a name lex token into a name parse node.
   */
  parseName() {
    const t = this.expectToken(z.NAME);
    return this.node(t, {
      kind: te.NAME,
      value: t.value
    });
  }
  // Implements the parsing rules in the Document section.
  /**
   * Document : Definition+
   */
  parseDocument() {
    return this.node(this._lexer.token, {
      kind: te.DOCUMENT,
      definitions: this.many(
        z.SOF,
        this.parseDefinition,
        z.EOF
      )
    });
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   *
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */
  parseDefinition() {
    if (this.peek(z.BRACE_L))
      return this.parseOperationDefinition();
    const t = this.peekDescription(), r = t ? this._lexer.lookahead() : this._lexer.token;
    if (r.kind === z.NAME) {
      switch (r.value) {
        case "schema":
          return this.parseSchemaDefinition();
        case "scalar":
          return this.parseScalarTypeDefinition();
        case "type":
          return this.parseObjectTypeDefinition();
        case "interface":
          return this.parseInterfaceTypeDefinition();
        case "union":
          return this.parseUnionTypeDefinition();
        case "enum":
          return this.parseEnumTypeDefinition();
        case "input":
          return this.parseInputObjectTypeDefinition();
        case "directive":
          return this.parseDirectiveDefinition();
      }
      if (t)
        throw ot(
          this._lexer.source,
          this._lexer.token.start,
          "Unexpected description, descriptions are supported only on type definitions."
        );
      switch (r.value) {
        case "query":
        case "mutation":
        case "subscription":
          return this.parseOperationDefinition();
        case "fragment":
          return this.parseFragmentDefinition();
        case "extend":
          return this.parseTypeSystemExtension();
      }
    }
    throw this.unexpected(r);
  }
  // Implements the parsing rules in the Operations section.
  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */
  parseOperationDefinition() {
    const t = this._lexer.token;
    if (this.peek(z.BRACE_L))
      return this.node(t, {
        kind: te.OPERATION_DEFINITION,
        operation: Mn.QUERY,
        name: void 0,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet()
      });
    const r = this.parseOperationType();
    let n;
    return this.peek(z.NAME) && (n = this.parseName()), this.node(t, {
      kind: te.OPERATION_DEFINITION,
      operation: r,
      name: n,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * OperationType : one of query mutation subscription
   */
  parseOperationType() {
    const t = this.expectToken(z.NAME);
    switch (t.value) {
      case "query":
        return Mn.QUERY;
      case "mutation":
        return Mn.MUTATION;
      case "subscription":
        return Mn.SUBSCRIPTION;
    }
    throw this.unexpected(t);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */
  parseVariableDefinitions() {
    return this.optionalMany(
      z.PAREN_L,
      this.parseVariableDefinition,
      z.PAREN_R
    );
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */
  parseVariableDefinition() {
    return this.node(this._lexer.token, {
      kind: te.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(z.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(z.EQUALS) ? this.parseConstValueLiteral() : void 0,
      directives: this.parseConstDirectives()
    });
  }
  /**
   * Variable : $ Name
   */
  parseVariable() {
    const t = this._lexer.token;
    return this.expectToken(z.DOLLAR), this.node(t, {
      kind: te.VARIABLE,
      name: this.parseName()
    });
  }
  /**
   * ```
   * SelectionSet : { Selection+ }
   * ```
   */
  parseSelectionSet() {
    return this.node(this._lexer.token, {
      kind: te.SELECTION_SET,
      selections: this.many(
        z.BRACE_L,
        this.parseSelection,
        z.BRACE_R
      )
    });
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */
  parseSelection() {
    return this.peek(z.SPREAD) ? this.parseFragment() : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */
  parseField() {
    const t = this._lexer.token, r = this.parseName();
    let n, i;
    return this.expectOptionalToken(z.COLON) ? (n = r, i = this.parseName()) : i = r, this.node(t, {
      kind: te.FIELD,
      alias: n,
      name: i,
      arguments: this.parseArguments(!1),
      directives: this.parseDirectives(!1),
      selectionSet: this.peek(z.BRACE_L) ? this.parseSelectionSet() : void 0
    });
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */
  parseArguments(t) {
    const r = t ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(z.PAREN_L, r, z.PAREN_R);
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */
  parseArgument(t = !1) {
    const r = this._lexer.token, n = this.parseName();
    return this.expectToken(z.COLON), this.node(r, {
      kind: te.ARGUMENT,
      name: n,
      value: this.parseValueLiteral(t)
    });
  }
  parseConstArgument() {
    return this.parseArgument(!0);
  }
  // Implements the parsing rules in the Fragments section.
  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */
  parseFragment() {
    const t = this._lexer.token;
    this.expectToken(z.SPREAD);
    const r = this.expectOptionalKeyword("on");
    return !r && this.peek(z.NAME) ? this.node(t, {
      kind: te.FRAGMENT_SPREAD,
      name: this.parseFragmentName(),
      directives: this.parseDirectives(!1)
    }) : this.node(t, {
      kind: te.INLINE_FRAGMENT,
      typeCondition: r ? this.parseNamedType() : void 0,
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */
  parseFragmentDefinition() {
    const t = this._lexer.token;
    return this.expectKeyword("fragment"), this._options.allowLegacyFragmentVariables === !0 ? this.node(t, {
      kind: te.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      variableDefinitions: this.parseVariableDefinitions(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    }) : this.node(t, {
      kind: te.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentName : Name but not `on`
   */
  parseFragmentName() {
    if (this._lexer.token.value === "on")
      throw this.unexpected();
    return this.parseName();
  }
  // Implements the parsing rules in the Values section.
  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseValueLiteral(t) {
    const r = this._lexer.token;
    switch (r.kind) {
      case z.BRACKET_L:
        return this.parseList(t);
      case z.BRACE_L:
        return this.parseObject(t);
      case z.INT:
        return this.advanceLexer(), this.node(r, {
          kind: te.INT,
          value: r.value
        });
      case z.FLOAT:
        return this.advanceLexer(), this.node(r, {
          kind: te.FLOAT,
          value: r.value
        });
      case z.STRING:
      case z.BLOCK_STRING:
        return this.parseStringLiteral();
      case z.NAME:
        switch (this.advanceLexer(), r.value) {
          case "true":
            return this.node(r, {
              kind: te.BOOLEAN,
              value: !0
            });
          case "false":
            return this.node(r, {
              kind: te.BOOLEAN,
              value: !1
            });
          case "null":
            return this.node(r, {
              kind: te.NULL
            });
          default:
            return this.node(r, {
              kind: te.ENUM,
              value: r.value
            });
        }
      case z.DOLLAR:
        if (t)
          if (this.expectToken(z.DOLLAR), this._lexer.token.kind === z.NAME) {
            const n = this._lexer.token.value;
            throw ot(
              this._lexer.source,
              r.start,
              `Unexpected variable "$${n}" in constant value.`
            );
          } else
            throw this.unexpected(r);
        return this.parseVariable();
      default:
        throw this.unexpected();
    }
  }
  parseConstValueLiteral() {
    return this.parseValueLiteral(!0);
  }
  parseStringLiteral() {
    const t = this._lexer.token;
    return this.advanceLexer(), this.node(t, {
      kind: te.STRING,
      value: t.value,
      block: t.kind === z.BLOCK_STRING
    });
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */
  parseList(t) {
    const r = () => this.parseValueLiteral(t);
    return this.node(this._lexer.token, {
      kind: te.LIST,
      values: this.any(z.BRACKET_L, r, z.BRACKET_R)
    });
  }
  /**
   * ```
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   * ```
   */
  parseObject(t) {
    const r = () => this.parseObjectField(t);
    return this.node(this._lexer.token, {
      kind: te.OBJECT,
      fields: this.any(z.BRACE_L, r, z.BRACE_R)
    });
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */
  parseObjectField(t) {
    const r = this._lexer.token, n = this.parseName();
    return this.expectToken(z.COLON), this.node(r, {
      kind: te.OBJECT_FIELD,
      name: n,
      value: this.parseValueLiteral(t)
    });
  }
  // Implements the parsing rules in the Directives section.
  /**
   * Directives[Const] : Directive[?Const]+
   */
  parseDirectives(t) {
    const r = [];
    for (; this.peek(z.AT); )
      r.push(this.parseDirective(t));
    return r;
  }
  parseConstDirectives() {
    return this.parseDirectives(!0);
  }
  /**
   * ```
   * Directive[Const] : @ Name Arguments[?Const]?
   * ```
   */
  parseDirective(t) {
    const r = this._lexer.token;
    return this.expectToken(z.AT), this.node(r, {
      kind: te.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(t)
    });
  }
  // Implements the parsing rules in the Types section.
  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */
  parseTypeReference() {
    const t = this._lexer.token;
    let r;
    if (this.expectOptionalToken(z.BRACKET_L)) {
      const n = this.parseTypeReference();
      this.expectToken(z.BRACKET_R), r = this.node(t, {
        kind: te.LIST_TYPE,
        type: n
      });
    } else
      r = this.parseNamedType();
    return this.expectOptionalToken(z.BANG) ? this.node(t, {
      kind: te.NON_NULL_TYPE,
      type: r
    }) : r;
  }
  /**
   * NamedType : Name
   */
  parseNamedType() {
    return this.node(this._lexer.token, {
      kind: te.NAMED_TYPE,
      name: this.parseName()
    });
  }
  // Implements the parsing rules in the Type Definition section.
  peekDescription() {
    return this.peek(z.STRING) || this.peek(z.BLOCK_STRING);
  }
  /**
   * Description : StringValue
   */
  parseDescription() {
    if (this.peekDescription())
      return this.parseStringLiteral();
  }
  /**
   * ```
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   * ```
   */
  parseSchemaDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("schema");
    const n = this.parseConstDirectives(), i = this.many(
      z.BRACE_L,
      this.parseOperationTypeDefinition,
      z.BRACE_R
    );
    return this.node(t, {
      kind: te.SCHEMA_DEFINITION,
      description: r,
      directives: n,
      operationTypes: i
    });
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */
  parseOperationTypeDefinition() {
    const t = this._lexer.token, r = this.parseOperationType();
    this.expectToken(z.COLON);
    const n = this.parseNamedType();
    return this.node(t, {
      kind: te.OPERATION_TYPE_DEFINITION,
      operation: r,
      type: n
    });
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */
  parseScalarTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("scalar");
    const n = this.parseName(), i = this.parseConstDirectives();
    return this.node(t, {
      kind: te.SCALAR_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i
    });
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */
  parseObjectTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("type");
    const n = this.parseName(), i = this.parseImplementsInterfaces(), a = this.parseConstDirectives(), o = this.parseFieldsDefinition();
    return this.node(t, {
      kind: te.OBJECT_TYPE_DEFINITION,
      description: r,
      name: n,
      interfaces: i,
      directives: a,
      fields: o
    });
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */
  parseImplementsInterfaces() {
    return this.expectOptionalKeyword("implements") ? this.delimitedMany(z.AMP, this.parseNamedType) : [];
  }
  /**
   * ```
   * FieldsDefinition : { FieldDefinition+ }
   * ```
   */
  parseFieldsDefinition() {
    return this.optionalMany(
      z.BRACE_L,
      this.parseFieldDefinition,
      z.BRACE_R
    );
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */
  parseFieldDefinition() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseName(), i = this.parseArgumentDefs();
    this.expectToken(z.COLON);
    const a = this.parseTypeReference(), o = this.parseConstDirectives();
    return this.node(t, {
      kind: te.FIELD_DEFINITION,
      description: r,
      name: n,
      arguments: i,
      type: a,
      directives: o
    });
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */
  parseArgumentDefs() {
    return this.optionalMany(
      z.PAREN_L,
      this.parseInputValueDef,
      z.PAREN_R
    );
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */
  parseInputValueDef() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseName();
    this.expectToken(z.COLON);
    const i = this.parseTypeReference();
    let a;
    this.expectOptionalToken(z.EQUALS) && (a = this.parseConstValueLiteral());
    const o = this.parseConstDirectives();
    return this.node(t, {
      kind: te.INPUT_VALUE_DEFINITION,
      description: r,
      name: n,
      type: i,
      defaultValue: a,
      directives: o
    });
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */
  parseInterfaceTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("interface");
    const n = this.parseName(), i = this.parseImplementsInterfaces(), a = this.parseConstDirectives(), o = this.parseFieldsDefinition();
    return this.node(t, {
      kind: te.INTERFACE_TYPE_DEFINITION,
      description: r,
      name: n,
      interfaces: i,
      directives: a,
      fields: o
    });
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */
  parseUnionTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("union");
    const n = this.parseName(), i = this.parseConstDirectives(), a = this.parseUnionMemberTypes();
    return this.node(t, {
      kind: te.UNION_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      types: a
    });
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */
  parseUnionMemberTypes() {
    return this.expectOptionalToken(z.EQUALS) ? this.delimitedMany(z.PIPE, this.parseNamedType) : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */
  parseEnumTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("enum");
    const n = this.parseName(), i = this.parseConstDirectives(), a = this.parseEnumValuesDefinition();
    return this.node(t, {
      kind: te.ENUM_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      values: a
    });
  }
  /**
   * ```
   * EnumValuesDefinition : { EnumValueDefinition+ }
   * ```
   */
  parseEnumValuesDefinition() {
    return this.optionalMany(
      z.BRACE_L,
      this.parseEnumValueDefinition,
      z.BRACE_R
    );
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   */
  parseEnumValueDefinition() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseEnumValueName(), i = this.parseConstDirectives();
    return this.node(t, {
      kind: te.ENUM_VALUE_DEFINITION,
      description: r,
      name: n,
      directives: i
    });
  }
  /**
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseEnumValueName() {
    if (this._lexer.token.value === "true" || this._lexer.token.value === "false" || this._lexer.token.value === "null")
      throw ot(
        this._lexer.source,
        this._lexer.token.start,
        `${Ja(
          this._lexer.token
        )} is reserved and cannot be used for an enum value.`
      );
    return this.parseName();
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */
  parseInputObjectTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("input");
    const n = this.parseName(), i = this.parseConstDirectives(), a = this.parseInputFieldsDefinition();
    return this.node(t, {
      kind: te.INPUT_OBJECT_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      fields: a
    });
  }
  /**
   * ```
   * InputFieldsDefinition : { InputValueDefinition+ }
   * ```
   */
  parseInputFieldsDefinition() {
    return this.optionalMany(
      z.BRACE_L,
      this.parseInputValueDef,
      z.BRACE_R
    );
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */
  parseTypeSystemExtension() {
    const t = this._lexer.lookahead();
    if (t.kind === z.NAME)
      switch (t.value) {
        case "schema":
          return this.parseSchemaExtension();
        case "scalar":
          return this.parseScalarTypeExtension();
        case "type":
          return this.parseObjectTypeExtension();
        case "interface":
          return this.parseInterfaceTypeExtension();
        case "union":
          return this.parseUnionTypeExtension();
        case "enum":
          return this.parseEnumTypeExtension();
        case "input":
          return this.parseInputObjectTypeExtension();
      }
    throw this.unexpected(t);
  }
  /**
   * ```
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   * ```
   */
  parseSchemaExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("schema");
    const r = this.parseConstDirectives(), n = this.optionalMany(
      z.BRACE_L,
      this.parseOperationTypeDefinition,
      z.BRACE_R
    );
    if (r.length === 0 && n.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.SCHEMA_EXTENSION,
      directives: r,
      operationTypes: n
    });
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */
  parseScalarTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("scalar");
    const r = this.parseName(), n = this.parseConstDirectives();
    if (n.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.SCALAR_TYPE_EXTENSION,
      name: r,
      directives: n
    });
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */
  parseObjectTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("type");
    const r = this.parseName(), n = this.parseImplementsInterfaces(), i = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    if (n.length === 0 && i.length === 0 && a.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.OBJECT_TYPE_EXTENSION,
      name: r,
      interfaces: n,
      directives: i,
      fields: a
    });
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */
  parseInterfaceTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("interface");
    const r = this.parseName(), n = this.parseImplementsInterfaces(), i = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    if (n.length === 0 && i.length === 0 && a.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.INTERFACE_TYPE_EXTENSION,
      name: r,
      interfaces: n,
      directives: i,
      fields: a
    });
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */
  parseUnionTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("union");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseUnionMemberTypes();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.UNION_TYPE_EXTENSION,
      name: r,
      directives: n,
      types: i
    });
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */
  parseEnumTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("enum");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseEnumValuesDefinition();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.ENUM_TYPE_EXTENSION,
      name: r,
      directives: n,
      values: i
    });
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */
  parseInputObjectTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("input");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseInputFieldsDefinition();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: te.INPUT_OBJECT_TYPE_EXTENSION,
      name: r,
      directives: n,
      fields: i
    });
  }
  /**
   * ```
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   * ```
   */
  parseDirectiveDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("directive"), this.expectToken(z.AT);
    const n = this.parseName(), i = this.parseArgumentDefs(), a = this.expectOptionalKeyword("repeatable");
    this.expectKeyword("on");
    const o = this.parseDirectiveLocations();
    return this.node(t, {
      kind: te.DIRECTIVE_DEFINITION,
      description: r,
      name: n,
      arguments: i,
      repeatable: a,
      locations: o
    });
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */
  parseDirectiveLocations() {
    return this.delimitedMany(z.PIPE, this.parseDirectiveLocation);
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */
  parseDirectiveLocation() {
    const t = this._lexer.token, r = this.parseName();
    if (Object.prototype.hasOwnProperty.call(gl, r.value))
      return r;
    throw this.unexpected(t);
  }
  // Core parsing utility functions
  /**
   * Returns a node that, if configured to do so, sets a "loc" field as a
   * location object, used to identify the place in the source that created a
   * given parsed object.
   */
  node(t, r) {
    return this._options.noLocation !== !0 && (r.loc = new qx(
      t,
      this._lexer.lastToken,
      this._lexer.source
    )), r;
  }
  /**
   * Determines if the next token is of a given kind
   */
  peek(t) {
    return this._lexer.token.kind === t;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectToken(t) {
    const r = this._lexer.token;
    if (r.kind === t)
      return this.advanceLexer(), r;
    throw ot(
      this._lexer.source,
      r.start,
      `Expected ${xm(t)}, found ${Ja(r)}.`
    );
  }
  /**
   * If the next token is of the given kind, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalToken(t) {
    return this._lexer.token.kind === t ? (this.advanceLexer(), !0) : !1;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectKeyword(t) {
    const r = this._lexer.token;
    if (r.kind === z.NAME && r.value === t)
      this.advanceLexer();
    else
      throw ot(
        this._lexer.source,
        r.start,
        `Expected "${t}", found ${Ja(r)}.`
      );
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalKeyword(t) {
    const r = this._lexer.token;
    return r.kind === z.NAME && r.value === t ? (this.advanceLexer(), !0) : !1;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */
  unexpected(t) {
    const r = t ?? this._lexer.token;
    return ot(
      this._lexer.source,
      r.start,
      `Unexpected ${Ja(r)}.`
    );
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  any(t, r, n) {
    this.expectToken(t);
    const i = [];
    for (; !this.expectOptionalToken(n); )
      i.push(r.call(this));
    return i;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  optionalMany(t, r, n) {
    if (this.expectOptionalToken(t)) {
      const i = [];
      do
        i.push(r.call(this));
      while (!this.expectOptionalToken(n));
      return i;
    }
    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  many(t, r, n) {
    this.expectToken(t);
    const i = [];
    do
      i.push(r.call(this));
    while (!this.expectOptionalToken(n));
    return i;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */
  delimitedMany(t, r) {
    this.expectOptionalToken(t);
    const n = [];
    do
      n.push(r.call(this));
    while (this.expectOptionalToken(t));
    return n;
  }
  advanceLexer() {
    const { maxTokens: t } = this._options, r = this._lexer.advance();
    if (t !== void 0 && r.kind !== z.EOF && (++this._tokenCounter, this._tokenCounter > t))
      throw ot(
        this._lexer.source,
        r.start,
        `Document contains more that ${t} tokens. Parsing aborted.`
      );
  }
}
function Ja(e) {
  const t = e.value;
  return xm(e.kind) + (t != null ? ` "${t}"` : "");
}
function xm(e) {
  return Jx(e) ? `"${e}"` : e;
}
function bD(e) {
  return `"${e.replace($D, xD)}"`;
}
const $D = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
function xD(e) {
  return DD[e.charCodeAt(0)];
}
const DD = [
  "\\u0000",
  "\\u0001",
  "\\u0002",
  "\\u0003",
  "\\u0004",
  "\\u0005",
  "\\u0006",
  "\\u0007",
  "\\b",
  "\\t",
  "\\n",
  "\\u000B",
  "\\f",
  "\\r",
  "\\u000E",
  "\\u000F",
  "\\u0010",
  "\\u0011",
  "\\u0012",
  "\\u0013",
  "\\u0014",
  "\\u0015",
  "\\u0016",
  "\\u0017",
  "\\u0018",
  "\\u0019",
  "\\u001A",
  "\\u001B",
  "\\u001C",
  "\\u001D",
  "\\u001E",
  "\\u001F",
  "",
  "",
  '\\"',
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 2F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 3F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 4F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\\\",
  "",
  "",
  "",
  // 5F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  // 6F
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\u007F",
  "\\u0080",
  "\\u0081",
  "\\u0082",
  "\\u0083",
  "\\u0084",
  "\\u0085",
  "\\u0086",
  "\\u0087",
  "\\u0088",
  "\\u0089",
  "\\u008A",
  "\\u008B",
  "\\u008C",
  "\\u008D",
  "\\u008E",
  "\\u008F",
  "\\u0090",
  "\\u0091",
  "\\u0092",
  "\\u0093",
  "\\u0094",
  "\\u0095",
  "\\u0096",
  "\\u0097",
  "\\u0098",
  "\\u0099",
  "\\u009A",
  "\\u009B",
  "\\u009C",
  "\\u009D",
  "\\u009E",
  "\\u009F"
], Kc = Object.freeze({});
function vr(e, t, r = pm) {
  const n = /* @__PURE__ */ new Map();
  for (const $ of Object.values(te))
    n.set($, ED(t, $));
  let i, a = Array.isArray(e), o = [e], s = -1, u = [], l = e, c, d;
  const f = [], h = [];
  do {
    s++;
    const $ = s === o.length, m = $ && u.length !== 0;
    if ($) {
      if (c = h.length === 0 ? void 0 : f[f.length - 1], l = d, d = h.pop(), m)
        if (a) {
          l = l.slice();
          let D = 0;
          for (const [S, P] of u) {
            const B = S - D;
            P === null ? (l.splice(B, 1), D++) : l[B] = P;
          }
        } else {
          l = Object.defineProperties(
            {},
            Object.getOwnPropertyDescriptors(l)
          );
          for (const [D, S] of u)
            l[D] = S;
        }
      s = i.index, o = i.keys, u = i.edits, a = i.inArray, i = i.prev;
    } else if (d) {
      if (c = a ? s : o[s], l = d[c], l == null)
        continue;
      f.push(c);
    }
    let b;
    if (!Array.isArray(l)) {
      var p, v;
      gf(l) || vo(!1, `Invalid AST Node: ${zc(l)}.`);
      const D = $ ? (p = n.get(l.kind)) === null || p === void 0 ? void 0 : p.leave : (v = n.get(l.kind)) === null || v === void 0 ? void 0 : v.enter;
      if (b = D == null ? void 0 : D.call(t, l, c, d, f, h), b === Kc)
        break;
      if (b === !1) {
        if (!$) {
          f.pop();
          continue;
        }
      } else if (b !== void 0 && (u.push([c, b]), !$))
        if (gf(b))
          l = b;
        else {
          f.pop();
          continue;
        }
    }
    if (b === void 0 && m && u.push([c, l]), $)
      f.pop();
    else {
      var g;
      i = {
        inArray: a,
        index: s,
        keys: o,
        edits: u,
        prev: i
      }, a = Array.isArray(l), o = a ? l : (g = r[l.kind]) !== null && g !== void 0 ? g : [], s = -1, u = [], d && h.push(d), d = l;
    }
  } while (i !== void 0);
  return u.length !== 0 ? u[u.length - 1][1] : e;
}
function ED(e, t) {
  const r = e[t];
  return typeof r == "object" ? r : typeof r == "function" ? {
    enter: r,
    leave: void 0
  } : {
    enter: e.enter,
    leave: e.leave
  };
}
function wD(e) {
  return vr(e, SD);
}
const CD = 80, SD = {
  Name: {
    leave: (e) => e.value
  },
  Variable: {
    leave: (e) => "$" + e.name
  },
  // Document
  Document: {
    leave: (e) => re(e.definitions, `

`)
  },
  OperationDefinition: {
    leave(e) {
      const t = De("(", re(e.variableDefinitions, ", "), ")"), r = re(
        [
          e.operation,
          re([e.name, t]),
          re(e.directives, " ")
        ],
        " "
      );
      return (r === "query" ? "" : r + " ") + e.selectionSet;
    }
  },
  VariableDefinition: {
    leave: ({ variable: e, type: t, defaultValue: r, directives: n }) => e + ": " + t + De(" = ", r) + De(" ", re(n, " "))
  },
  SelectionSet: {
    leave: ({ selections: e }) => Mt(e)
  },
  Field: {
    leave({ alias: e, name: t, arguments: r, directives: n, selectionSet: i }) {
      const a = De("", e, ": ") + t;
      let o = a + De("(", re(r, ", "), ")");
      return o.length > CD && (o = a + De(`(
`, yo(re(r, `
`)), `
)`)), re([o, re(n, " "), i], " ");
    }
  },
  Argument: {
    leave: ({ name: e, value: t }) => e + ": " + t
  },
  // Fragments
  FragmentSpread: {
    leave: ({ name: e, directives: t }) => "..." + e + De(" ", re(t, " "))
  },
  InlineFragment: {
    leave: ({ typeCondition: e, directives: t, selectionSet: r }) => re(
      [
        "...",
        De("on ", e),
        re(t, " "),
        r
      ],
      " "
    )
  },
  FragmentDefinition: {
    leave: ({ name: e, typeCondition: t, variableDefinitions: r, directives: n, selectionSet: i }) => (
      // or removed in the future.
      `fragment ${e}${De("(", re(r, ", "), ")")} on ${t} ${De("", re(n, " "), " ")}` + i
    )
  },
  // Value
  IntValue: {
    leave: ({ value: e }) => e
  },
  FloatValue: {
    leave: ({ value: e }) => e
  },
  StringValue: {
    leave: ({ value: e, block: t }) => t ? Zx(e) : bD(e)
  },
  BooleanValue: {
    leave: ({ value: e }) => e ? "true" : "false"
  },
  NullValue: {
    leave: () => "null"
  },
  EnumValue: {
    leave: ({ value: e }) => e
  },
  ListValue: {
    leave: ({ values: e }) => "[" + re(e, ", ") + "]"
  },
  ObjectValue: {
    leave: ({ fields: e }) => "{" + re(e, ", ") + "}"
  },
  ObjectField: {
    leave: ({ name: e, value: t }) => e + ": " + t
  },
  // Directive
  Directive: {
    leave: ({ name: e, arguments: t }) => "@" + e + De("(", re(t, ", "), ")")
  },
  // Type
  NamedType: {
    leave: ({ name: e }) => e
  },
  ListType: {
    leave: ({ type: e }) => "[" + e + "]"
  },
  NonNullType: {
    leave: ({ type: e }) => e + "!"
  },
  // Type System Definitions
  SchemaDefinition: {
    leave: ({ description: e, directives: t, operationTypes: r }) => De("", e, `
`) + re(["schema", re(t, " "), Mt(r)], " ")
  },
  OperationTypeDefinition: {
    leave: ({ operation: e, type: t }) => e + ": " + t
  },
  ScalarTypeDefinition: {
    leave: ({ description: e, name: t, directives: r }) => De("", e, `
`) + re(["scalar", t, re(r, " ")], " ")
  },
  ObjectTypeDefinition: {
    leave: ({ description: e, name: t, interfaces: r, directives: n, fields: i }) => De("", e, `
`) + re(
      [
        "type",
        t,
        De("implements ", re(r, " & ")),
        re(n, " "),
        Mt(i)
      ],
      " "
    )
  },
  FieldDefinition: {
    leave: ({ description: e, name: t, arguments: r, type: n, directives: i }) => De("", e, `
`) + t + ($f(r) ? De(`(
`, yo(re(r, `
`)), `
)`) : De("(", re(r, ", "), ")")) + ": " + n + De(" ", re(i, " "))
  },
  InputValueDefinition: {
    leave: ({ description: e, name: t, type: r, defaultValue: n, directives: i }) => De("", e, `
`) + re(
      [t + ": " + r, De("= ", n), re(i, " ")],
      " "
    )
  },
  InterfaceTypeDefinition: {
    leave: ({ description: e, name: t, interfaces: r, directives: n, fields: i }) => De("", e, `
`) + re(
      [
        "interface",
        t,
        De("implements ", re(r, " & ")),
        re(n, " "),
        Mt(i)
      ],
      " "
    )
  },
  UnionTypeDefinition: {
    leave: ({ description: e, name: t, directives: r, types: n }) => De("", e, `
`) + re(
      ["union", t, re(r, " "), De("= ", re(n, " | "))],
      " "
    )
  },
  EnumTypeDefinition: {
    leave: ({ description: e, name: t, directives: r, values: n }) => De("", e, `
`) + re(["enum", t, re(r, " "), Mt(n)], " ")
  },
  EnumValueDefinition: {
    leave: ({ description: e, name: t, directives: r }) => De("", e, `
`) + re([t, re(r, " ")], " ")
  },
  InputObjectTypeDefinition: {
    leave: ({ description: e, name: t, directives: r, fields: n }) => De("", e, `
`) + re(["input", t, re(r, " "), Mt(n)], " ")
  },
  DirectiveDefinition: {
    leave: ({ description: e, name: t, arguments: r, repeatable: n, locations: i }) => De("", e, `
`) + "directive @" + t + ($f(r) ? De(`(
`, yo(re(r, `
`)), `
)`) : De("(", re(r, ", "), ")")) + (n ? " repeatable" : "") + " on " + re(i, " | ")
  },
  SchemaExtension: {
    leave: ({ directives: e, operationTypes: t }) => re(
      ["extend schema", re(e, " "), Mt(t)],
      " "
    )
  },
  ScalarTypeExtension: {
    leave: ({ name: e, directives: t }) => re(["extend scalar", e, re(t, " ")], " ")
  },
  ObjectTypeExtension: {
    leave: ({ name: e, interfaces: t, directives: r, fields: n }) => re(
      [
        "extend type",
        e,
        De("implements ", re(t, " & ")),
        re(r, " "),
        Mt(n)
      ],
      " "
    )
  },
  InterfaceTypeExtension: {
    leave: ({ name: e, interfaces: t, directives: r, fields: n }) => re(
      [
        "extend interface",
        e,
        De("implements ", re(t, " & ")),
        re(r, " "),
        Mt(n)
      ],
      " "
    )
  },
  UnionTypeExtension: {
    leave: ({ name: e, directives: t, types: r }) => re(
      [
        "extend union",
        e,
        re(t, " "),
        De("= ", re(r, " | "))
      ],
      " "
    )
  },
  EnumTypeExtension: {
    leave: ({ name: e, directives: t, values: r }) => re(["extend enum", e, re(t, " "), Mt(r)], " ")
  },
  InputObjectTypeExtension: {
    leave: ({ name: e, directives: t, fields: r }) => re(["extend input", e, re(t, " "), Mt(r)], " ")
  }
};
function re(e, t = "") {
  var r;
  return (r = e == null ? void 0 : e.filter((n) => n).join(t)) !== null && r !== void 0 ? r : "";
}
function Mt(e) {
  return De(`{
`, yo(re(e, `
`)), `
}`);
}
function De(e, t, r = "") {
  return t != null && t !== "" ? e + t + r : "";
}
function yo(e) {
  return De("  ", e.replace(/\n/g, `
  `));
}
function $f(e) {
  var t;
  return (t = e == null ? void 0 : e.some((r) => r.includes(`
`))) !== null && t !== void 0 ? t : !1;
}
function xf(e) {
  return e.kind === te.FIELD || e.kind === te.FRAGMENT_SPREAD || e.kind === te.INLINE_FRAGMENT;
}
function Pa(e, t) {
  var r = e.directives;
  return !r || !r.length ? !0 : TD(r).every(function(n) {
    var i = n.directive, a = n.ifArgument, o = !1;
    return a.value.kind === "Variable" ? (o = t && t[a.value.name.value], ue(o !== void 0, 68, i.name.value)) : o = a.value.value, i.name.value === "skip" ? !o : o;
  });
}
function oa(e, t, r) {
  var n = new Set(e), i = n.size;
  return vr(t, {
    Directive: function(a) {
      if (n.delete(a.name.value) && (!r || !n.size))
        return Kc;
    }
  }), r ? !n.size : n.size < i;
}
function kD(e) {
  return e && oa(["client", "export"], e, !0);
}
function PD(e) {
  var t = e.name.value;
  return t === "skip" || t === "include";
}
function TD(e) {
  var t = [];
  return e && e.length && e.forEach(function(r) {
    if (PD(r)) {
      var n = r.arguments, i = r.name.value;
      ue(n && n.length === 1, 69, i);
      var a = n[0];
      ue(a.name && a.name.value === "if", 70, i);
      var o = a.value;
      ue(o && (o.kind === "Variable" || o.kind === "BooleanValue"), 71, i), t.push({ directive: r, ifArgument: a });
    }
  }), t;
}
const AD = () => /* @__PURE__ */ Object.create(null), { forEach: _D, slice: Df } = Array.prototype, { hasOwnProperty: FD } = Object.prototype;
let vi = class Dm {
  constructor(t = !0, r = AD) {
    this.weakness = t, this.makeData = r;
  }
  lookup() {
    return this.lookupArray(arguments);
  }
  lookupArray(t) {
    let r = this;
    return _D.call(t, (n) => r = r.getChildTrie(n)), FD.call(r, "data") ? r.data : r.data = this.makeData(Df.call(t));
  }
  peek() {
    return this.peekArray(arguments);
  }
  peekArray(t) {
    let r = this;
    for (let n = 0, i = t.length; r && n < i; ++n) {
      const a = r.mapFor(t[n], !1);
      r = a && a.get(t[n]);
    }
    return r && r.data;
  }
  remove() {
    return this.removeArray(arguments);
  }
  removeArray(t) {
    let r;
    if (t.length) {
      const n = t[0], i = this.mapFor(n, !1), a = i && i.get(n);
      a && (r = a.removeArray(Df.call(t, 1)), !a.data && !a.weak && !(a.strong && a.strong.size) && i.delete(n));
    } else
      r = this.data, delete this.data;
    return r;
  }
  getChildTrie(t) {
    const r = this.mapFor(t, !0);
    let n = r.get(t);
    return n || r.set(t, n = new Dm(this.weakness, this.makeData)), n;
  }
  mapFor(t, r) {
    return this.weakness && OD(t) ? this.weak || (r ? this.weak = /* @__PURE__ */ new WeakMap() : void 0) : this.strong || (r ? this.strong = /* @__PURE__ */ new Map() : void 0);
  }
};
function OD(e) {
  switch (typeof e) {
    case "object":
      if (e === null)
        break;
    case "function":
      return !0;
  }
  return !1;
}
var xn = typeof WeakMap == "function" && !Lt(function() {
  return navigator.product == "ReactNative" && !global.HermesInternal;
}), Em = typeof WeakSet == "function", Uc = typeof Symbol == "function" && typeof Symbol.for == "function", Ss = Uc && Symbol.asyncIterator, wm = typeof Lt(function() {
  return window.document.createElement;
}) == "function", ID = (
  // Following advice found in this comment from @domenic (maintainer of jsdom):
  // https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327
  //
  // Since we control the version of Jest and jsdom used when running Apollo
  // Client tests, and that version is recent enought to include " jsdom/x.y.z"
  // at the end of the user agent string, I believe this case is all we need to
  // check. Testing for "Node.js" was recommended for backwards compatibility
  // with older version of jsdom, but we don't have that problem.
  Lt(function() {
    return navigator.userAgent.indexOf("jsdom") >= 0;
  }) || !1
), RD = wm && !ID;
function Ue(e) {
  return e !== null && typeof e == "object";
}
function BD(e, t) {
  var r = t, n = [];
  e.definitions.forEach(function(a) {
    if (a.kind === "OperationDefinition")
      throw ht(
        72,
        a.operation,
        a.name ? " named '".concat(a.name.value, "'") : ""
      );
    a.kind === "FragmentDefinition" && n.push(a);
  }), typeof r > "u" && (ue(n.length === 1, 73, n.length), r = n[0].name.value);
  var i = M(M({}, e), { definitions: jt([
    {
      kind: "OperationDefinition",
      // OperationTypeNode is an enum
      operation: "query",
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "FragmentSpread",
            name: {
              kind: "Name",
              value: r
            }
          }
        ]
      }
    }
  ], e.definitions, !0) });
  return i;
}
function ks(e) {
  e === void 0 && (e = []);
  var t = {};
  return e.forEach(function(r) {
    t[r.name.value] = r;
  }), t;
}
function Ps(e, t) {
  switch (e.kind) {
    case "InlineFragment":
      return e;
    case "FragmentSpread": {
      var r = e.name.value;
      if (typeof t == "function")
        return t(r);
      var n = t && t[r];
      return ue(n, 74, r), n || null;
    }
    default:
      return null;
  }
}
function MD() {
}
class $l {
  constructor(t = 1 / 0, r = MD) {
    this.max = t, this.dispose = r, this.map = /* @__PURE__ */ new Map(), this.newest = null, this.oldest = null;
  }
  has(t) {
    return this.map.has(t);
  }
  get(t) {
    const r = this.getNode(t);
    return r && r.value;
  }
  get size() {
    return this.map.size;
  }
  getNode(t) {
    const r = this.map.get(t);
    if (r && r !== this.newest) {
      const { older: n, newer: i } = r;
      i && (i.older = n), n && (n.newer = i), r.older = this.newest, r.older.newer = r, r.newer = null, this.newest = r, r === this.oldest && (this.oldest = i);
    }
    return r;
  }
  set(t, r) {
    let n = this.getNode(t);
    return n ? n.value = r : (n = {
      key: t,
      value: r,
      newer: null,
      older: this.newest
    }, this.newest && (this.newest.newer = n), this.newest = n, this.oldest = this.oldest || n, this.map.set(t, n), n.value);
  }
  clean() {
    for (; this.oldest && this.map.size > this.max; )
      this.delete(this.oldest.key);
  }
  delete(t) {
    const r = this.map.get(t);
    return r ? (r === this.newest && (this.newest = r.older), r === this.oldest && (this.oldest = r.newer), r.newer && (r.newer.older = r.older), r.older && (r.older.newer = r.newer), this.map.delete(t), this.dispose(r.value, t), !0) : !1;
  }
}
function xl() {
}
const ND = xl, LD = typeof WeakRef < "u" ? WeakRef : function(e) {
  return { deref: () => e };
}, VD = typeof WeakMap < "u" ? WeakMap : Map, jD = typeof FinalizationRegistry < "u" ? FinalizationRegistry : function() {
  return {
    register: xl,
    unregister: xl
  };
}, zD = 10024;
class Oo {
  constructor(t = 1 / 0, r = ND) {
    this.max = t, this.dispose = r, this.map = new VD(), this.newest = null, this.oldest = null, this.unfinalizedNodes = /* @__PURE__ */ new Set(), this.finalizationScheduled = !1, this.size = 0, this.finalize = () => {
      const n = this.unfinalizedNodes.values();
      for (let i = 0; i < zD; i++) {
        const a = n.next().value;
        if (!a)
          break;
        this.unfinalizedNodes.delete(a);
        const o = a.key;
        delete a.key, a.keyRef = new LD(o), this.registry.register(o, a, a);
      }
      this.unfinalizedNodes.size > 0 ? queueMicrotask(this.finalize) : this.finalizationScheduled = !1;
    }, this.registry = new jD(this.deleteNode.bind(this));
  }
  has(t) {
    return this.map.has(t);
  }
  get(t) {
    const r = this.getNode(t);
    return r && r.value;
  }
  getNode(t) {
    const r = this.map.get(t);
    if (r && r !== this.newest) {
      const { older: n, newer: i } = r;
      i && (i.older = n), n && (n.newer = i), r.older = this.newest, r.older.newer = r, r.newer = null, this.newest = r, r === this.oldest && (this.oldest = i);
    }
    return r;
  }
  set(t, r) {
    let n = this.getNode(t);
    return n ? n.value = r : (n = {
      key: t,
      value: r,
      newer: null,
      older: this.newest
    }, this.newest && (this.newest.newer = n), this.newest = n, this.oldest = this.oldest || n, this.scheduleFinalization(n), this.map.set(t, n), this.size++, n.value);
  }
  clean() {
    for (; this.oldest && this.size > this.max; )
      this.deleteNode(this.oldest);
  }
  deleteNode(t) {
    t === this.newest && (this.newest = t.older), t === this.oldest && (this.oldest = t.newer), t.newer && (t.newer.older = t.older), t.older && (t.older.newer = t.newer), this.size--;
    const r = t.key || t.keyRef && t.keyRef.deref();
    this.dispose(t.value, r), t.keyRef ? this.registry.unregister(t) : this.unfinalizedNodes.delete(t), r && this.map.delete(r);
  }
  delete(t) {
    const r = this.map.get(t);
    return r ? (this.deleteNode(r), !0) : !1;
  }
  scheduleFinalization(t) {
    this.unfinalizedNodes.add(t), this.finalizationScheduled || (this.finalizationScheduled = !0, queueMicrotask(this.finalize));
  }
}
var $u = /* @__PURE__ */ new WeakSet();
function Cm(e) {
  e.size <= (e.max || -1) || $u.has(e) || ($u.add(e), setTimeout(function() {
    e.clean(), $u.delete(e);
  }, 100));
}
var qc = function(e, t) {
  var r = new Oo(e, t);
  return r.set = function(n, i) {
    var a = Oo.prototype.set.call(this, n, i);
    return Cm(this), a;
  }, r;
}, KD = function(e, t) {
  var r = new $l(e, t);
  return r.set = function(n, i) {
    var a = $l.prototype.set.call(this, n, i);
    return Cm(this), a;
  }, r;
}, UD = Symbol.for("apollo.cacheSize"), Xt = M({}, ml[UD]), Yr = {};
function Hc(e, t) {
  Yr[e] = t;
}
var qD = globalThis.__DEV__ !== !1 ? GD : void 0, HD = globalThis.__DEV__ !== !1 ? ZD : void 0, WD = globalThis.__DEV__ !== !1 ? Sm : void 0;
function QD() {
  var e = {
    parser: 1e3,
    canonicalStringify: 1e3,
    print: 2e3,
    "documentTransform.cache": 2e3,
    "queryManager.getDocumentInfo": 2e3,
    "PersistedQueryLink.persistedQueryHashes": 2e3,
    "fragmentRegistry.transform": 2e3,
    "fragmentRegistry.lookup": 1e3,
    "fragmentRegistry.findFragmentSpreads": 4e3,
    "cache.fragmentQueryDocuments": 1e3,
    "removeTypenameFromVariables.getVariableDefinitions": 2e3,
    "inMemoryCache.maybeBroadcastWatch": 5e3,
    "inMemoryCache.executeSelectionSet": 5e4,
    "inMemoryCache.executeSubSelectedArray": 1e4
  };
  return Object.fromEntries(Object.entries(e).map(function(t) {
    var r = t[0], n = t[1];
    return [
      r,
      Xt[r] || n
    ];
  }));
}
function GD() {
  var e, t, r, n, i;
  if (globalThis.__DEV__ === !1)
    throw new Error("only supported in development mode");
  return {
    limits: QD(),
    sizes: M({ print: (e = Yr.print) === null || e === void 0 ? void 0 : e.call(Yr), parser: (t = Yr.parser) === null || t === void 0 ? void 0 : t.call(Yr), canonicalStringify: (r = Yr.canonicalStringify) === null || r === void 0 ? void 0 : r.call(Yr), links: El(this.link), queryManager: {
      getDocumentInfo: this.queryManager.transformCache.size,
      documentTransforms: Pm(this.queryManager.documentTransform)
    } }, (i = (n = this.cache).getMemoryInternals) === null || i === void 0 ? void 0 : i.call(n))
  };
}
function Sm() {
  return {
    cache: {
      fragmentQueryDocuments: Ir(this.getFragmentDoc)
    }
  };
}
function ZD() {
  var e = this.config.fragments;
  return M(M({}, Sm.apply(this)), { addTypenameDocumentTransform: Pm(this.addTypenameTransform), inMemoryCache: {
    executeSelectionSet: Ir(this.storeReader.executeSelectionSet),
    executeSubSelectedArray: Ir(this.storeReader.executeSubSelectedArray),
    maybeBroadcastWatch: Ir(this.maybeBroadcastWatch)
  }, fragmentRegistry: {
    findFragmentSpreads: Ir(e == null ? void 0 : e.findFragmentSpreads),
    lookup: Ir(e == null ? void 0 : e.lookup),
    transform: Ir(e == null ? void 0 : e.transform)
  } });
}
function YD(e) {
  return !!e && "dirtyKey" in e;
}
function Ir(e) {
  return YD(e) ? e.size : void 0;
}
function km(e) {
  return e != null;
}
function Pm(e) {
  return Dl(e).map(function(t) {
    return { cache: t };
  });
}
function Dl(e) {
  return e ? jt(jt([
    Ir(e == null ? void 0 : e.performWork)
  ], Dl(e == null ? void 0 : e.left), !0), Dl(e == null ? void 0 : e.right), !0).filter(km) : [];
}
function El(e) {
  var t;
  return e ? jt(jt([
    (t = e == null ? void 0 : e.getMemoryInternals) === null || t === void 0 ? void 0 : t.call(e)
  ], El(e == null ? void 0 : e.left), !0), El(e == null ? void 0 : e.right), !0).filter(km) : [];
}
var Lr = Object.assign(function(t) {
  return JSON.stringify(t, JD);
}, {
  reset: function() {
    Nn = new KD(
      Xt.canonicalStringify || 1e3
      /* defaultCacheSizes.canonicalStringify */
    );
  }
});
globalThis.__DEV__ !== !1 && Hc("canonicalStringify", function() {
  return Nn.size;
});
var Nn;
Lr.reset();
function JD(e, t) {
  if (t && typeof t == "object") {
    var r = Object.getPrototypeOf(t);
    if (r === Object.prototype || r === null) {
      var n = Object.keys(t);
      if (n.every(XD))
        return t;
      var i = JSON.stringify(n), a = Nn.get(i);
      if (!a) {
        n.sort();
        var o = JSON.stringify(n);
        a = Nn.get(o) || n, Nn.set(i, a), Nn.set(o, a);
      }
      var s = Object.create(r);
      return a.forEach(function(u) {
        s[u] = t[u];
      }), s;
    }
  }
  return t;
}
function XD(e, t, r) {
  return t === 0 || r[t - 1] <= e;
}
function Hn(e) {
  return { __ref: String(e) };
}
function Ae(e) {
  return !!(e && typeof e == "object" && typeof e.__ref == "string");
}
function e5(e) {
  return Ue(e) && e.kind === "Document" && Array.isArray(e.definitions);
}
function t5(e) {
  return e.kind === "StringValue";
}
function r5(e) {
  return e.kind === "BooleanValue";
}
function n5(e) {
  return e.kind === "IntValue";
}
function i5(e) {
  return e.kind === "FloatValue";
}
function a5(e) {
  return e.kind === "Variable";
}
function o5(e) {
  return e.kind === "ObjectValue";
}
function s5(e) {
  return e.kind === "ListValue";
}
function u5(e) {
  return e.kind === "EnumValue";
}
function l5(e) {
  return e.kind === "NullValue";
}
function ai(e, t, r, n) {
  if (n5(r) || i5(r))
    e[t.value] = Number(r.value);
  else if (r5(r) || t5(r))
    e[t.value] = r.value;
  else if (o5(r)) {
    var i = {};
    r.fields.map(function(o) {
      return ai(i, o.name, o.value, n);
    }), e[t.value] = i;
  } else if (a5(r)) {
    var a = (n || {})[r.name.value];
    e[t.value] = a;
  } else if (s5(r))
    e[t.value] = r.values.map(function(o) {
      var s = {};
      return ai(s, t, o, n), s[t.value];
    });
  else if (u5(r))
    e[t.value] = r.value;
  else if (l5(r))
    e[t.value] = null;
  else
    throw ht(83, t.value, r.kind);
}
function c5(e, t) {
  var r = null;
  e.directives && (r = {}, e.directives.forEach(function(i) {
    r[i.name.value] = {}, i.arguments && i.arguments.forEach(function(a) {
      var o = a.name, s = a.value;
      return ai(r[i.name.value], o, s, t);
    });
  }));
  var n = null;
  return e.arguments && e.arguments.length && (n = {}, e.arguments.forEach(function(i) {
    var a = i.name, o = i.value;
    return ai(n, a, o, t);
  })), Tm(e.name.value, n, r);
}
var d5 = [
  "connection",
  "include",
  "skip",
  "client",
  "rest",
  "export",
  "nonreactive"
], Ci = Lr, Tm = Object.assign(function(e, t, r) {
  if (t && r && r.connection && r.connection.key)
    if (r.connection.filter && r.connection.filter.length > 0) {
      var n = r.connection.filter ? r.connection.filter : [];
      n.sort();
      var i = {};
      return n.forEach(function(s) {
        i[s] = t[s];
      }), "".concat(r.connection.key, "(").concat(Ci(i), ")");
    } else
      return r.connection.key;
  var a = e;
  if (t) {
    var o = Ci(t);
    a += "(".concat(o, ")");
  }
  return r && Object.keys(r).forEach(function(s) {
    d5.indexOf(s) === -1 && (r[s] && Object.keys(r[s]).length ? a += "@".concat(s, "(").concat(Ci(r[s]), ")") : a += "@".concat(s));
  }), a;
}, {
  setStringify: function(e) {
    var t = Ci;
    return Ci = e, t;
  }
});
function Ts(e, t) {
  if (e.arguments && e.arguments.length) {
    var r = {};
    return e.arguments.forEach(function(n) {
      var i = n.name, a = n.value;
      return ai(r, i, a, t);
    }), r;
  }
  return null;
}
function Vr(e) {
  return e.alias ? e.alias.value : e.name.value;
}
function wl(e, t, r) {
  for (var n, i = 0, a = t.selections; i < a.length; i++) {
    var o = a[i];
    if (jr(o)) {
      if (o.name.value === "__typename")
        return e[Vr(o)];
    } else n ? n.push(o) : n = [o];
  }
  if (typeof e.__typename == "string")
    return e.__typename;
  if (n)
    for (var s = 0, u = n; s < u.length; s++) {
      var o = u[s], l = wl(e, Ps(o, r).selectionSet, r);
      if (typeof l == "string")
        return l;
    }
}
function jr(e) {
  return e.kind === "Field";
}
function f5(e) {
  return e.kind === "InlineFragment";
}
function Ta(e) {
  ue(e && e.kind === "Document", 75);
  var t = e.definitions.filter(function(r) {
    return r.kind !== "FragmentDefinition";
  }).map(function(r) {
    if (r.kind !== "OperationDefinition")
      throw ht(76, r.kind);
    return r;
  });
  return ue(t.length <= 1, 77, t.length), e;
}
function Aa(e) {
  return Ta(e), e.definitions.filter(function(t) {
    return t.kind === "OperationDefinition";
  })[0];
}
function Cl(e) {
  return e.definitions.filter(function(t) {
    return t.kind === "OperationDefinition" && !!t.name;
  }).map(function(t) {
    return t.name.value;
  })[0] || null;
}
function As(e) {
  return e.definitions.filter(function(t) {
    return t.kind === "FragmentDefinition";
  });
}
function Am(e) {
  var t = Aa(e);
  return ue(t && t.operation === "query", 78), t;
}
function h5(e) {
  ue(e.kind === "Document", 79), ue(e.definitions.length <= 1, 80);
  var t = e.definitions[0];
  return ue(t.kind === "FragmentDefinition", 81), t;
}
function _a(e) {
  Ta(e);
  for (var t, r = 0, n = e.definitions; r < n.length; r++) {
    var i = n[r];
    if (i.kind === "OperationDefinition") {
      var a = i.operation;
      if (a === "query" || a === "mutation" || a === "subscription")
        return i;
    }
    i.kind === "FragmentDefinition" && !t && (t = i);
  }
  if (t)
    return t;
  throw ht(82);
}
function Wc(e) {
  var t = /* @__PURE__ */ Object.create(null), r = e && e.variableDefinitions;
  return r && r.length && r.forEach(function(n) {
    n.defaultValue && ai(t, n.variable.name, n.defaultValue);
  }), t;
}
const p5 = () => /* @__PURE__ */ Object.create(null), { forEach: m5, slice: v5 } = Array.prototype, { hasOwnProperty: y5 } = Object.prototype;
class Qc {
  constructor(t = !0, r = p5) {
    this.weakness = t, this.makeData = r;
  }
  lookup(...t) {
    return this.lookupArray(t);
  }
  lookupArray(t) {
    let r = this;
    return m5.call(t, (n) => r = r.getChildTrie(n)), y5.call(r, "data") ? r.data : r.data = this.makeData(v5.call(t));
  }
  peek(...t) {
    return this.peekArray(t);
  }
  peekArray(t) {
    let r = this;
    for (let n = 0, i = t.length; r && n < i; ++n) {
      const a = this.weakness && Ef(t[n]) ? r.weak : r.strong;
      r = a && a.get(t[n]);
    }
    return r && r.data;
  }
  getChildTrie(t) {
    const r = this.weakness && Ef(t) ? this.weak || (this.weak = /* @__PURE__ */ new WeakMap()) : this.strong || (this.strong = /* @__PURE__ */ new Map());
    let n = r.get(t);
    return n || r.set(t, n = new Qc(this.weakness, this.makeData)), n;
  }
}
function Ef(e) {
  switch (typeof e) {
    case "object":
      if (e === null)
        break;
    case "function":
      return !0;
  }
  return !1;
}
let st = null;
const wf = {};
let g5 = 1;
const b5 = () => class {
  constructor() {
    this.id = [
      "slot",
      g5++,
      Date.now(),
      Math.random().toString(36).slice(2)
    ].join(":");
  }
  hasValue() {
    for (let t = st; t; t = t.parent)
      if (this.id in t.slots) {
        const r = t.slots[this.id];
        if (r === wf)
          break;
        return t !== st && (st.slots[this.id] = r), !0;
      }
    return st && (st.slots[this.id] = wf), !1;
  }
  getValue() {
    if (this.hasValue())
      return st.slots[this.id];
  }
  withValue(t, r, n, i) {
    const a = {
      __proto__: null,
      [this.id]: t
    }, o = st;
    st = { parent: o, slots: a };
    try {
      return r.apply(i, n);
    } finally {
      st = o;
    }
  }
  // Capture the current context and wrap a callback function so that it
  // reestablishes the captured context when called.
  static bind(t) {
    const r = st;
    return function() {
      const n = st;
      try {
        return st = r, t.apply(this, arguments);
      } finally {
        st = n;
      }
    };
  }
  // Immediately run a callback function without any captured context.
  static noContext(t, r, n) {
    if (st) {
      const i = st;
      try {
        return st = null, t.apply(n, r);
      } finally {
        st = i;
      }
    } else
      return t.apply(n, r);
  }
};
function Cf(e) {
  try {
    return e();
  } catch {
  }
}
const xu = "@wry/context:Slot", $5 = (
  // Prefer globalThis when available.
  // https://github.com/benjamn/wryware/issues/347
  Cf(() => globalThis) || // Fall back to global, which works in Node.js and may be converted by some
  // bundlers to the appropriate identifier (window, self, ...) depending on the
  // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224
  Cf(() => global) || // Otherwise, use a dummy host that's local to this module. We used to fall
  // back to using the Array constructor as a namespace, but that was flagged in
  // https://github.com/benjamn/wryware/issues/347, and can be avoided.
  /* @__PURE__ */ Object.create(null)
), Sf = $5, _m = Sf[xu] || // Earlier versions of this package stored the globalKey property on the Array
// constructor, so we check there as well, to prevent Slot class duplication.
Array[xu] || function(e) {
  try {
    Object.defineProperty(Sf, xu, {
      value: e,
      enumerable: !1,
      writable: !1,
      // When it was possible for globalHost to be the Array constructor (a
      // legacy Slot dedup strategy), it was important for the property to be
      // configurable:true so it could be deleted. That does not seem to be as
      // important when globalHost is the global object, but I don't want to
      // cause similar problems again, and configurable:true seems safest.
      // https://github.com/endojs/endo/issues/576#issuecomment-1178274008
      configurable: !0
    });
  } finally {
    return e;
  }
}(b5()), _s = new _m(), { hasOwnProperty: x5 } = Object.prototype, Gc = Array.from || function(e) {
  const t = [];
  return e.forEach((r) => t.push(r)), t;
};
function Zc(e) {
  const { unsubscribe: t } = e;
  typeof t == "function" && (e.unsubscribe = void 0, t());
}
const sa = [], D5 = 100;
function oi(e, t) {
  if (!e)
    throw new Error(t || "assertion failure");
}
function Fm(e, t) {
  const r = e.length;
  return (
    // Unknown values are not equal to each other.
    r > 0 && // Both values must be ordinary (or both exceptional) to be equal.
    r === t.length && // The underlying value or exception must be the same.
    e[r - 1] === t[r - 1]
  );
}
function Om(e) {
  switch (e.length) {
    case 0:
      throw new Error("unknown value");
    case 1:
      return e[0];
    case 2:
      throw e[1];
  }
}
function Im(e) {
  return e.slice(0);
}
class Fs {
  constructor(t) {
    this.fn = t, this.parents = /* @__PURE__ */ new Set(), this.childValues = /* @__PURE__ */ new Map(), this.dirtyChildren = null, this.dirty = !0, this.recomputing = !1, this.value = [], this.deps = null, ++Fs.count;
  }
  peek() {
    if (this.value.length === 1 && !zr(this))
      return kf(this), this.value[0];
  }
  // This is the most important method of the Entry API, because it
  // determines whether the cached this.value can be returned immediately,
  // or must be recomputed. The overall performance of the caching system
  // depends on the truth of the following observations: (1) this.dirty is
  // usually false, (2) this.dirtyChildren is usually null/empty, and thus
  // (3) valueGet(this.value) is usually returned without recomputation.
  recompute(t) {
    return oi(!this.recomputing, "already recomputing"), kf(this), zr(this) ? E5(this, t) : Om(this.value);
  }
  setDirty() {
    this.dirty || (this.dirty = !0, Rm(this), Zc(this));
  }
  dispose() {
    this.setDirty(), Vm(this), Yc(this, (t, r) => {
      t.setDirty(), jm(t, this);
    });
  }
  forget() {
    this.dispose();
  }
  dependOn(t) {
    t.add(this), this.deps || (this.deps = sa.pop() || /* @__PURE__ */ new Set()), this.deps.add(t);
  }
  forgetDeps() {
    this.deps && (Gc(this.deps).forEach((t) => t.delete(this)), this.deps.clear(), sa.push(this.deps), this.deps = null);
  }
}
Fs.count = 0;
function kf(e) {
  const t = _s.getValue();
  if (t)
    return e.parents.add(t), t.childValues.has(e) || t.childValues.set(e, []), zr(e) ? Mm(t, e) : Nm(t, e), t;
}
function E5(e, t) {
  return Vm(e), _s.withValue(e, w5, [e, t]), S5(e, t) && C5(e), Om(e.value);
}
function w5(e, t) {
  e.recomputing = !0;
  const { normalizeResult: r } = e;
  let n;
  r && e.value.length === 1 && (n = Im(e.value)), e.value.length = 0;
  try {
    if (e.value[0] = e.fn.apply(null, t), r && n && !Fm(n, e.value))
      try {
        e.value[0] = r(e.value[0], n[0]);
      } catch {
      }
  } catch (i) {
    e.value[1] = i;
  }
  e.recomputing = !1;
}
function zr(e) {
  return e.dirty || !!(e.dirtyChildren && e.dirtyChildren.size);
}
function C5(e) {
  e.dirty = !1, !zr(e) && Bm(e);
}
function Rm(e) {
  Yc(e, Mm);
}
function Bm(e) {
  Yc(e, Nm);
}
function Yc(e, t) {
  const r = e.parents.size;
  if (r) {
    const n = Gc(e.parents);
    for (let i = 0; i < r; ++i)
      t(n[i], e);
  }
}
function Mm(e, t) {
  oi(e.childValues.has(t)), oi(zr(t));
  const r = !zr(e);
  if (!e.dirtyChildren)
    e.dirtyChildren = sa.pop() || /* @__PURE__ */ new Set();
  else if (e.dirtyChildren.has(t))
    return;
  e.dirtyChildren.add(t), r && Rm(e);
}
function Nm(e, t) {
  oi(e.childValues.has(t)), oi(!zr(t));
  const r = e.childValues.get(t);
  r.length === 0 ? e.childValues.set(t, Im(t.value)) : Fm(r, t.value) || e.setDirty(), Lm(e, t), !zr(e) && Bm(e);
}
function Lm(e, t) {
  const r = e.dirtyChildren;
  r && (r.delete(t), r.size === 0 && (sa.length < D5 && sa.push(r), e.dirtyChildren = null));
}
function Vm(e) {
  e.childValues.size > 0 && e.childValues.forEach((t, r) => {
    jm(e, r);
  }), e.forgetDeps(), oi(e.dirtyChildren === null);
}
function jm(e, t) {
  t.parents.delete(e), e.childValues.delete(t), Lm(e, t);
}
function S5(e, t) {
  if (typeof e.subscribe == "function")
    try {
      Zc(e), e.unsubscribe = e.subscribe.apply(null, t);
    } catch {
      return e.setDirty(), !1;
    }
  return !0;
}
const k5 = {
  setDirty: !0,
  dispose: !0,
  forget: !0
  // Fully remove parent Entry from LRU cache and computation graph
};
function zm(e) {
  const t = /* @__PURE__ */ new Map();
  function r(n) {
    const i = _s.getValue();
    if (i) {
      let a = t.get(n);
      a || t.set(n, a = /* @__PURE__ */ new Set()), i.dependOn(a);
    }
  }
  return r.dirty = function(i, a) {
    const o = t.get(i);
    if (o) {
      const s = a && x5.call(k5, a) ? a : "setDirty";
      Gc(o).forEach((u) => u[s]()), t.delete(i), Zc(o);
    }
  }, r;
}
let Pf;
function P5(...e) {
  return (Pf || (Pf = new Qc(typeof WeakMap == "function"))).lookupArray(e);
}
const Du = /* @__PURE__ */ new Set();
function ua(e, { max: t = Math.pow(2, 16), keyArgs: r, makeCacheKey: n = P5, normalizeResult: i, subscribe: a, cache: o = $l } = /* @__PURE__ */ Object.create(null)) {
  const s = typeof o == "function" ? new o(t, (f) => f.dispose()) : o, u = function() {
    const f = n.apply(null, r ? r.apply(null, arguments) : arguments);
    if (f === void 0)
      return e.apply(null, arguments);
    let h = s.get(f);
    h || (s.set(f, h = new Fs(e)), h.normalizeResult = i, h.subscribe = a, h.forget = () => s.delete(f));
    const p = h.recompute(Array.prototype.slice.call(arguments));
    return s.set(f, h), Du.add(s), _s.hasValue() || (Du.forEach((v) => v.clean()), Du.clear()), p;
  };
  Object.defineProperty(u, "size", {
    get: () => s.size,
    configurable: !1,
    enumerable: !1
  }), Object.freeze(u.options = {
    max: t,
    keyArgs: r,
    makeCacheKey: n,
    normalizeResult: i,
    subscribe: a,
    cache: s
  });
  function l(f) {
    const h = f && s.get(f);
    h && h.setDirty();
  }
  u.dirtyKey = l, u.dirty = function() {
    l(n.apply(null, arguments));
  };
  function c(f) {
    const h = f && s.get(f);
    if (h)
      return h.peek();
  }
  u.peekKey = c, u.peek = function() {
    return c(n.apply(null, arguments));
  };
  function d(f) {
    return f ? s.delete(f) : !1;
  }
  return u.forgetKey = d, u.forget = function() {
    return d(n.apply(null, arguments));
  }, u.makeCacheKey = n, u.getKey = r ? function() {
    return n.apply(null, r.apply(null, arguments));
  } : n, Object.freeze(u);
}
function T5(e) {
  return e;
}
var Km = (
  /** @class */
  function() {
    function e(t, r) {
      r === void 0 && (r = /* @__PURE__ */ Object.create(null)), this.resultCache = Em ? /* @__PURE__ */ new WeakSet() : /* @__PURE__ */ new Set(), this.transform = t, r.getCacheKey && (this.getCacheKey = r.getCacheKey), this.cached = r.cache !== !1, this.resetCache();
    }
    return e.prototype.getCacheKey = function(t) {
      return [t];
    }, e.identity = function() {
      return new e(T5, { cache: !1 });
    }, e.split = function(t, r, n) {
      return n === void 0 && (n = e.identity()), Object.assign(new e(
        function(i) {
          var a = t(i) ? r : n;
          return a.transformDocument(i);
        },
        // Reasonably assume both `left` and `right` transforms handle their own caching
        { cache: !1 }
      ), { left: r, right: n });
    }, e.prototype.resetCache = function() {
      var t = this;
      if (this.cached) {
        var r = new vi(xn);
        this.performWork = ua(e.prototype.performWork.bind(this), {
          makeCacheKey: function(n) {
            var i = t.getCacheKey(n);
            if (i)
              return ue(Array.isArray(i), 67), r.lookupArray(i);
          },
          max: Xt["documentTransform.cache"],
          cache: Oo
        });
      }
    }, e.prototype.performWork = function(t) {
      return Ta(t), this.transform(t);
    }, e.prototype.transformDocument = function(t) {
      if (this.resultCache.has(t))
        return t;
      var r = this.performWork(t);
      return this.resultCache.add(r), r;
    }, e.prototype.concat = function(t) {
      var r = this;
      return Object.assign(new e(
        function(n) {
          return t.transformDocument(r.transformDocument(n));
        },
        // Reasonably assume both transforms handle their own caching
        { cache: !1 }
      ), {
        left: this,
        right: t
      });
    }, e;
  }()
), Hi, Os = Object.assign(function(e) {
  var t = Hi.get(e);
  return t || (t = wD(e), Hi.set(e, t)), t;
}, {
  reset: function() {
    Hi = new qc(
      Xt.print || 2e3
      /* defaultCacheSizes.print */
    );
  }
});
Os.reset();
globalThis.__DEV__ !== !1 && Hc("print", function() {
  return Hi ? Hi.size : 0;
});
var qe = Array.isArray;
function Bt(e) {
  return Array.isArray(e) && e.length > 0;
}
var Tf = {
  kind: te.FIELD,
  name: {
    kind: te.NAME,
    value: "__typename"
  }
};
function Um(e, t) {
  return !e || e.selectionSet.selections.every(function(r) {
    return r.kind === te.FRAGMENT_SPREAD && Um(t[r.name.value], t);
  });
}
function A5(e) {
  return Um(Aa(e) || h5(e), ks(As(e))) ? null : e;
}
function _5(e) {
  var t = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Map();
  return e.forEach(function(n) {
    n && (n.name ? t.set(n.name, n) : n.test && r.set(n.test, n));
  }), function(n) {
    var i = t.get(n.name.value);
    return !i && r.size && r.forEach(function(a, o) {
      o(n) && (i = a);
    }), i;
  };
}
function Af(e) {
  var t = /* @__PURE__ */ new Map();
  return function(n) {
    n === void 0 && (n = e);
    var i = t.get(n);
    return i || t.set(n, i = {
      // Variable and fragment spread names used directly within this
      // operation or fragment definition, as identified by key. These sets
      // will be populated during the first traversal of the document in
      // removeDirectivesFromDocument below.
      variables: /* @__PURE__ */ new Set(),
      fragmentSpreads: /* @__PURE__ */ new Set()
    }), i;
  };
}
function qm(e, t) {
  Ta(t);
  for (var r = Af(""), n = Af(""), i = function($) {
    for (var m = 0, b = void 0; m < $.length && (b = $[m]); ++m)
      if (!qe(b)) {
        if (b.kind === te.OPERATION_DEFINITION)
          return r(b.name && b.name.value);
        if (b.kind === te.FRAGMENT_DEFINITION)
          return n(b.name.value);
      }
    return globalThis.__DEV__ !== !1 && ue.error(84), null;
  }, a = 0, o = t.definitions.length - 1; o >= 0; --o)
    t.definitions[o].kind === te.OPERATION_DEFINITION && ++a;
  var s = _5(e), u = function($) {
    return Bt($) && $.map(s).some(function(m) {
      return m && m.remove;
    });
  }, l = /* @__PURE__ */ new Map(), c = !1, d = {
    enter: function($) {
      if (u($.directives))
        return c = !0, null;
    }
  }, f = vr(t, {
    // These two AST node types share the same implementation, defined above.
    Field: d,
    InlineFragment: d,
    VariableDefinition: {
      enter: function() {
        return !1;
      }
    },
    Variable: {
      enter: function($, m, b, D, S) {
        var P = i(S);
        P && P.variables.add($.name.value);
      }
    },
    FragmentSpread: {
      enter: function($, m, b, D, S) {
        if (u($.directives))
          return c = !0, null;
        var P = i(S);
        P && P.fragmentSpreads.add($.name.value);
      }
    },
    FragmentDefinition: {
      enter: function($, m, b, D) {
        l.set(JSON.stringify(D), $);
      },
      leave: function($, m, b, D) {
        var S = l.get(JSON.stringify(D));
        if ($ === S)
          return $;
        if (
          // This logic applies only if the document contains one or more
          // operations, since removing all fragments from a document containing
          // only fragments makes the document useless.
          a > 0 && $.selectionSet.selections.every(function(P) {
            return P.kind === te.FIELD && P.name.value === "__typename";
          })
        )
          return n($.name.value).removed = !0, c = !0, null;
      }
    },
    Directive: {
      leave: function($) {
        if (s($))
          return c = !0, null;
      }
    }
  });
  if (!c)
    return t;
  var h = function($) {
    return $.transitiveVars || ($.transitiveVars = new Set($.variables), $.removed || $.fragmentSpreads.forEach(function(m) {
      h(n(m)).transitiveVars.forEach(function(b) {
        $.transitiveVars.add(b);
      });
    })), $;
  }, p = /* @__PURE__ */ new Set();
  f.definitions.forEach(function($) {
    $.kind === te.OPERATION_DEFINITION ? h(r($.name && $.name.value)).fragmentSpreads.forEach(function(m) {
      p.add(m);
    }) : $.kind === te.FRAGMENT_DEFINITION && // If there are no operations in the document, then all fragment
    // definitions count as usages of their own fragment names. This heuristic
    // prevents accidentally removing all fragment definitions from the
    // document just because it contains no operations that use the fragments.
    a === 0 && !n($.name.value).removed && p.add($.name.value);
  }), p.forEach(function($) {
    h(n($)).fragmentSpreads.forEach(function(m) {
      p.add(m);
    });
  });
  var v = function($) {
    return !!// A fragment definition will be removed if there are no spreads that refer
    // to it, or the fragment was explicitly removed because it had no fields
    // other than __typename.
    (!p.has($) || n($).removed);
  }, g = {
    enter: function($) {
      if (v($.name.value))
        return null;
    }
  };
  return A5(vr(f, {
    // If the fragment is going to be removed, then leaving any dangling
    // FragmentSpread nodes with the same name would be a mistake.
    FragmentSpread: g,
    // This is where the fragment definition is actually removed.
    FragmentDefinition: g,
    OperationDefinition: {
      leave: function($) {
        if ($.variableDefinitions) {
          var m = h(
            // If an operation is anonymous, we use the empty string as its key.
            r($.name && $.name.value)
          ).transitiveVars;
          if (m.size < $.variableDefinitions.length)
            return M(M({}, $), { variableDefinitions: $.variableDefinitions.filter(function(b) {
              return m.has(b.variable.name.value);
            }) });
        }
      }
    }
  }));
}
var Jc = Object.assign(function(e) {
  return vr(e, {
    SelectionSet: {
      enter: function(t, r, n) {
        if (!(n && n.kind === te.OPERATION_DEFINITION)) {
          var i = t.selections;
          if (i) {
            var a = i.some(function(s) {
              return jr(s) && (s.name.value === "__typename" || s.name.value.lastIndexOf("__", 0) === 0);
            });
            if (!a) {
              var o = n;
              if (!(jr(o) && o.directives && o.directives.some(function(s) {
                return s.name.value === "export";
              })))
                return M(M({}, t), { selections: jt(jt([], i, !0), [Tf], !1) });
            }
          }
        }
      }
    }
  });
}, {
  added: function(e) {
    return e === Tf;
  }
});
function F5(e) {
  var t = _a(e), r = t.operation;
  if (r === "query")
    return e;
  var n = vr(e, {
    OperationDefinition: {
      enter: function(i) {
        return M(M({}, i), { operation: "query" });
      }
    }
  });
  return n;
}
function Hm(e) {
  Ta(e);
  var t = qm([
    {
      test: function(r) {
        return r.name.value === "client";
      },
      remove: !0
    }
  ], e);
  return t;
}
var O5 = Object.prototype.hasOwnProperty;
function _f() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  return Is(e);
}
function Is(e) {
  var t = e[0] || {}, r = e.length;
  if (r > 1)
    for (var n = new Kr(), i = 1; i < r; ++i)
      t = n.merge(t, e[i]);
  return t;
}
var I5 = function(e, t, r) {
  return this.merge(e[r], t[r]);
}, Kr = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = I5), this.reconciler = t, this.isObject = Ue, this.pastCopies = /* @__PURE__ */ new Set();
    }
    return e.prototype.merge = function(t, r) {
      for (var n = this, i = [], a = 2; a < arguments.length; a++)
        i[a - 2] = arguments[a];
      return Ue(r) && Ue(t) ? (Object.keys(r).forEach(function(o) {
        if (O5.call(t, o)) {
          var s = t[o];
          if (r[o] !== s) {
            var u = n.reconciler.apply(n, jt([
              t,
              r,
              o
            ], i, !1));
            u !== s && (t = n.shallowCopyForMerge(t), t[o] = u);
          }
        } else
          t = n.shallowCopyForMerge(t), t[o] = r[o];
      }), t) : r;
    }, e.prototype.shallowCopyForMerge = function(t) {
      return Ue(t) && (this.pastCopies.has(t) || (Array.isArray(t) ? t = t.slice(0) : t = M({ __proto__: Object.getPrototypeOf(t) }, t), this.pastCopies.add(t))), t;
    }, e;
  }()
);
function R5(e, t) {
  var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (r) return (r = r.call(e)).next.bind(r);
  if (Array.isArray(e) || (r = B5(e)) || t) {
    r && (e = r);
    var n = 0;
    return function() {
      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };
    };
  }
  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function B5(e, t) {
  if (e) {
    if (typeof e == "string") return Ff(e, t);
    var r = Object.prototype.toString.call(e).slice(8, -1);
    if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return Ff(e, t);
  }
}
function Ff(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++)
    n[r] = e[r];
  return n;
}
function Of(e, t) {
  for (var r = 0; r < t.length; r++) {
    var n = t[r];
    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
  }
}
function Xc(e, t, r) {
  return t && Of(e.prototype, t), r && Of(e, r), Object.defineProperty(e, "prototype", { writable: !1 }), e;
}
var ed = function() {
  return typeof Symbol == "function";
}, td = function(e) {
  return ed() && !!Symbol[e];
}, rd = function(e) {
  return td(e) ? Symbol[e] : "@@" + e;
};
ed() && !td("observable") && (Symbol.observable = Symbol("observable"));
var M5 = rd("iterator"), Sl = rd("observable"), Wm = rd("species");
function Io(e, t) {
  var r = e[t];
  if (r != null) {
    if (typeof r != "function") throw new TypeError(r + " is not a function");
    return r;
  }
}
function Si(e) {
  var t = e.constructor;
  return t !== void 0 && (t = t[Wm], t === null && (t = void 0)), t !== void 0 ? t : ke;
}
function N5(e) {
  return e instanceof ke;
}
function si(e) {
  si.log ? si.log(e) : setTimeout(function() {
    throw e;
  });
}
function go(e) {
  Promise.resolve().then(function() {
    try {
      e();
    } catch (t) {
      si(t);
    }
  });
}
function Qm(e) {
  var t = e._cleanup;
  if (t !== void 0 && (e._cleanup = void 0, !!t))
    try {
      if (typeof t == "function")
        t();
      else {
        var r = Io(t, "unsubscribe");
        r && r.call(t);
      }
    } catch (n) {
      si(n);
    }
}
function kl(e) {
  e._observer = void 0, e._queue = void 0, e._state = "closed";
}
function L5(e) {
  var t = e._queue;
  if (t) {
    e._queue = void 0, e._state = "ready";
    for (var r = 0; r < t.length && (Gm(e, t[r].type, t[r].value), e._state !== "closed"); ++r)
      ;
  }
}
function Gm(e, t, r) {
  e._state = "running";
  var n = e._observer;
  try {
    var i = Io(n, t);
    switch (t) {
      case "next":
        i && i.call(n, r);
        break;
      case "error":
        if (kl(e), i) i.call(n, r);
        else throw r;
        break;
      case "complete":
        kl(e), i && i.call(n);
        break;
    }
  } catch (a) {
    si(a);
  }
  e._state === "closed" ? Qm(e) : e._state === "running" && (e._state = "ready");
}
function Eu(e, t, r) {
  if (e._state !== "closed") {
    if (e._state === "buffering") {
      e._queue.push({
        type: t,
        value: r
      });
      return;
    }
    if (e._state !== "ready") {
      e._state = "buffering", e._queue = [{
        type: t,
        value: r
      }], go(function() {
        return L5(e);
      });
      return;
    }
    Gm(e, t, r);
  }
}
var V5 = /* @__PURE__ */ function() {
  function e(r, n) {
    this._cleanup = void 0, this._observer = r, this._queue = void 0, this._state = "initializing";
    var i = new j5(this);
    try {
      this._cleanup = n.call(void 0, i);
    } catch (a) {
      i.error(a);
    }
    this._state === "initializing" && (this._state = "ready");
  }
  var t = e.prototype;
  return t.unsubscribe = function() {
    this._state !== "closed" && (kl(this), Qm(this));
  }, Xc(e, [{
    key: "closed",
    get: function() {
      return this._state === "closed";
    }
  }]), e;
}(), j5 = /* @__PURE__ */ function() {
  function e(r) {
    this._subscription = r;
  }
  var t = e.prototype;
  return t.next = function(n) {
    Eu(this._subscription, "next", n);
  }, t.error = function(n) {
    Eu(this._subscription, "error", n);
  }, t.complete = function() {
    Eu(this._subscription, "complete");
  }, Xc(e, [{
    key: "closed",
    get: function() {
      return this._subscription._state === "closed";
    }
  }]), e;
}(), ke = /* @__PURE__ */ function() {
  function e(r) {
    if (!(this instanceof e)) throw new TypeError("Observable cannot be called as a function");
    if (typeof r != "function") throw new TypeError("Observable initializer must be a function");
    this._subscriber = r;
  }
  var t = e.prototype;
  return t.subscribe = function(n) {
    return (typeof n != "object" || n === null) && (n = {
      next: n,
      error: arguments[1],
      complete: arguments[2]
    }), new V5(n, this._subscriber);
  }, t.forEach = function(n) {
    var i = this;
    return new Promise(function(a, o) {
      if (typeof n != "function") {
        o(new TypeError(n + " is not a function"));
        return;
      }
      function s() {
        u.unsubscribe(), a();
      }
      var u = i.subscribe({
        next: function(l) {
          try {
            n(l, s);
          } catch (c) {
            o(c), u.unsubscribe();
          }
        },
        error: o,
        complete: a
      });
    });
  }, t.map = function(n) {
    var i = this;
    if (typeof n != "function") throw new TypeError(n + " is not a function");
    var a = Si(this);
    return new a(function(o) {
      return i.subscribe({
        next: function(s) {
          try {
            s = n(s);
          } catch (u) {
            return o.error(u);
          }
          o.next(s);
        },
        error: function(s) {
          o.error(s);
        },
        complete: function() {
          o.complete();
        }
      });
    });
  }, t.filter = function(n) {
    var i = this;
    if (typeof n != "function") throw new TypeError(n + " is not a function");
    var a = Si(this);
    return new a(function(o) {
      return i.subscribe({
        next: function(s) {
          try {
            if (!n(s)) return;
          } catch (u) {
            return o.error(u);
          }
          o.next(s);
        },
        error: function(s) {
          o.error(s);
        },
        complete: function() {
          o.complete();
        }
      });
    });
  }, t.reduce = function(n) {
    var i = this;
    if (typeof n != "function") throw new TypeError(n + " is not a function");
    var a = Si(this), o = arguments.length > 1, s = !1, u = arguments[1], l = u;
    return new a(function(c) {
      return i.subscribe({
        next: function(d) {
          var f = !s;
          if (s = !0, !f || o)
            try {
              l = n(l, d);
            } catch (h) {
              return c.error(h);
            }
          else
            l = d;
        },
        error: function(d) {
          c.error(d);
        },
        complete: function() {
          if (!s && !o) return c.error(new TypeError("Cannot reduce an empty sequence"));
          c.next(l), c.complete();
        }
      });
    });
  }, t.concat = function() {
    for (var n = this, i = arguments.length, a = new Array(i), o = 0; o < i; o++)
      a[o] = arguments[o];
    var s = Si(this);
    return new s(function(u) {
      var l, c = 0;
      function d(f) {
        l = f.subscribe({
          next: function(h) {
            u.next(h);
          },
          error: function(h) {
            u.error(h);
          },
          complete: function() {
            c === a.length ? (l = void 0, u.complete()) : d(s.from(a[c++]));
          }
        });
      }
      return d(n), function() {
        l && (l.unsubscribe(), l = void 0);
      };
    });
  }, t.flatMap = function(n) {
    var i = this;
    if (typeof n != "function") throw new TypeError(n + " is not a function");
    var a = Si(this);
    return new a(function(o) {
      var s = [], u = i.subscribe({
        next: function(c) {
          if (n)
            try {
              c = n(c);
            } catch (f) {
              return o.error(f);
            }
          var d = a.from(c).subscribe({
            next: function(f) {
              o.next(f);
            },
            error: function(f) {
              o.error(f);
            },
            complete: function() {
              var f = s.indexOf(d);
              f >= 0 && s.splice(f, 1), l();
            }
          });
          s.push(d);
        },
        error: function(c) {
          o.error(c);
        },
        complete: function() {
          l();
        }
      });
      function l() {
        u.closed && s.length === 0 && o.complete();
      }
      return function() {
        s.forEach(function(c) {
          return c.unsubscribe();
        }), u.unsubscribe();
      };
    });
  }, t[Sl] = function() {
    return this;
  }, e.from = function(n) {
    var i = typeof this == "function" ? this : e;
    if (n == null) throw new TypeError(n + " is not an object");
    var a = Io(n, Sl);
    if (a) {
      var o = a.call(n);
      if (Object(o) !== o) throw new TypeError(o + " is not an object");
      return N5(o) && o.constructor === i ? o : new i(function(s) {
        return o.subscribe(s);
      });
    }
    if (td("iterator") && (a = Io(n, M5), a))
      return new i(function(s) {
        go(function() {
          if (!s.closed) {
            for (var u = R5(a.call(n)), l; !(l = u()).done; ) {
              var c = l.value;
              if (s.next(c), s.closed) return;
            }
            s.complete();
          }
        });
      });
    if (Array.isArray(n))
      return new i(function(s) {
        go(function() {
          if (!s.closed) {
            for (var u = 0; u < n.length; ++u)
              if (s.next(n[u]), s.closed) return;
            s.complete();
          }
        });
      });
    throw new TypeError(n + " is not observable");
  }, e.of = function() {
    for (var n = arguments.length, i = new Array(n), a = 0; a < n; a++)
      i[a] = arguments[a];
    var o = typeof this == "function" ? this : e;
    return new o(function(s) {
      go(function() {
        if (!s.closed) {
          for (var u = 0; u < i.length; ++u)
            if (s.next(i[u]), s.closed) return;
          s.complete();
        }
      });
    });
  }, Xc(e, null, [{
    key: Wm,
    get: function() {
      return this;
    }
  }]), e;
}();
ed() && Object.defineProperty(ke, Symbol("extensions"), {
  value: {
    symbol: Sl,
    hostReportError: si
  },
  configurable: !0
});
function z5(e) {
  var t, r = e.Symbol;
  if (typeof r == "function")
    if (r.observable)
      t = r.observable;
    else {
      typeof r.for == "function" ? t = r.for("https://github.com/benlesh/symbol-observable") : t = r("https://github.com/benlesh/symbol-observable");
      try {
        r.observable = t;
      } catch {
      }
    }
  else
    t = "@@observable";
  return t;
}
var Fn;
typeof self < "u" ? Fn = self : typeof window < "u" ? Fn = window : typeof global < "u" ? Fn = global : typeof module < "u" ? Fn = module : Fn = Function("return this")();
z5(Fn);
var If = ke.prototype, Rf = "@@observable";
If[Rf] || (If[Rf] = function() {
  return this;
});
var K5 = Object.prototype.toString;
function Zm(e) {
  return Pl(e);
}
function Pl(e, t) {
  switch (K5.call(e)) {
    case "[object Array]": {
      if (t = t || /* @__PURE__ */ new Map(), t.has(e))
        return t.get(e);
      var r = e.slice(0);
      return t.set(e, r), r.forEach(function(i, a) {
        r[a] = Pl(i, t);
      }), r;
    }
    case "[object Object]": {
      if (t = t || /* @__PURE__ */ new Map(), t.has(e))
        return t.get(e);
      var n = Object.create(Object.getPrototypeOf(e));
      return t.set(e, n), Object.keys(e).forEach(function(i) {
        n[i] = Pl(e[i], t);
      }), n;
    }
    default:
      return e;
  }
}
function U5(e) {
  var t = /* @__PURE__ */ new Set([e]);
  return t.forEach(function(r) {
    Ue(r) && q5(r) === r && Object.getOwnPropertyNames(r).forEach(function(n) {
      Ue(r[n]) && t.add(r[n]);
    });
  }), e;
}
function q5(e) {
  if (globalThis.__DEV__ !== !1 && !Object.isFrozen(e))
    try {
      Object.freeze(e);
    } catch (t) {
      if (t instanceof TypeError)
        return null;
      throw t;
    }
  return e;
}
function la(e) {
  return globalThis.__DEV__ !== !1 && U5(e), e;
}
function Wi(e, t, r) {
  var n = [];
  e.forEach(function(i) {
    return i[t] && n.push(i);
  }), n.forEach(function(i) {
    return i[t](r);
  });
}
function wu(e, t, r) {
  return new ke(function(n) {
    var i = {
      // Normally we would initialize promiseQueue to Promise.resolve(), but
      // in this case, for backwards compatibility, we need to be careful to
      // invoke the first callback synchronously.
      then: function(u) {
        return new Promise(function(l) {
          return l(u());
        });
      }
    };
    function a(u, l) {
      return function(c) {
        if (u) {
          var d = function() {
            return n.closed ? (
              /* will be swallowed */
              0
            ) : u(c);
          };
          i = i.then(d, d).then(function(f) {
            return n.next(f);
          }, function(f) {
            return n.error(f);
          });
        } else
          n[l](c);
      };
    }
    var o = {
      next: a(t, "next"),
      error: a(r, "error"),
      complete: function() {
        i.then(function() {
          return n.complete();
        });
      }
    }, s = e.subscribe(o);
    return function() {
      return s.unsubscribe();
    };
  });
}
function Ym(e) {
  function t(r) {
    Object.defineProperty(e, r, { value: ke });
  }
  return Uc && Symbol.species && t(Symbol.species), t("@@species"), e;
}
function Bf(e) {
  return e && typeof e.then == "function";
}
var On = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      var n = e.call(this, function(i) {
        return n.addObserver(i), function() {
          return n.removeObserver(i);
        };
      }) || this;
      return n.observers = /* @__PURE__ */ new Set(), n.promise = new Promise(function(i, a) {
        n.resolve = i, n.reject = a;
      }), n.handlers = {
        next: function(i) {
          n.sub !== null && (n.latest = ["next", i], n.notify("next", i), Wi(n.observers, "next", i));
        },
        error: function(i) {
          var a = n.sub;
          a !== null && (a && setTimeout(function() {
            return a.unsubscribe();
          }), n.sub = null, n.latest = ["error", i], n.reject(i), n.notify("error", i), Wi(n.observers, "error", i));
        },
        complete: function() {
          var i = n, a = i.sub, o = i.sources, s = o === void 0 ? [] : o;
          if (a !== null) {
            var u = s.shift();
            u ? Bf(u) ? u.then(function(l) {
              return n.sub = l.subscribe(n.handlers);
            }, n.handlers.error) : n.sub = u.subscribe(n.handlers) : (a && setTimeout(function() {
              return a.unsubscribe();
            }), n.sub = null, n.latest && n.latest[0] === "next" ? n.resolve(n.latest[1]) : n.resolve(), n.notify("complete"), Wi(n.observers, "complete"));
          }
        }
      }, n.nextResultListeners = /* @__PURE__ */ new Set(), n.cancel = function(i) {
        n.reject(i), n.sources = [], n.handlers.complete();
      }, n.promise.catch(function(i) {
      }), typeof r == "function" && (r = [new ke(r)]), Bf(r) ? r.then(function(i) {
        return n.start(i);
      }, n.handlers.error) : n.start(r), n;
    }
    return t.prototype.start = function(r) {
      this.sub === void 0 && (this.sources = Array.from(r), this.handlers.complete());
    }, t.prototype.deliverLastMessage = function(r) {
      if (this.latest) {
        var n = this.latest[0], i = r[n];
        i && i.call(r, this.latest[1]), this.sub === null && n === "next" && r.complete && r.complete();
      }
    }, t.prototype.addObserver = function(r) {
      this.observers.has(r) || (this.deliverLastMessage(r), this.observers.add(r));
    }, t.prototype.removeObserver = function(r) {
      this.observers.delete(r) && this.observers.size < 1 && this.handlers.complete();
    }, t.prototype.notify = function(r, n) {
      var i = this.nextResultListeners;
      i.size && (this.nextResultListeners = /* @__PURE__ */ new Set(), i.forEach(function(a) {
        return a(r, n);
      }));
    }, t.prototype.beforeNext = function(r) {
      var n = !1;
      this.nextResultListeners.add(function(i, a) {
        n || (n = !0, r(i, a));
      });
    }, t;
  }(ke)
);
Ym(On);
function Wn(e) {
  return "incremental" in e;
}
function H5(e) {
  return "hasNext" in e && "data" in e;
}
function W5(e) {
  return Wn(e) || H5(e);
}
function Q5(e) {
  return Ue(e) && "payload" in e;
}
function Jm(e, t) {
  var r = e, n = new Kr();
  return Wn(t) && Bt(t.incremental) && t.incremental.forEach(function(i) {
    for (var a = i.data, o = i.path, s = o.length - 1; s >= 0; --s) {
      var u = o[s], l = !isNaN(+u), c = l ? [] : {};
      c[u] = a, a = c;
    }
    r = n.merge(r, a);
  }), r;
}
function bo(e) {
  var t = Tl(e);
  return Bt(t);
}
function Tl(e) {
  var t = Bt(e.errors) ? e.errors.slice(0) : [];
  return Wn(e) && Bt(e.incremental) && e.incremental.forEach(function(r) {
    r.errors && t.push.apply(t, r.errors);
  }), t;
}
function dn() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  var r = /* @__PURE__ */ Object.create(null);
  return e.forEach(function(n) {
    n && Object.keys(n).forEach(function(i) {
      var a = n[i];
      a !== void 0 && (r[i] = a);
    });
  }), r;
}
function Qi(e, t) {
  return dn(e, t, t.variables && {
    variables: dn(M(M({}, e && e.variables), t.variables))
  });
}
function Cu(e) {
  return new ke(function(t) {
    t.error(e);
  });
}
var Xm = function(e, t, r) {
  var n = new Error(r);
  throw n.name = "ServerError", n.response = e, n.statusCode = e.status, n.result = t, n;
};
function G5(e) {
  for (var t = [
    "query",
    "operationName",
    "variables",
    "extensions",
    "context"
  ], r = 0, n = Object.keys(e); r < n.length; r++) {
    var i = n[r];
    if (t.indexOf(i) < 0)
      throw ht(43, i);
  }
  return e;
}
function Z5(e, t) {
  var r = M({}, e), n = function(a) {
    typeof a == "function" ? r = M(M({}, r), a(r)) : r = M(M({}, r), a);
  }, i = function() {
    return M({}, r);
  };
  return Object.defineProperty(t, "setContext", {
    enumerable: !1,
    value: n
  }), Object.defineProperty(t, "getContext", {
    enumerable: !1,
    value: i
  }), t;
}
function Y5(e) {
  var t = {
    variables: e.variables || {},
    extensions: e.extensions || {},
    operationName: e.operationName,
    query: e.query
  };
  return t.operationName || (t.operationName = typeof t.query != "string" ? Cl(t.query) || void 0 : ""), t;
}
function J5(e, t) {
  var r = M({}, e), n = new Set(Object.keys(e));
  return vr(t, {
    Variable: function(i, a, o) {
      o && o.kind !== "VariableDefinition" && n.delete(i.name.value);
    }
  }), n.forEach(function(i) {
    delete r[i];
  }), r;
}
function Mf(e, t) {
  return t ? t(e) : ke.of();
}
function ki(e) {
  return typeof e == "function" ? new Ut(e) : e;
}
function Xa(e) {
  return e.request.length <= 1;
}
var Ut = (
  /** @class */
  function() {
    function e(t) {
      t && (this.request = t);
    }
    return e.empty = function() {
      return new e(function() {
        return ke.of();
      });
    }, e.from = function(t) {
      return t.length === 0 ? e.empty() : t.map(ki).reduce(function(r, n) {
        return r.concat(n);
      });
    }, e.split = function(t, r, n) {
      var i = ki(r), a = ki(n || new e(Mf)), o;
      return Xa(i) && Xa(a) ? o = new e(function(s) {
        return t(s) ? i.request(s) || ke.of() : a.request(s) || ke.of();
      }) : o = new e(function(s, u) {
        return t(s) ? i.request(s, u) || ke.of() : a.request(s, u) || ke.of();
      }), Object.assign(o, { left: i, right: a });
    }, e.execute = function(t, r) {
      return t.request(Z5(r.context, Y5(G5(r)))) || ke.of();
    }, e.concat = function(t, r) {
      var n = ki(t);
      if (Xa(n))
        return globalThis.__DEV__ !== !1 && ue.warn(35, n), n;
      var i = ki(r), a;
      return Xa(i) ? a = new e(function(o) {
        return n.request(o, function(s) {
          return i.request(s) || ke.of();
        }) || ke.of();
      }) : a = new e(function(o, s) {
        return n.request(o, function(u) {
          return i.request(u, s) || ke.of();
        }) || ke.of();
      }), Object.assign(a, { left: n, right: i });
    }, e.prototype.split = function(t, r, n) {
      return this.concat(e.split(t, r, n || new e(Mf)));
    }, e.prototype.concat = function(t) {
      return e.concat(this, t);
    }, e.prototype.request = function(t, r) {
      throw ht(36);
    }, e.prototype.onError = function(t, r) {
      if (r && r.error)
        return r.error(t), !1;
      throw t;
    }, e.prototype.setOnError = function(t) {
      return this.onError = t, this;
    }, e;
  }()
), X5 = function() {
  if (typeof AbortController > "u")
    return { controller: !1, signal: !1 };
  var e = new AbortController(), t = e.signal;
  return { controller: e, signal: t };
};
function e2(e) {
  var t, r = e[Symbol.asyncIterator]();
  return t = {
    next: function() {
      return r.next();
    }
  }, t[Symbol.asyncIterator] = function() {
    return this;
  }, t;
}
function t2(e) {
  var t = null, r = null, n = !1, i = [], a = [];
  function o(d) {
    if (!r) {
      if (a.length) {
        var f = a.shift();
        if (Array.isArray(f) && f[0])
          return f[0]({ value: d, done: !1 });
      }
      i.push(d);
    }
  }
  function s(d) {
    r = d;
    var f = a.slice();
    f.forEach(function(h) {
      h[1](d);
    }), !t || t();
  }
  function u() {
    n = !0;
    var d = a.slice();
    d.forEach(function(f) {
      f[0]({ value: void 0, done: !0 });
    }), !t || t();
  }
  t = function() {
    t = null, e.removeListener("data", o), e.removeListener("error", s), e.removeListener("end", u), e.removeListener("finish", u), e.removeListener("close", u);
  }, e.on("data", o), e.on("error", s), e.on("end", u), e.on("finish", u), e.on("close", u);
  function l() {
    return new Promise(function(d, f) {
      if (r)
        return f(r);
      if (i.length)
        return d({ value: i.shift(), done: !1 });
      if (n)
        return d({ value: void 0, done: !0 });
      a.push([d, f]);
    });
  }
  var c = {
    next: function() {
      return l();
    }
  };
  return Ss && (c[Symbol.asyncIterator] = function() {
    return this;
  }), c;
}
function r2(e) {
  var t = !1, r = {
    next: function() {
      return t ? Promise.resolve({
        value: void 0,
        done: !0
      }) : (t = !0, new Promise(function(n, i) {
        e.then(function(a) {
          n({ value: a, done: !1 });
        }).catch(i);
      }));
    }
  };
  return Ss && (r[Symbol.asyncIterator] = function() {
    return this;
  }), r;
}
function Nf(e) {
  var t = {
    next: function() {
      return e.read();
    }
  };
  return Ss && (t[Symbol.asyncIterator] = function() {
    return this;
  }), t;
}
function n2(e) {
  return !!e.body;
}
function i2(e) {
  return !!e.getReader;
}
function a2(e) {
  return !!(Ss && e[Symbol.asyncIterator]);
}
function o2(e) {
  return !!e.stream;
}
function s2(e) {
  return !!e.arrayBuffer;
}
function u2(e) {
  return !!e.pipe;
}
function l2(e) {
  var t = e;
  if (n2(e) && (t = e.body), a2(t))
    return e2(t);
  if (i2(t))
    return Nf(t.getReader());
  if (o2(t))
    return Nf(t.stream().getReader());
  if (s2(t))
    return r2(t.arrayBuffer());
  if (u2(t))
    return t2(t);
  throw new Error("Unknown body type for responseIterator. Please pass a streamable response.");
}
var nd = Symbol();
function c2(e) {
  return e.extensions ? Array.isArray(e.extensions[nd]) : !1;
}
function d2(e) {
  return e.hasOwnProperty("graphQLErrors");
}
var f2 = function(e) {
  var t = jt(jt(jt([], e.graphQLErrors, !0), e.clientErrors, !0), e.protocolErrors, !0);
  return e.networkError && t.push(e.networkError), t.map(function(r) {
    return Ue(r) && r.message || "Error message not found.";
  }).join(`
`);
}, lr = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      var n = r.graphQLErrors, i = r.protocolErrors, a = r.clientErrors, o = r.networkError, s = r.errorMessage, u = r.extraInfo, l = e.call(this, s) || this;
      return l.name = "ApolloError", l.graphQLErrors = n || [], l.protocolErrors = i || [], l.clientErrors = a || [], l.networkError = o || null, l.message = s || f2(l), l.extraInfo = u, l.__proto__ = t.prototype, l;
    }
    return t;
  }(Error)
), Lf = Object.prototype.hasOwnProperty;
function h2(e, t) {
  return Fr(this, void 0, void 0, function() {
    var r, n, i, a, o, s, u, l, c, d, f, h, p, v, g, $, m, b, D, S, P, B, y, _;
    return Or(this, function(w) {
      switch (w.label) {
        case 0:
          if (TextDecoder === void 0)
            throw new Error("TextDecoder must be defined in the environment: please import a polyfill.");
          r = new TextDecoder("utf-8"), n = (_ = e.headers) === null || _ === void 0 ? void 0 : _.get("content-type"), i = "boundary=", a = n != null && n.includes(i) ? n == null ? void 0 : n.substring((n == null ? void 0 : n.indexOf(i)) + i.length).replace(/['"]/g, "").replace(/\;(.*)/gm, "").trim() : "-", o = `\r
--`.concat(a), s = "", u = l2(e), l = !0, w.label = 1;
        case 1:
          return l ? [4, u.next()] : [3, 3];
        case 2:
          for (c = w.sent(), d = c.value, f = c.done, h = typeof d == "string" ? d : r.decode(d), p = s.length - o.length + 1, l = !f, s += h, v = s.indexOf(o, p); v > -1; ) {
            if (g = void 0, B = [
              s.slice(0, v),
              s.slice(v + o.length)
            ], g = B[0], s = B[1], $ = g.indexOf(`\r
\r
`), m = p2(g.slice(0, $)), b = m["content-type"], b && b.toLowerCase().indexOf("application/json") === -1)
              throw new Error("Unsupported patch content type: application/json is required.");
            if (D = g.slice($), D) {
              if (S = ev(e, D), Object.keys(S).length > 1 || "data" in S || "incremental" in S || "errors" in S || "payload" in S)
                if (Q5(S)) {
                  if (P = {}, "payload" in S) {
                    if (Object.keys(S).length === 1 && S.payload === null)
                      return [
                        2
                        /*return*/
                      ];
                    P = M({}, S.payload);
                  }
                  "errors" in S && (P = M(M({}, P), { extensions: M(M({}, "extensions" in P ? P.extensions : null), (y = {}, y[nd] = S.errors, y)) })), t(P);
                } else
                  t(S);
              else if (
                // If the chunk contains only a "hasNext: false", we can call
                // observer.complete() immediately.
                Object.keys(S).length === 1 && "hasNext" in S && !S.hasNext
              )
                return [
                  2
                  /*return*/
                ];
            }
            v = s.indexOf(o);
          }
          return [3, 1];
        case 3:
          return [
            2
            /*return*/
          ];
      }
    });
  });
}
function p2(e) {
  var t = {};
  return e.split(`
`).forEach(function(r) {
    var n = r.indexOf(":");
    if (n > -1) {
      var i = r.slice(0, n).trim().toLowerCase(), a = r.slice(n + 1).trim();
      t[i] = a;
    }
  }), t;
}
function ev(e, t) {
  if (e.status >= 300) {
    var r = function() {
      try {
        return JSON.parse(t);
      } catch {
        return t;
      }
    };
    Xm(e, r(), "Response not successful: Received status code ".concat(e.status));
  }
  try {
    return JSON.parse(t);
  } catch (i) {
    var n = i;
    throw n.name = "ServerParseError", n.response = e, n.statusCode = e.status, n.bodyText = t, n;
  }
}
function m2(e, t) {
  e.result && e.result.errors && e.result.data && t.next(e.result), t.error(e);
}
function tv(e) {
  return function(t) {
    return t.text().then(function(r) {
      return ev(t, r);
    }).then(function(r) {
      return !Array.isArray(r) && !Lf.call(r, "data") && !Lf.call(r, "errors") && Xm(t, r, "Server response was missing for query '".concat(Array.isArray(e) ? e.map(function(n) {
        return n.operationName;
      }) : e.operationName, "'.")), r;
    });
  };
}
var ca = function(e, t) {
  var r;
  try {
    r = JSON.stringify(e);
  } catch (i) {
    var n = ht(39, t, i.message);
    throw n.parseError = i, n;
  }
  return r;
};
function rv(e, t) {
  var r = [], n = function(d, f) {
    r.push("".concat(d, "=").concat(encodeURIComponent(f)));
  };
  if ("query" in t && n("query", t.query), t.operationName && n("operationName", t.operationName), t.variables) {
    var i = void 0;
    try {
      i = ca(t.variables, "Variables map");
    } catch (d) {
      return { parseError: d };
    }
    n("variables", i);
  }
  if (t.extensions) {
    var a = void 0;
    try {
      a = ca(t.extensions, "Extensions map");
    } catch (d) {
      return { parseError: d };
    }
    n("extensions", a);
  }
  var o = "", s = e, u = e.indexOf("#");
  u !== -1 && (o = e.substr(u), s = e.substr(0, u));
  var l = s.indexOf("?") === -1 ? "?" : "&", c = s + l + r.join("&") + o;
  return { newURI: c };
}
var v2 = {
  includeQuery: !0,
  includeExtensions: !1,
  preserveHeaderCase: !1
}, y2 = {
  // headers are case insensitive (https://stackoverflow.com/a/5259004)
  accept: "*/*",
  // The content-type header describes the type of the body of the request, and
  // so it typically only is sent with requests that actually have bodies. One
  // could imagine that Apollo Client would remove this header when constructing
  // a GET request (which has no body), but we historically have not done that.
  // This means that browsers will preflight all Apollo Client requests (even
  // GET requests). Apollo Server's CSRF prevention feature (introduced in
  // AS3.7) takes advantage of this fact and does not block requests with this
  // header. If you want to drop this header from GET requests, then you should
  // probably replace it with a `apollo-require-preflight` header, or servers
  // with CSRF prevention enabled might block your GET request. See
  // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf
  // for more details.
  "content-type": "application/json"
}, g2 = {
  method: "POST"
}, nv = {
  http: v2,
  headers: y2,
  options: g2
}, iv = function(e, t) {
  return t(e);
};
function av(e, t) {
  for (var r = [], n = 2; n < arguments.length; n++)
    r[n - 2] = arguments[n];
  var i = {}, a = {};
  r.forEach(function(d) {
    i = M(M(M({}, i), d.options), { headers: M(M({}, i.headers), d.headers) }), d.credentials && (i.credentials = d.credentials), a = M(M({}, a), d.http);
  }), i.headers && (i.headers = b2(i.headers, a.preserveHeaderCase));
  var o = e.operationName, s = e.extensions, u = e.variables, l = e.query, c = { operationName: o, variables: u };
  return a.includeExtensions && (c.extensions = s), a.includeQuery && (c.query = t(l, Os)), {
    options: i,
    body: c
  };
}
function b2(e, t) {
  if (!t) {
    var r = /* @__PURE__ */ Object.create(null);
    return Object.keys(Object(e)).forEach(function(a) {
      r[a.toLowerCase()] = e[a];
    }), r;
  }
  var n = /* @__PURE__ */ Object.create(null);
  Object.keys(Object(e)).forEach(function(a) {
    n[a.toLowerCase()] = {
      originalName: a,
      value: e[a]
    };
  });
  var i = /* @__PURE__ */ Object.create(null);
  return Object.keys(n).forEach(function(a) {
    i[n[a].originalName] = n[a].value;
  }), i;
}
var ov = function(e, t) {
  var r = e.getContext(), n = r.uri;
  return n || (typeof t == "function" ? t(e) : t || "/graphql");
};
function $2(e) {
  if (typeof e != "object" || e === null)
    return !1;
  const t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function x2(e, t, r = "") {
  if (!arguments.length) throw new TypeError("Argument 1 `value` is required.");
  if (typeof t != "function")
    throw new TypeError("Argument 2 `isExtractable` must be a function.");
  if (typeof r != "string")
    throw new TypeError("Argument 3 `path` must be a string.");
  const n = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map();
  function a(o, s, u) {
    if (t(o)) {
      const d = i.get(o);
      return d ? d.push(s) : i.set(o, [s]), null;
    }
    const l = Array.isArray(o) || typeof FileList < "u" && o instanceof FileList, c = $2(o);
    if (l || c) {
      let d = n.get(o);
      const f = !d;
      if (f && (d = l ? [] : (
        // Replicate if the plain object is an `Object` instance.
        o instanceof /** @type {any} */
        Object ? {} : /* @__PURE__ */ Object.create(null)
      ), n.set(
        o,
        /** @type {Clone} */
        d
      )), !u.has(o)) {
        const h = s ? `${s}.` : "", p = new Set(u).add(o);
        if (l) {
          let v = 0;
          for (const g of o) {
            const $ = a(
              g,
              h + v++,
              p
            );
            f && d.push($);
          }
        } else
          for (const v in o) {
            const g = a(
              o[v],
              h + v,
              p
            );
            f && (d[v] = g);
          }
      }
      return d;
    }
    return o;
  }
  return {
    clone: a(e, r, /* @__PURE__ */ new Set()),
    files: i
  };
}
function D2(e, t, r) {
  "name" in r ? e.append(t, r, r.name) : e.append(t, r);
}
function E2(e) {
  return typeof File < "u" && e instanceof File || typeof Blob < "u" && e instanceof Blob;
}
function sv({
  uri: e = "/graphql",
  useGETForQueries: t,
  isExtractableFile: r = E2,
  FormData: n,
  formDataAppendFile: i = D2,
  print: a = iv,
  fetch: o,
  fetchOptions: s,
  credentials: u,
  headers: l,
  includeExtensions: c
} = {}) {
  const d = {
    http: { includeExtensions: c },
    options: s,
    credentials: u,
    headers: l
  };
  return new Ut((f) => {
    const h = (
      /**
       * @type {import("@apollo/client/core/types.js").DefaultContext & {
       *   clientAwareness?: {
       *     name?: string,
       *     version?: string,
       *   },
       * }}
       */
      f.getContext()
    ), {
      // Apollo Studio client awareness `name` and `version` can be configured
      // via `ApolloClient` constructor options:
      // https://www.apollographql.com/docs/graphos/metrics/client-awareness/#setup
      clientAwareness: { name: p, version: v } = {},
      headers: g
    } = h, $ = {
      http: h.http,
      options: h.fetchOptions,
      credentials: h.credentials,
      headers: {
        // Client awareness headers can be overridden by context `headers`.
        ...p && { "apollographql-client-name": p },
        ...v && { "apollographql-client-version": v },
        ...g
      }
    }, { options: m, body: b } = av(
      f,
      a,
      nv,
      d,
      $
    ), { clone: D, files: S } = x2(b, r, "");
    let P = ov(f, e);
    if (S.size) {
      m.headers && delete m.headers["content-type"];
      const _ = n || FormData, w = new _();
      w.append("operations", ca(D, "Payload"));
      const E = {};
      let k = 0;
      S.forEach((C) => {
        E[++k] = C;
      }), w.append("map", JSON.stringify(E)), k = 0, S.forEach((C, T) => {
        i(w, String(++k), T);
      }), m.body = w;
    } else if (t && // If the operation contains some mutations GET shouldn’t be used.
    !f.query.definitions.some(
      (_) => _.kind === "OperationDefinition" && _.operation === "mutation"
    ) && (m.method = "GET"), m.method === "GET") {
      const { newURI: _, parseError: w } = rv(P, b);
      if (w)
        return new ke((E) => {
          E.error(w);
        });
      P = _;
    } else m.body = ca(D, "Payload");
    const { controller: B } = X5();
    typeof B != "boolean" && (m.signal && (m.signal.aborted ? (
      // Signal already aborted, so immediately abort.
      B.abort()
    ) : (
      // Signal not already aborted, so setup a listener to abort when it
      // does.
      m.signal.addEventListener(
        "abort",
        () => {
          B.abort();
        },
        {
          // Prevent a memory leak if the user configured abort controller
          // is long lasting, or controls multiple things.
          once: !0
        }
      )
    )), m.signal = B.signal);
    const y = o || fetch;
    return new ke((_) => {
      let w;
      return y(P, m).then((E) => (f.setContext({ response: E }), E)).then(tv(f)).then((E) => {
        _.next(E), _.complete();
      }).catch((E) => {
        w || (E.result && E.result.errors && E.result.data && _.next(E.result), _.error(E));
      }), () => {
        w = !0, typeof B != "boolean" && B.abort();
      };
    });
  });
}
var Al = Ut.execute, w2 = function(e) {
  if (!e && typeof fetch > "u")
    throw ht(37);
}, Vf = Lt(function() {
  return fetch;
}), C2 = function(e) {
  e === void 0 && (e = {});
  var t = e.uri, r = t === void 0 ? "/graphql" : t, n = e.fetch, i = e.print, a = i === void 0 ? iv : i, o = e.includeExtensions, s = e.preserveHeaderCase, u = e.useGETForQueries, l = e.includeUnusedVariables, c = l === void 0 ? !1 : l, d = zt(e, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "useGETForQueries", "includeUnusedVariables"]);
  globalThis.__DEV__ !== !1 && w2(n || Vf);
  var f = {
    http: { includeExtensions: o, preserveHeaderCase: s },
    options: d.fetchOptions,
    credentials: d.credentials,
    headers: d.headers
  };
  return new Ut(function(h) {
    var p = ov(h, r), v = h.getContext(), g = {};
    if (v.clientAwareness) {
      var $ = v.clientAwareness, m = $.name, b = $.version;
      m && (g["apollographql-client-name"] = m), b && (g["apollographql-client-version"] = b);
    }
    var D = M(M({}, g), v.headers), S = {
      http: v.http,
      options: v.fetchOptions,
      credentials: v.credentials,
      headers: D
    };
    if (oa(["client"], h.query)) {
      var P = Hm(h.query);
      if (!P)
        return Cu(new Error("HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`."));
      h.query = P;
    }
    var B = av(h, a, nv, f, S), y = B.options, _ = B.body;
    _.variables && !c && (_.variables = J5(_.variables, h.query));
    var w;
    !y.signal && typeof AbortController < "u" && (w = new AbortController(), y.signal = w.signal);
    var E = function(K) {
      return K.kind === "OperationDefinition" && K.operation === "mutation";
    }, k = function(K) {
      return K.kind === "OperationDefinition" && K.operation === "subscription";
    }, C = k(_a(h.query)), T = oa(["defer"], h.query);
    if (u && !h.query.definitions.some(E) && (y.method = "GET"), T || C) {
      y.headers = y.headers || {};
      var L = "multipart/mixed;";
      C && T && globalThis.__DEV__ !== !1 && ue.warn(38), C ? L += "boundary=graphql;subscriptionSpec=1.0,application/json" : T && (L += "deferSpec=20220824,application/json"), y.headers.accept = L;
    }
    if (y.method === "GET") {
      var O = rv(p, _), x = O.newURI, U = O.parseError;
      if (U)
        return Cu(U);
      p = x;
    } else
      try {
        y.body = ca(_, "Payload");
      } catch (K) {
        return Cu(K);
      }
    return new ke(function(K) {
      var j = n || Lt(function() {
        return fetch;
      }) || Vf, ae = K.next.bind(K);
      return j(p, y).then(function(ne) {
        var me;
        h.setContext({ response: ne });
        var xe = (me = ne.headers) === null || me === void 0 ? void 0 : me.get("content-type");
        return xe !== null && /^multipart\/mixed/i.test(xe) ? h2(ne, ae) : tv(h)(ne).then(ae);
      }).then(function() {
        w = void 0, K.complete();
      }).catch(function(ne) {
        w = void 0, m2(ne, K);
      }), function() {
        w && w.abort();
      };
    });
  });
}, S2 = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, C2(r).request) || this;
      return n.options = r, n;
    }
    return t;
  }(Ut)
);
const { toString: jf, hasOwnProperty: k2 } = Object.prototype, zf = Function.prototype.toString, _l = /* @__PURE__ */ new Map();
function Te(e, t) {
  try {
    return Fl(e, t);
  } finally {
    _l.clear();
  }
}
function Fl(e, t) {
  if (e === t)
    return !0;
  const r = jf.call(e), n = jf.call(t);
  if (r !== n)
    return !1;
  switch (r) {
    case "[object Array]":
      if (e.length !== t.length)
        return !1;
    case "[object Object]": {
      if (Uf(e, t))
        return !0;
      const i = Kf(e), a = Kf(t), o = i.length;
      if (o !== a.length)
        return !1;
      for (let s = 0; s < o; ++s)
        if (!k2.call(t, i[s]))
          return !1;
      for (let s = 0; s < o; ++s) {
        const u = i[s];
        if (!Fl(e[u], t[u]))
          return !1;
      }
      return !0;
    }
    case "[object Error]":
      return e.name === t.name && e.message === t.message;
    case "[object Number]":
      if (e !== e)
        return t !== t;
    case "[object Boolean]":
    case "[object Date]":
      return +e == +t;
    case "[object RegExp]":
    case "[object String]":
      return e == `${t}`;
    case "[object Map]":
    case "[object Set]": {
      if (e.size !== t.size)
        return !1;
      if (Uf(e, t))
        return !0;
      const i = e.entries(), a = r === "[object Map]";
      for (; ; ) {
        const o = i.next();
        if (o.done)
          break;
        const [s, u] = o.value;
        if (!t.has(s) || a && !Fl(u, t.get(s)))
          return !1;
      }
      return !0;
    }
    case "[object Uint16Array]":
    case "[object Uint8Array]":
    case "[object Uint32Array]":
    case "[object Int32Array]":
    case "[object Int8Array]":
    case "[object Int16Array]":
    case "[object ArrayBuffer]":
      e = new Uint8Array(e), t = new Uint8Array(t);
    case "[object DataView]": {
      let i = e.byteLength;
      if (i === t.byteLength)
        for (; i-- && e[i] === t[i]; )
          ;
      return i === -1;
    }
    case "[object AsyncFunction]":
    case "[object GeneratorFunction]":
    case "[object AsyncGeneratorFunction]":
    case "[object Function]": {
      const i = zf.call(e);
      return i !== zf.call(t) ? !1 : !A2(i, T2);
    }
  }
  return !1;
}
function Kf(e) {
  return Object.keys(e).filter(P2, e);
}
function P2(e) {
  return this[e] !== void 0;
}
const T2 = "{ [native code] }";
function A2(e, t) {
  const r = e.length - t.length;
  return r >= 0 && e.indexOf(t, r) === r;
}
function Uf(e, t) {
  let r = _l.get(e);
  if (r) {
    if (r.has(t))
      return !0;
  } else
    _l.set(e, r = /* @__PURE__ */ new Set());
  return r.add(t), !1;
}
function uv(e, t, r, n) {
  var i = t.data, a = zt(t, ["data"]), o = r.data, s = zt(r, ["data"]);
  return Te(a, s) && $o(_a(e).selectionSet, i, o, {
    fragmentMap: ks(As(e)),
    variables: n
  });
}
function $o(e, t, r, n) {
  if (t === r)
    return !0;
  var i = /* @__PURE__ */ new Set();
  return e.selections.every(function(a) {
    if (i.has(a) || (i.add(a), !Pa(a, n.variables)) || qf(a))
      return !0;
    if (jr(a)) {
      var o = Vr(a), s = t && t[o], u = r && r[o], l = a.selectionSet;
      if (!l)
        return Te(s, u);
      var c = Array.isArray(s), d = Array.isArray(u);
      if (c !== d)
        return !1;
      if (c && d) {
        var f = s.length;
        if (u.length !== f)
          return !1;
        for (var h = 0; h < f; ++h)
          if (!$o(l, s[h], u[h], n))
            return !1;
        return !0;
      }
      return $o(l, s, u, n);
    } else {
      var p = Ps(a, n.fragmentMap);
      if (p)
        return qf(p) ? !0 : $o(
          p.selectionSet,
          // Notice that we reuse the same aResult and bResult values here,
          // since the fragment ...spread does not specify a field name, but
          // consists of multiple fields (within the fragment's selection set)
          // that should be applied to the current result value(s).
          t,
          r,
          n
        );
    }
  });
}
function qf(e) {
  return !!e.directives && e.directives.some(_2);
}
function _2(e) {
  return e.name.value === "nonreactive";
}
var lv = (
  /** @class */
  function() {
    function e() {
      this.assumeImmutableResults = !1, this.getFragmentDoc = ua(BD, {
        max: Xt["cache.fragmentQueryDocuments"] || 1e3,
        cache: Oo
      });
    }
    return e.prototype.batch = function(t) {
      var r = this, n = typeof t.optimistic == "string" ? t.optimistic : t.optimistic === !1 ? null : void 0, i;
      return this.performTransaction(function() {
        return i = t.update(r);
      }, n), i;
    }, e.prototype.recordOptimisticTransaction = function(t, r) {
      this.performTransaction(t, r);
    }, e.prototype.transformDocument = function(t) {
      return t;
    }, e.prototype.transformForLink = function(t) {
      return t;
    }, e.prototype.identify = function(t) {
    }, e.prototype.gc = function() {
      return [];
    }, e.prototype.modify = function(t) {
      return !1;
    }, e.prototype.readQuery = function(t, r) {
      return r === void 0 && (r = !!t.optimistic), this.read(M(M({}, t), { rootId: t.id || "ROOT_QUERY", optimistic: r }));
    }, e.prototype.watchFragment = function(t) {
      var r = this, n = t.fragment, i = t.fragmentName, a = t.from, o = t.optimistic, s = o === void 0 ? !0 : o, u = this.getFragmentDoc(n, i), l = {
        returnPartialData: !0,
        id: typeof a == "string" ? a : this.identify(a),
        query: u,
        optimistic: s
      }, c;
      return new ke(function(d) {
        return r.watch(M(M({}, l), { immediate: !0, callback: function(f) {
          if (
            // Always ensure we deliver the first result
            !(c && uv(u, { data: c == null ? void 0 : c.result }, { data: f.result }))
          ) {
            var h = {
              data: f.result,
              complete: !!f.complete
            };
            f.missing && (h.missing = Is(f.missing.map(function(p) {
              return p.missing;
            }))), c = f, d.next(h);
          }
        } }));
      });
    }, e.prototype.readFragment = function(t, r) {
      return r === void 0 && (r = !!t.optimistic), this.read(M(M({}, t), { query: this.getFragmentDoc(t.fragment, t.fragmentName), rootId: t.id, optimistic: r }));
    }, e.prototype.writeQuery = function(t) {
      var r = t.id, n = t.data, i = zt(t, ["id", "data"]);
      return this.write(Object.assign(i, {
        dataId: r || "ROOT_QUERY",
        result: n
      }));
    }, e.prototype.writeFragment = function(t) {
      var r = t.id, n = t.data, i = t.fragment, a = t.fragmentName, o = zt(t, ["id", "data", "fragment", "fragmentName"]);
      return this.write(Object.assign(o, {
        query: this.getFragmentDoc(i, a),
        dataId: r,
        result: n
      }));
    }, e.prototype.updateQuery = function(t, r) {
      return this.batch({
        update: function(n) {
          var i = n.readQuery(t), a = r(i);
          return a == null ? i : (n.writeQuery(M(M({}, t), { data: a })), a);
        }
      });
    }, e.prototype.updateFragment = function(t, r) {
      return this.batch({
        update: function(n) {
          var i = n.readFragment(t), a = r(i);
          return a == null ? i : (n.writeFragment(M(M({}, t), { data: a })), a);
        }
      });
    }, e;
  }()
);
globalThis.__DEV__ !== !1 && (lv.prototype.getMemoryInternals = WD);
var cv = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r, n, i, a) {
      var o, s = e.call(this, r) || this;
      if (s.message = r, s.path = n, s.query = i, s.variables = a, Array.isArray(s.path)) {
        s.missing = s.message;
        for (var u = s.path.length - 1; u >= 0; --u)
          s.missing = (o = {}, o[s.path[u]] = s.missing, o);
      } else
        s.missing = s.path;
      return s.__proto__ = t.prototype, s;
    }
    return t;
  }(Error)
), at = Object.prototype.hasOwnProperty;
function Pi(e) {
  return e == null;
}
function dv(e, t) {
  var r = e.__typename, n = e.id, i = e._id;
  if (typeof r == "string" && (t && (t.keyObject = Pi(n) ? Pi(i) ? void 0 : { _id: i } : { id: n }), Pi(n) && !Pi(i) && (n = i), !Pi(n)))
    return "".concat(r, ":").concat(typeof n == "number" || typeof n == "string" ? n : JSON.stringify(n));
}
var fv = {
  dataIdFromObject: dv,
  addTypename: !0,
  resultCaching: !0,
  // Thanks to the shouldCanonizeResults helper, this should be the only line
  // you have to change to reenable canonization by default in the future.
  canonizeResults: !1
};
function F2(e) {
  return dn(fv, e);
}
function hv(e) {
  var t = e.canonizeResults;
  return t === void 0 ? fv.canonizeResults : t;
}
function O2(e, t) {
  return Ae(t) ? e.get(t.__ref, "__typename") : t && t.__typename;
}
var pv = /^[_a-z][_0-9a-z]*/i;
function Ur(e) {
  var t = e.match(pv);
  return t ? t[0] : e;
}
function Ol(e, t, r) {
  return Ue(t) ? qe(t) ? t.every(function(n) {
    return Ol(e, n, r);
  }) : e.selections.every(function(n) {
    if (jr(n) && Pa(n, r)) {
      var i = Vr(n);
      return at.call(t, i) && (!n.selectionSet || Ol(n.selectionSet, t[i], r));
    }
    return !0;
  }) : !1;
}
function Ln(e) {
  return Ue(e) && !Ae(e) && !qe(e);
}
function I2() {
  return new Kr();
}
function mv(e, t) {
  var r = ks(As(e));
  return {
    fragmentMap: r,
    lookupFragment: function(n) {
      var i = r[n];
      return !i && t && (i = t.lookup(n)), i || null;
    }
  };
}
var xo = /* @__PURE__ */ Object.create(null), Su = function() {
  return xo;
}, Hf = /* @__PURE__ */ Object.create(null), da = (
  /** @class */
  function() {
    function e(t, r) {
      var n = this;
      this.policies = t, this.group = r, this.data = /* @__PURE__ */ Object.create(null), this.rootIds = /* @__PURE__ */ Object.create(null), this.refs = /* @__PURE__ */ Object.create(null), this.getFieldValue = function(i, a) {
        return la(Ae(i) ? n.get(i.__ref, a) : i && i[a]);
      }, this.canRead = function(i) {
        return Ae(i) ? n.has(i.__ref) : typeof i == "object";
      }, this.toReference = function(i, a) {
        if (typeof i == "string")
          return Hn(i);
        if (Ae(i))
          return i;
        var o = n.policies.identify(i)[0];
        if (o) {
          var s = Hn(o);
          return a && n.merge(o, i), s;
        }
      };
    }
    return e.prototype.toObject = function() {
      return M({}, this.data);
    }, e.prototype.has = function(t) {
      return this.lookup(t, !0) !== void 0;
    }, e.prototype.get = function(t, r) {
      if (this.group.depend(t, r), at.call(this.data, t)) {
        var n = this.data[t];
        if (n && at.call(n, r))
          return n[r];
      }
      if (r === "__typename" && at.call(this.policies.rootTypenamesById, t))
        return this.policies.rootTypenamesById[t];
      if (this instanceof Ar)
        return this.parent.get(t, r);
    }, e.prototype.lookup = function(t, r) {
      if (r && this.group.depend(t, "__exists"), at.call(this.data, t))
        return this.data[t];
      if (this instanceof Ar)
        return this.parent.lookup(t, r);
      if (this.policies.rootTypenamesById[t])
        return /* @__PURE__ */ Object.create(null);
    }, e.prototype.merge = function(t, r) {
      var n = this, i;
      Ae(t) && (t = t.__ref), Ae(r) && (r = r.__ref);
      var a = typeof t == "string" ? this.lookup(i = t) : t, o = typeof r == "string" ? this.lookup(i = r) : r;
      if (o) {
        ue(typeof i == "string", 1);
        var s = new Kr(B2).merge(a, o);
        if (this.data[i] = s, s !== a && (delete this.refs[i], this.group.caching)) {
          var u = /* @__PURE__ */ Object.create(null);
          a || (u.__exists = 1), Object.keys(o).forEach(function(l) {
            if (!a || a[l] !== s[l]) {
              u[l] = 1;
              var c = Ur(l);
              c !== l && !n.policies.hasKeyArgs(s.__typename, c) && (u[c] = 1), s[l] === void 0 && !(n instanceof Ar) && delete s[l];
            }
          }), u.__typename && !(a && a.__typename) && // Since we return default root __typename strings
          // automatically from store.get, we don't need to dirty the
          // ROOT_QUERY.__typename field if merged.__typename is equal
          // to the default string (usually "Query").
          this.policies.rootTypenamesById[i] === s.__typename && delete u.__typename, Object.keys(u).forEach(function(l) {
            return n.group.dirty(i, l);
          });
        }
      }
    }, e.prototype.modify = function(t, r) {
      var n = this, i = this.lookup(t);
      if (i) {
        var a = /* @__PURE__ */ Object.create(null), o = !1, s = !0, u = {
          DELETE: xo,
          INVALIDATE: Hf,
          isReference: Ae,
          toReference: this.toReference,
          canRead: this.canRead,
          readField: function(l, c) {
            return n.policies.readField(typeof l == "string" ? {
              fieldName: l,
              from: c || Hn(t)
            } : l, { store: n });
          }
        };
        if (Object.keys(i).forEach(function(l) {
          var c = Ur(l), d = i[l];
          if (d !== void 0) {
            var f = typeof r == "function" ? r : r[l] || r[c];
            if (f) {
              var h = f === Su ? xo : f(la(d), M(M({}, u), { fieldName: c, storeFieldName: l, storage: n.getStorage(t, l) }));
              if (h === Hf)
                n.group.dirty(t, l);
              else if (h === xo && (h = void 0), h !== d && (a[l] = h, o = !0, d = h, globalThis.__DEV__ !== !1)) {
                var p = function(S) {
                  if (n.lookup(S.__ref) === void 0)
                    return globalThis.__DEV__ !== !1 && ue.warn(2, S), !0;
                };
                if (Ae(h))
                  p(h);
                else if (Array.isArray(h))
                  for (var v = !1, g = void 0, $ = 0, m = h; $ < m.length; $++) {
                    var b = m[$];
                    if (Ae(b)) {
                      if (v = !0, p(b))
                        break;
                    } else if (typeof b == "object" && b) {
                      var D = n.policies.identify(b)[0];
                      D && (g = b);
                    }
                    if (v && g !== void 0) {
                      globalThis.__DEV__ !== !1 && ue.warn(3, g);
                      break;
                    }
                  }
              }
            }
            d !== void 0 && (s = !1);
          }
        }), o)
          return this.merge(t, a), s && (this instanceof Ar ? this.data[t] = void 0 : delete this.data[t], this.group.dirty(t, "__exists")), !0;
      }
      return !1;
    }, e.prototype.delete = function(t, r, n) {
      var i, a = this.lookup(t);
      if (a) {
        var o = this.getFieldValue(a, "__typename"), s = r && n ? this.policies.getStoreFieldName({ typename: o, fieldName: r, args: n }) : r;
        return this.modify(t, s ? (i = {}, i[s] = Su, i) : Su);
      }
      return !1;
    }, e.prototype.evict = function(t, r) {
      var n = !1;
      return t.id && (at.call(this.data, t.id) && (n = this.delete(t.id, t.fieldName, t.args)), this instanceof Ar && this !== r && (n = this.parent.evict(t, r) || n), (t.fieldName || n) && this.group.dirty(t.id, t.fieldName || "__exists")), n;
    }, e.prototype.clear = function() {
      this.replace(null);
    }, e.prototype.extract = function() {
      var t = this, r = this.toObject(), n = [];
      return this.getRootIdSet().forEach(function(i) {
        at.call(t.policies.rootTypenamesById, i) || n.push(i);
      }), n.length && (r.__META = { extraRootIds: n.sort() }), r;
    }, e.prototype.replace = function(t) {
      var r = this;
      if (Object.keys(this.data).forEach(function(a) {
        t && at.call(t, a) || r.delete(a);
      }), t) {
        var n = t.__META, i = zt(t, ["__META"]);
        Object.keys(i).forEach(function(a) {
          r.merge(a, i[a]);
        }), n && n.extraRootIds.forEach(this.retain, this);
      }
    }, e.prototype.retain = function(t) {
      return this.rootIds[t] = (this.rootIds[t] || 0) + 1;
    }, e.prototype.release = function(t) {
      if (this.rootIds[t] > 0) {
        var r = --this.rootIds[t];
        return r || delete this.rootIds[t], r;
      }
      return 0;
    }, e.prototype.getRootIdSet = function(t) {
      return t === void 0 && (t = /* @__PURE__ */ new Set()), Object.keys(this.rootIds).forEach(t.add, t), this instanceof Ar ? this.parent.getRootIdSet(t) : Object.keys(this.policies.rootTypenamesById).forEach(t.add, t), t;
    }, e.prototype.gc = function() {
      var t = this, r = this.getRootIdSet(), n = this.toObject();
      r.forEach(function(o) {
        at.call(n, o) && (Object.keys(t.findChildRefIds(o)).forEach(r.add, r), delete n[o]);
      });
      var i = Object.keys(n);
      if (i.length) {
        for (var a = this; a instanceof Ar; )
          a = a.parent;
        i.forEach(function(o) {
          return a.delete(o);
        });
      }
      return i;
    }, e.prototype.findChildRefIds = function(t) {
      if (!at.call(this.refs, t)) {
        var r = this.refs[t] = /* @__PURE__ */ Object.create(null), n = this.data[t];
        if (!n)
          return r;
        var i = /* @__PURE__ */ new Set([n]);
        i.forEach(function(a) {
          Ae(a) && (r[a.__ref] = !0), Ue(a) && Object.keys(a).forEach(function(o) {
            var s = a[o];
            Ue(s) && i.add(s);
          });
        });
      }
      return this.refs[t];
    }, e.prototype.makeCacheKey = function() {
      return this.group.keyMaker.lookupArray(arguments);
    }, e;
  }()
), vv = (
  /** @class */
  function() {
    function e(t, r) {
      r === void 0 && (r = null), this.caching = t, this.parent = r, this.d = null, this.resetCaching();
    }
    return e.prototype.resetCaching = function() {
      this.d = this.caching ? zm() : null, this.keyMaker = new vi(xn);
    }, e.prototype.depend = function(t, r) {
      if (this.d) {
        this.d(ku(t, r));
        var n = Ur(r);
        n !== r && this.d(ku(t, n)), this.parent && this.parent.depend(t, r);
      }
    }, e.prototype.dirty = function(t, r) {
      this.d && this.d.dirty(
        ku(t, r),
        // When storeFieldName === "__exists", that means the entity identified
        // by dataId has either disappeared from the cache or was newly added,
        // so the result caching system would do well to "forget everything it
        // knows" about that object. To achieve that kind of invalidation, we
        // not only dirty the associated result cache entry, but also remove it
        // completely from the dependency graph. For the optimism implementation
        // details, see https://github.com/benjamn/optimism/pull/195.
        r === "__exists" ? "forget" : "setDirty"
      );
    }, e;
  }()
);
function ku(e, t) {
  return t + "#" + e;
}
function Wf(e, t) {
  Gi(e) && e.group.depend(t, "__exists");
}
(function(e) {
  var t = (
    /** @class */
    function(r) {
      Kt(n, r);
      function n(i) {
        var a = i.policies, o = i.resultCaching, s = o === void 0 ? !0 : o, u = i.seed, l = r.call(this, a, new vv(s)) || this;
        return l.stump = new R2(l), l.storageTrie = new vi(xn), u && l.replace(u), l;
      }
      return n.prototype.addLayer = function(i, a) {
        return this.stump.addLayer(i, a);
      }, n.prototype.removeLayer = function() {
        return this;
      }, n.prototype.getStorage = function() {
        return this.storageTrie.lookupArray(arguments);
      }, n;
    }(e)
  );
  e.Root = t;
})(da || (da = {}));
var Ar = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r, n, i, a) {
      var o = e.call(this, n.policies, a) || this;
      return o.id = r, o.parent = n, o.replay = i, o.group = a, i(o), o;
    }
    return t.prototype.addLayer = function(r, n) {
      return new t(r, this, n, this.group);
    }, t.prototype.removeLayer = function(r) {
      var n = this, i = this.parent.removeLayer(r);
      return r === this.id ? (this.group.caching && Object.keys(this.data).forEach(function(a) {
        var o = n.data[a], s = i.lookup(a);
        s ? o ? o !== s && Object.keys(o).forEach(function(u) {
          Te(o[u], s[u]) || n.group.dirty(a, u);
        }) : (n.group.dirty(a, "__exists"), Object.keys(s).forEach(function(u) {
          n.group.dirty(a, u);
        })) : n.delete(a);
      }), i) : i === this.parent ? this : i.addLayer(this.id, this.replay);
    }, t.prototype.toObject = function() {
      return M(M({}, this.parent.toObject()), this.data);
    }, t.prototype.findChildRefIds = function(r) {
      var n = this.parent.findChildRefIds(r);
      return at.call(this.data, r) ? M(M({}, n), e.prototype.findChildRefIds.call(this, r)) : n;
    }, t.prototype.getStorage = function() {
      for (var r = this.parent; r.parent; )
        r = r.parent;
      return r.getStorage.apply(
        r,
        // @ts-expect-error
        arguments
      );
    }, t;
  }(da)
), R2 = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      return e.call(this, "EntityStore.Stump", r, function() {
      }, new vv(r.group.caching, r.group)) || this;
    }
    return t.prototype.removeLayer = function() {
      return this;
    }, t.prototype.merge = function(r, n) {
      return this.parent.merge(r, n);
    }, t;
  }(Ar)
);
function B2(e, t, r) {
  var n = e[r], i = t[r];
  return Te(n, i) ? n : i;
}
function Gi(e) {
  return !!(e instanceof da && e.group.caching);
}
function M2(e) {
  return Ue(e) ? qe(e) ? e.slice(0) : M({ __proto__: Object.getPrototypeOf(e) }, e) : e;
}
var Qf = (
  /** @class */
  function() {
    function e() {
      this.known = new (Em ? WeakSet : Set)(), this.pool = new vi(xn), this.passes = /* @__PURE__ */ new WeakMap(), this.keysByJSON = /* @__PURE__ */ new Map(), this.empty = this.admit({});
    }
    return e.prototype.isKnown = function(t) {
      return Ue(t) && this.known.has(t);
    }, e.prototype.pass = function(t) {
      if (Ue(t)) {
        var r = M2(t);
        return this.passes.set(r, t), r;
      }
      return t;
    }, e.prototype.admit = function(t) {
      var r = this;
      if (Ue(t)) {
        var n = this.passes.get(t);
        if (n)
          return n;
        var i = Object.getPrototypeOf(t);
        switch (i) {
          case Array.prototype: {
            if (this.known.has(t))
              return t;
            var a = t.map(this.admit, this), o = this.pool.lookupArray(a);
            return o.array || (this.known.add(o.array = a), globalThis.__DEV__ !== !1 && Object.freeze(a)), o.array;
          }
          case null:
          case Object.prototype: {
            if (this.known.has(t))
              return t;
            var s = Object.getPrototypeOf(t), u = [s], l = this.sortedKeys(t);
            u.push(l.json);
            var c = u.length;
            l.sorted.forEach(function(h) {
              u.push(r.admit(t[h]));
            });
            var o = this.pool.lookupArray(u);
            if (!o.object) {
              var d = o.object = Object.create(s);
              this.known.add(d), l.sorted.forEach(function(h, p) {
                d[h] = u[c + p];
              }), globalThis.__DEV__ !== !1 && Object.freeze(d);
            }
            return o.object;
          }
        }
      }
      return t;
    }, e.prototype.sortedKeys = function(t) {
      var r = Object.keys(t), n = this.pool.lookupArray(r);
      if (!n.keys) {
        r.sort();
        var i = JSON.stringify(r);
        (n.keys = this.keysByJSON.get(i)) || this.keysByJSON.set(i, n.keys = { sorted: r, json: i });
      }
      return n.keys;
    }, e;
  }()
);
function Gf(e) {
  return [
    e.selectionSet,
    e.objectOrReference,
    e.context,
    // We split out this property so we can pass different values
    // independently without modifying options.context itself.
    e.context.canonizeResults
  ];
}
var N2 = (
  /** @class */
  function() {
    function e(t) {
      var r = this;
      this.knownResults = new (xn ? WeakMap : Map)(), this.config = dn(t, {
        addTypename: t.addTypename !== !1,
        canonizeResults: hv(t)
      }), this.canon = t.canon || new Qf(), this.executeSelectionSet = ua(function(n) {
        var i, a = n.context.canonizeResults, o = Gf(n);
        o[3] = !a;
        var s = (i = r.executeSelectionSet).peek.apply(i, o);
        return s ? a ? M(M({}, s), {
          // If we previously read this result without canonizing it, we can
          // reuse that result simply by canonizing it now.
          result: r.canon.admit(s.result)
        }) : s : (Wf(n.context.store, n.enclosingRef.__ref), r.execSelectionSetImpl(n));
      }, {
        max: this.config.resultCacheMaxSize || Xt["inMemoryCache.executeSelectionSet"] || 5e4,
        keyArgs: Gf,
        // Note that the parameters of makeCacheKey are determined by the
        // array returned by keyArgs.
        makeCacheKey: function(n, i, a, o) {
          if (Gi(a.store))
            return a.store.makeCacheKey(n, Ae(i) ? i.__ref : i, a.varString, o);
        }
      }), this.executeSubSelectedArray = ua(function(n) {
        return Wf(n.context.store, n.enclosingRef.__ref), r.execSubSelectedArrayImpl(n);
      }, {
        max: this.config.resultCacheMaxSize || Xt["inMemoryCache.executeSubSelectedArray"] || 1e4,
        makeCacheKey: function(n) {
          var i = n.field, a = n.array, o = n.context;
          if (Gi(o.store))
            return o.store.makeCacheKey(i, a, o.varString);
        }
      });
    }
    return e.prototype.resetCanon = function() {
      this.canon = new Qf();
    }, e.prototype.diffQueryAgainstStore = function(t) {
      var r = t.store, n = t.query, i = t.rootId, a = i === void 0 ? "ROOT_QUERY" : i, o = t.variables, s = t.returnPartialData, u = s === void 0 ? !0 : s, l = t.canonizeResults, c = l === void 0 ? this.config.canonizeResults : l, d = this.config.cache.policies;
      o = M(M({}, Wc(Am(n))), o);
      var f = Hn(a), h = this.executeSelectionSet({
        selectionSet: _a(n).selectionSet,
        objectOrReference: f,
        enclosingRef: f,
        context: M({ store: r, query: n, policies: d, variables: o, varString: Lr(o), canonizeResults: c }, mv(n, this.config.fragments))
      }), p;
      if (h.missing && (p = [
        new cv(L2(h.missing), h.missing, n, o)
      ], !u))
        throw p[0];
      return {
        result: h.result,
        complete: !p,
        missing: p
      };
    }, e.prototype.isFresh = function(t, r, n, i) {
      if (Gi(i.store) && this.knownResults.get(t) === n) {
        var a = this.executeSelectionSet.peek(
          n,
          r,
          i,
          // If result is canonical, then it could only have been previously
          // cached by the canonizing version of executeSelectionSet, so we can
          // avoid checking both possibilities here.
          this.canon.isKnown(t)
        );
        if (a && t === a.result)
          return !0;
      }
      return !1;
    }, e.prototype.execSelectionSetImpl = function(t) {
      var r = this, n = t.selectionSet, i = t.objectOrReference, a = t.enclosingRef, o = t.context;
      if (Ae(i) && !o.policies.rootTypenamesById[i.__ref] && !o.store.has(i.__ref))
        return {
          result: this.canon.empty,
          missing: "Dangling reference to missing ".concat(i.__ref, " object")
        };
      var s = o.variables, u = o.policies, l = o.store, c = l.getFieldValue(i, "__typename"), d = [], f, h = new Kr();
      this.config.addTypename && typeof c == "string" && !u.rootIdsByTypename[c] && d.push({ __typename: c });
      function p(b, D) {
        var S;
        return b.missing && (f = h.merge(f, (S = {}, S[D] = b.missing, S))), b.result;
      }
      var v = new Set(n.selections);
      v.forEach(function(b) {
        var D, S;
        if (Pa(b, s))
          if (jr(b)) {
            var P = u.readField({
              fieldName: b.name.value,
              field: b,
              variables: o.variables,
              from: i
            }, o), B = Vr(b);
            P === void 0 ? Jc.added(b) || (f = h.merge(f, (D = {}, D[B] = "Can't find field '".concat(b.name.value, "' on ").concat(Ae(i) ? i.__ref + " object" : "object " + JSON.stringify(i, null, 2)), D))) : qe(P) ? P.length > 0 && (P = p(r.executeSubSelectedArray({
              field: b,
              array: P,
              enclosingRef: a,
              context: o
            }), B)) : b.selectionSet ? P != null && (P = p(r.executeSelectionSet({
              selectionSet: b.selectionSet,
              objectOrReference: P,
              enclosingRef: Ae(P) ? P : a,
              context: o
            }), B)) : o.canonizeResults && (P = r.canon.pass(P)), P !== void 0 && d.push((S = {}, S[B] = P, S));
          } else {
            var y = Ps(b, o.lookupFragment);
            if (!y && b.kind === te.FRAGMENT_SPREAD)
              throw ht(9, b.name.value);
            y && u.fragmentMatches(y, c) && y.selectionSet.selections.forEach(v.add, v);
          }
      });
      var g = Is(d), $ = { result: g, missing: f }, m = o.canonizeResults ? this.canon.admit($) : la($);
      return m.result && this.knownResults.set(m.result, n), m;
    }, e.prototype.execSubSelectedArrayImpl = function(t) {
      var r = this, n = t.field, i = t.array, a = t.enclosingRef, o = t.context, s, u = new Kr();
      function l(c, d) {
        var f;
        return c.missing && (s = u.merge(s, (f = {}, f[d] = c.missing, f))), c.result;
      }
      return n.selectionSet && (i = i.filter(o.store.canRead)), i = i.map(function(c, d) {
        return c === null ? null : qe(c) ? l(r.executeSubSelectedArray({
          field: n,
          array: c,
          enclosingRef: a,
          context: o
        }), d) : n.selectionSet ? l(r.executeSelectionSet({
          selectionSet: n.selectionSet,
          objectOrReference: c,
          enclosingRef: Ae(c) ? c : a,
          context: o
        }), d) : (globalThis.__DEV__ !== !1 && V2(o.store, n, c), c);
      }), {
        result: o.canonizeResults ? this.canon.admit(i) : i,
        missing: s
      };
    }, e;
  }()
);
function L2(e) {
  try {
    JSON.stringify(e, function(t, r) {
      if (typeof r == "string")
        throw r;
      return r;
    });
  } catch (t) {
    return t;
  }
}
function V2(e, t, r) {
  if (!t.selectionSet) {
    var n = /* @__PURE__ */ new Set([r]);
    n.forEach(function(i) {
      Ue(i) && (ue(
        !Ae(i),
        10,
        O2(e, i),
        t.name.value
      ), Object.values(i).forEach(n.add, n));
    });
  }
}
var id = new _m(), Zf = /* @__PURE__ */ new WeakMap();
function Zi(e) {
  var t = Zf.get(e);
  return t || Zf.set(e, t = {
    vars: /* @__PURE__ */ new Set(),
    dep: zm()
  }), t;
}
function Yf(e) {
  Zi(e).vars.forEach(function(t) {
    return t.forgetCache(e);
  });
}
function j2(e) {
  Zi(e).vars.forEach(function(t) {
    return t.attachCache(e);
  });
}
function z2(e) {
  var t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), n = function(a) {
    if (arguments.length > 0) {
      if (e !== a) {
        e = a, t.forEach(function(u) {
          Zi(u).dep.dirty(n), K2(u);
        });
        var o = Array.from(r);
        r.clear(), o.forEach(function(u) {
          return u(e);
        });
      }
    } else {
      var s = id.getValue();
      s && (i(s), Zi(s).dep(n));
    }
    return e;
  };
  n.onNextChange = function(a) {
    return r.add(a), function() {
      r.delete(a);
    };
  };
  var i = n.attachCache = function(a) {
    return t.add(a), Zi(a).vars.add(n), n;
  };
  return n.forgetCache = function(a) {
    return t.delete(a);
  }, n;
}
function K2(e) {
  e.broadcastWatches && e.broadcastWatches();
}
var Jf = /* @__PURE__ */ Object.create(null);
function ad(e) {
  var t = JSON.stringify(e);
  return Jf[t] || (Jf[t] = /* @__PURE__ */ Object.create(null));
}
function Xf(e) {
  var t = ad(e);
  return t.keyFieldsFn || (t.keyFieldsFn = function(r, n) {
    var i = function(o, s) {
      return n.readField(s, o);
    }, a = n.keyObject = od(e, function(o) {
      var s = Qn(
        n.storeObject,
        o,
        // Using context.readField to extract paths from context.storeObject
        // allows the extraction to see through Reference objects and respect
        // custom read functions.
        i
      );
      return s === void 0 && r !== n.storeObject && at.call(r, o[0]) && (s = Qn(r, o, gv)), ue(s !== void 0, 4, o.join("."), r), s;
    });
    return "".concat(n.typename, ":").concat(JSON.stringify(a));
  });
}
function eh(e) {
  var t = ad(e);
  return t.keyArgsFn || (t.keyArgsFn = function(r, n) {
    var i = n.field, a = n.variables, o = n.fieldName, s = od(e, function(l) {
      var c = l[0], d = c.charAt(0);
      if (d === "@") {
        if (i && Bt(i.directives)) {
          var f = c.slice(1), h = i.directives.find(function($) {
            return $.name.value === f;
          }), p = h && Ts(h, a);
          return p && Qn(
            p,
            // If keyPath.length === 1, this code calls extractKeyPath with an
            // empty path, which works because it uses directiveArgs as the
            // extracted value.
            l.slice(1)
          );
        }
        return;
      }
      if (d === "$") {
        var v = c.slice(1);
        if (a && at.call(a, v)) {
          var g = l.slice(0);
          return g[0] = v, Qn(a, g);
        }
        return;
      }
      if (r)
        return Qn(r, l);
    }), u = JSON.stringify(s);
    return (r || u !== "{}") && (o += ":" + u), o;
  });
}
function od(e, t) {
  var r = new Kr();
  return yv(e).reduce(function(n, i) {
    var a, o = t(i);
    if (o !== void 0) {
      for (var s = i.length - 1; s >= 0; --s)
        o = (a = {}, a[i[s]] = o, a);
      n = r.merge(n, o);
    }
    return n;
  }, /* @__PURE__ */ Object.create(null));
}
function yv(e) {
  var t = ad(e);
  if (!t.paths) {
    var r = t.paths = [], n = [];
    e.forEach(function(i, a) {
      qe(i) ? (yv(i).forEach(function(o) {
        return r.push(n.concat(o));
      }), n.length = 0) : (n.push(i), qe(e[a + 1]) || (r.push(n.slice(0)), n.length = 0));
    });
  }
  return t.paths;
}
function gv(e, t) {
  return e[t];
}
function Qn(e, t, r) {
  return r = r || gv, bv(t.reduce(function n(i, a) {
    return qe(i) ? i.map(function(o) {
      return n(o, a);
    }) : i && r(i, a);
  }, e));
}
function bv(e) {
  return Ue(e) ? qe(e) ? e.map(bv) : od(Object.keys(e).sort(), function(t) {
    return Qn(e, t);
  }) : e;
}
function Il(e) {
  return e.args !== void 0 ? e.args : e.field ? Ts(e.field, e.variables) : null;
}
var U2 = function() {
}, th = function(e, t) {
  return t.fieldName;
}, rh = function(e, t, r) {
  var n = r.mergeObjects;
  return n(e, t);
}, nh = function(e, t) {
  return t;
}, q2 = (
  /** @class */
  function() {
    function e(t) {
      this.config = t, this.typePolicies = /* @__PURE__ */ Object.create(null), this.toBeAdded = /* @__PURE__ */ Object.create(null), this.supertypeMap = /* @__PURE__ */ new Map(), this.fuzzySubtypes = /* @__PURE__ */ new Map(), this.rootIdsByTypename = /* @__PURE__ */ Object.create(null), this.rootTypenamesById = /* @__PURE__ */ Object.create(null), this.usingPossibleTypes = !1, this.config = M({ dataIdFromObject: dv }, t), this.cache = this.config.cache, this.setRootTypename("Query"), this.setRootTypename("Mutation"), this.setRootTypename("Subscription"), t.possibleTypes && this.addPossibleTypes(t.possibleTypes), t.typePolicies && this.addTypePolicies(t.typePolicies);
    }
    return e.prototype.identify = function(t, r) {
      var n, i = this, a = r && (r.typename || ((n = r.storeObject) === null || n === void 0 ? void 0 : n.__typename)) || t.__typename;
      if (a === this.rootTypenamesById.ROOT_QUERY)
        return ["ROOT_QUERY"];
      for (var o = r && r.storeObject || t, s = M(M({}, r), { typename: a, storeObject: o, readField: r && r.readField || function() {
        var f = sd(arguments, o);
        return i.readField(f, {
          store: i.cache.data,
          variables: f.variables
        });
      } }), u, l = a && this.getTypePolicy(a), c = l && l.keyFn || this.config.dataIdFromObject; c; ) {
        var d = c(M(M({}, t), o), s);
        if (qe(d))
          c = Xf(d);
        else {
          u = d;
          break;
        }
      }
      return u = u ? String(u) : void 0, s.keyObject ? [u, s.keyObject] : [u];
    }, e.prototype.addTypePolicies = function(t) {
      var r = this;
      Object.keys(t).forEach(function(n) {
        var i = t[n], a = i.queryType, o = i.mutationType, s = i.subscriptionType, u = zt(i, ["queryType", "mutationType", "subscriptionType"]);
        a && r.setRootTypename("Query", n), o && r.setRootTypename("Mutation", n), s && r.setRootTypename("Subscription", n), at.call(r.toBeAdded, n) ? r.toBeAdded[n].push(u) : r.toBeAdded[n] = [u];
      });
    }, e.prototype.updateTypePolicy = function(t, r) {
      var n = this, i = this.getTypePolicy(t), a = r.keyFields, o = r.fields;
      function s(u, l) {
        u.merge = typeof l == "function" ? l : l === !0 ? rh : l === !1 ? nh : u.merge;
      }
      s(i, r.merge), i.keyFn = // Pass false to disable normalization for this typename.
      a === !1 ? U2 : qe(a) ? Xf(a) : typeof a == "function" ? a : i.keyFn, o && Object.keys(o).forEach(function(u) {
        var l = n.getFieldPolicy(t, u, !0), c = o[u];
        if (typeof c == "function")
          l.read = c;
        else {
          var d = c.keyArgs, f = c.read, h = c.merge;
          l.keyFn = // Pass false to disable argument-based differentiation of
          // field identities.
          d === !1 ? th : qe(d) ? eh(d) : typeof d == "function" ? d : l.keyFn, typeof f == "function" && (l.read = f), s(l, h);
        }
        l.read && l.merge && (l.keyFn = l.keyFn || th);
      });
    }, e.prototype.setRootTypename = function(t, r) {
      r === void 0 && (r = t);
      var n = "ROOT_" + t.toUpperCase(), i = this.rootTypenamesById[n];
      r !== i && (ue(!i || i === t, 5, t), i && delete this.rootIdsByTypename[i], this.rootIdsByTypename[r] = n, this.rootTypenamesById[n] = r);
    }, e.prototype.addPossibleTypes = function(t) {
      var r = this;
      this.usingPossibleTypes = !0, Object.keys(t).forEach(function(n) {
        r.getSupertypeSet(n, !0), t[n].forEach(function(i) {
          r.getSupertypeSet(i, !0).add(n);
          var a = i.match(pv);
          (!a || a[0] !== i) && r.fuzzySubtypes.set(i, new RegExp(i));
        });
      });
    }, e.prototype.getTypePolicy = function(t) {
      var r = this;
      if (!at.call(this.typePolicies, t)) {
        var n = this.typePolicies[t] = /* @__PURE__ */ Object.create(null);
        n.fields = /* @__PURE__ */ Object.create(null);
        var i = this.supertypeMap.get(t);
        !i && this.fuzzySubtypes.size && (i = this.getSupertypeSet(t, !0), this.fuzzySubtypes.forEach(function(o, s) {
          if (o.test(t)) {
            var u = r.supertypeMap.get(s);
            u && u.forEach(function(l) {
              return i.add(l);
            });
          }
        })), i && i.size && i.forEach(function(o) {
          var s = r.getTypePolicy(o), u = s.fields, l = zt(s, ["fields"]);
          Object.assign(n, l), Object.assign(n.fields, u);
        });
      }
      var a = this.toBeAdded[t];
      return a && a.length && a.splice(0).forEach(function(o) {
        r.updateTypePolicy(t, o);
      }), this.typePolicies[t];
    }, e.prototype.getFieldPolicy = function(t, r, n) {
      if (t) {
        var i = this.getTypePolicy(t).fields;
        return i[r] || n && (i[r] = /* @__PURE__ */ Object.create(null));
      }
    }, e.prototype.getSupertypeSet = function(t, r) {
      var n = this.supertypeMap.get(t);
      return !n && r && this.supertypeMap.set(t, n = /* @__PURE__ */ new Set()), n;
    }, e.prototype.fragmentMatches = function(t, r, n, i) {
      var a = this;
      if (!t.typeCondition)
        return !0;
      if (!r)
        return !1;
      var o = t.typeCondition.name.value;
      if (r === o)
        return !0;
      if (this.usingPossibleTypes && this.supertypeMap.has(o))
        for (var s = this.getSupertypeSet(r, !0), u = [s], l = function(p) {
          var v = a.getSupertypeSet(p, !1);
          v && v.size && u.indexOf(v) < 0 && u.push(v);
        }, c = !!(n && this.fuzzySubtypes.size), d = !1, f = 0; f < u.length; ++f) {
          var h = u[f];
          if (h.has(o))
            return s.has(o) || (d && globalThis.__DEV__ !== !1 && ue.warn(6, r, o), s.add(o)), !0;
          h.forEach(l), c && // Start checking fuzzy subtypes only after exhausting all
          // non-fuzzy subtypes (after the final iteration of the loop).
          f === u.length - 1 && // We could wait to compare fragment.selectionSet to result
          // after we verify the supertype, but this check is often less
          // expensive than that search, and we will have to do the
          // comparison anyway whenever we find a potential match.
          Ol(t.selectionSet, n, i) && (c = !1, d = !0, this.fuzzySubtypes.forEach(function(p, v) {
            var g = r.match(p);
            g && g[0] === r && l(v);
          }));
        }
      return !1;
    }, e.prototype.hasKeyArgs = function(t, r) {
      var n = this.getFieldPolicy(t, r, !1);
      return !!(n && n.keyFn);
    }, e.prototype.getStoreFieldName = function(t) {
      var r = t.typename, n = t.fieldName, i = this.getFieldPolicy(r, n, !1), a, o = i && i.keyFn;
      if (o && r)
        for (var s = {
          typename: r,
          fieldName: n,
          field: t.field || null,
          variables: t.variables
        }, u = Il(t); o; ) {
          var l = o(u, s);
          if (qe(l))
            o = eh(l);
          else {
            a = l || n;
            break;
          }
        }
      return a === void 0 && (a = t.field ? c5(t.field, t.variables) : Tm(n, Il(t))), a === !1 ? n : n === Ur(a) ? a : n + ":" + a;
    }, e.prototype.readField = function(t, r) {
      var n = t.from;
      if (n) {
        var i = t.field || t.fieldName;
        if (i) {
          if (t.typename === void 0) {
            var a = r.store.getFieldValue(n, "__typename");
            a && (t.typename = a);
          }
          var o = this.getStoreFieldName(t), s = Ur(o), u = r.store.getFieldValue(n, o), l = this.getFieldPolicy(t.typename, s, !1), c = l && l.read;
          if (c) {
            var d = ih(this, n, t, r, r.store.getStorage(Ae(n) ? n.__ref : n, o));
            return id.withValue(this.cache, c, [
              u,
              d
            ]);
          }
          return u;
        }
      }
    }, e.prototype.getReadFunction = function(t, r) {
      var n = this.getFieldPolicy(t, r, !1);
      return n && n.read;
    }, e.prototype.getMergeFunction = function(t, r, n) {
      var i = this.getFieldPolicy(t, r, !1), a = i && i.merge;
      return !a && n && (i = this.getTypePolicy(n), a = i && i.merge), a;
    }, e.prototype.runMergeFunction = function(t, r, n, i, a) {
      var o = n.field, s = n.typename, u = n.merge;
      return u === rh ? $v(i.store)(t, r) : u === nh ? r : (i.overwrite && (t = void 0), u(t, r, ih(
        this,
        // Unlike options.readField for read functions, we do not fall
        // back to the current object if no foreignObjOrRef is provided,
        // because it's not clear what the current object should be for
        // merge functions: the (possibly undefined) existing object, or
        // the incoming object? If you think your merge function needs
        // to read sibling fields in order to produce a new value for
        // the current field, you might want to rethink your strategy,
        // because that's a recipe for making merge behavior sensitive
        // to the order in which fields are written into the cache.
        // However, readField(name, ref) is useful for merge functions
        // that need to deduplicate child objects and references.
        void 0,
        {
          typename: s,
          fieldName: o.name.value,
          field: o,
          variables: i.variables
        },
        i,
        a || /* @__PURE__ */ Object.create(null)
      )));
    }, e;
  }()
);
function ih(e, t, r, n, i) {
  var a = e.getStoreFieldName(r), o = Ur(a), s = r.variables || n.variables, u = n.store, l = u.toReference, c = u.canRead;
  return {
    args: Il(r),
    field: r.field || null,
    fieldName: o,
    storeFieldName: a,
    variables: s,
    isReference: Ae,
    toReference: l,
    storage: i,
    cache: e.cache,
    canRead: c,
    readField: function() {
      return e.readField(sd(arguments, t, s), n);
    },
    mergeObjects: $v(n.store)
  };
}
function sd(e, t, r) {
  var n = e[0], i = e[1], a = e.length, o;
  return typeof n == "string" ? o = {
    fieldName: n,
    // Default to objectOrReference only when no second argument was
    // passed for the from parameter, not when undefined is explicitly
    // passed as the second argument.
    from: a > 1 ? i : t
  } : (o = M({}, n), at.call(o, "from") || (o.from = t)), globalThis.__DEV__ !== !1 && o.from === void 0 && globalThis.__DEV__ !== !1 && ue.warn(7, cm(Array.from(e))), o.variables === void 0 && (o.variables = r), o;
}
function $v(e) {
  return function(r, n) {
    if (qe(r) || qe(n))
      throw ht(8);
    if (Ue(r) && Ue(n)) {
      var i = e.getFieldValue(r, "__typename"), a = e.getFieldValue(n, "__typename"), o = i && a && i !== a;
      if (o)
        return n;
      if (Ae(r) && Ln(n))
        return e.merge(r.__ref, n), r;
      if (Ln(r) && Ae(n))
        return e.merge(r, n.__ref), n;
      if (Ln(r) && Ln(n))
        return M(M({}, r), n);
    }
    return n;
  };
}
function Pu(e, t, r) {
  var n = "".concat(t).concat(r), i = e.flavors.get(n);
  return i || e.flavors.set(n, i = e.clientOnly === t && e.deferred === r ? e : M(M({}, e), { clientOnly: t, deferred: r })), i;
}
var H2 = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.cache = t, this.reader = r, this.fragments = n;
    }
    return e.prototype.writeToStore = function(t, r) {
      var n = this, i = r.query, a = r.result, o = r.dataId, s = r.variables, u = r.overwrite, l = Aa(i), c = I2();
      s = M(M({}, Wc(l)), s);
      var d = M(M({ store: t, written: /* @__PURE__ */ Object.create(null), merge: function(h, p) {
        return c.merge(h, p);
      }, variables: s, varString: Lr(s) }, mv(i, this.fragments)), { overwrite: !!u, incomingById: /* @__PURE__ */ new Map(), clientOnly: !1, deferred: !1, flavors: /* @__PURE__ */ new Map() }), f = this.processSelectionSet({
        result: a || /* @__PURE__ */ Object.create(null),
        dataId: o,
        selectionSet: l.selectionSet,
        mergeTree: { map: /* @__PURE__ */ new Map() },
        context: d
      });
      if (!Ae(f))
        throw ht(11, a);
      return d.incomingById.forEach(function(h, p) {
        var v = h.storeObject, g = h.mergeTree, $ = h.fieldNodeSet, m = Hn(p);
        if (g && g.map.size) {
          var b = n.applyMerges(g, m, v, d);
          if (Ae(b))
            return;
          v = b;
        }
        if (globalThis.__DEV__ !== !1 && !d.overwrite) {
          var D = /* @__PURE__ */ Object.create(null);
          $.forEach(function(B) {
            B.selectionSet && (D[B.name.value] = !0);
          });
          var S = function(B) {
            return D[Ur(B)] === !0;
          }, P = function(B) {
            var y = g && g.map.get(B);
            return !!(y && y.info && y.info.merge);
          };
          Object.keys(v).forEach(function(B) {
            S(B) && !P(B) && W2(m, v, B, d.store);
          });
        }
        t.merge(p, v);
      }), t.retain(f.__ref), f;
    }, e.prototype.processSelectionSet = function(t) {
      var r = this, n = t.dataId, i = t.result, a = t.selectionSet, o = t.context, s = t.mergeTree, u = this.cache.policies, l = /* @__PURE__ */ Object.create(null), c = n && u.rootTypenamesById[n] || wl(i, a, o.fragmentMap) || n && o.store.get(n, "__typename");
      typeof c == "string" && (l.__typename = c);
      var d = function() {
        var b = sd(arguments, l, o.variables);
        if (Ae(b.from)) {
          var D = o.incomingById.get(b.from.__ref);
          if (D) {
            var S = u.readField(M(M({}, b), { from: D.storeObject }), o);
            if (S !== void 0)
              return S;
          }
        }
        return u.readField(b, o);
      }, f = /* @__PURE__ */ new Set();
      this.flattenFields(
        a,
        i,
        // This WriteContext will be the default context value for fields returned
        // by the flattenFields method, but some fields may be assigned a modified
        // context, depending on the presence of @client and other directives.
        o,
        c
      ).forEach(function(b, D) {
        var S, P = Vr(D), B = i[P];
        if (f.add(D), B !== void 0) {
          var y = u.getStoreFieldName({
            typename: c,
            fieldName: D.name.value,
            field: D,
            variables: b.variables
          }), _ = ah(s, y), w = r.processFieldValue(
            B,
            D,
            // Reset context.clientOnly and context.deferred to their default
            // values before processing nested selection sets.
            D.selectionSet ? Pu(b, !1, !1) : b,
            _
          ), E = void 0;
          D.selectionSet && (Ae(w) || Ln(w)) && (E = d("__typename", w));
          var k = u.getMergeFunction(c, D.name.value, E);
          k ? _.info = {
            // TODO Check compatibility against any existing childTree.field?
            field: D,
            typename: c,
            merge: k
          } : oh(s, y), l = b.merge(l, (S = {}, S[y] = w, S));
        } else globalThis.__DEV__ !== !1 && !b.clientOnly && !b.deferred && !Jc.added(D) && // If the field has a read function, it may be a synthetic field or
        // provide a default value, so its absence from the written data should
        // not be cause for alarm.
        !u.getReadFunction(c, D.name.value) && globalThis.__DEV__ !== !1 && ue.error(12, Vr(D), i);
      });
      try {
        var h = u.identify(i, {
          typename: c,
          selectionSet: a,
          fragmentMap: o.fragmentMap,
          storeObject: l,
          readField: d
        }), p = h[0], v = h[1];
        n = n || p, v && (l = o.merge(l, v));
      } catch (b) {
        if (!n)
          throw b;
      }
      if (typeof n == "string") {
        var g = Hn(n), $ = o.written[n] || (o.written[n] = []);
        if ($.indexOf(a) >= 0 || ($.push(a), this.reader && this.reader.isFresh(i, g, a, o)))
          return g;
        var m = o.incomingById.get(n);
        return m ? (m.storeObject = o.merge(m.storeObject, l), m.mergeTree = Rl(m.mergeTree, s), f.forEach(function(b) {
          return m.fieldNodeSet.add(b);
        })) : o.incomingById.set(n, {
          storeObject: l,
          // Save a reference to mergeTree only if it is not empty, because
          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and
          // reused for entirely different parts of the result tree.
          mergeTree: Ro(s) ? void 0 : s,
          fieldNodeSet: f
        }), g;
      }
      return l;
    }, e.prototype.processFieldValue = function(t, r, n, i) {
      var a = this;
      return !r.selectionSet || t === null ? globalThis.__DEV__ !== !1 ? Zm(t) : t : qe(t) ? t.map(function(o, s) {
        var u = a.processFieldValue(o, r, n, ah(i, s));
        return oh(i, s), u;
      }) : this.processSelectionSet({
        result: t,
        selectionSet: r.selectionSet,
        context: n,
        mergeTree: i
      });
    }, e.prototype.flattenFields = function(t, r, n, i) {
      i === void 0 && (i = wl(r, t, n.fragmentMap));
      var a = /* @__PURE__ */ new Map(), o = this.cache.policies, s = new vi(!1);
      return function u(l, c) {
        var d = s.lookup(
          l,
          // Because we take inheritedClientOnly and inheritedDeferred into
          // consideration here (in addition to selectionSet), it's possible for
          // the same selection set to be flattened more than once, if it appears
          // in the query with different @client and/or @directive configurations.
          c.clientOnly,
          c.deferred
        );
        d.visited || (d.visited = !0, l.selections.forEach(function(f) {
          if (Pa(f, n.variables)) {
            var h = c.clientOnly, p = c.deferred;
            if (
              // Since the presence of @client or @defer on this field can only
              // cause clientOnly or deferred to become true, we can skip the
              // forEach loop if both clientOnly and deferred are already true.
              !(h && p) && Bt(f.directives) && f.directives.forEach(function($) {
                var m = $.name.value;
                if (m === "client" && (h = !0), m === "defer") {
                  var b = Ts($, n.variables);
                  (!b || b.if !== !1) && (p = !0);
                }
              }), jr(f)
            ) {
              var v = a.get(f);
              v && (h = h && v.clientOnly, p = p && v.deferred), a.set(f, Pu(n, h, p));
            } else {
              var g = Ps(f, n.lookupFragment);
              if (!g && f.kind === te.FRAGMENT_SPREAD)
                throw ht(13, f.name.value);
              g && o.fragmentMatches(g, i, r, n.variables) && u(g.selectionSet, Pu(n, h, p));
            }
          }
        }));
      }(t, n), a;
    }, e.prototype.applyMerges = function(t, r, n, i, a) {
      var o, s = this;
      if (t.map.size && !Ae(n)) {
        var u = (
          // Items in the same position in different arrays are not
          // necessarily related to each other, so when incoming is an array
          // we process its elements as if there was no existing data.
          !qe(n) && // Likewise, existing must be either a Reference or a StoreObject
          // in order for its fields to be safe to merge with the fields of
          // the incoming object.
          (Ae(r) || Ln(r)) ? r : void 0
        ), l = n;
        u && !a && (a = [Ae(u) ? u.__ref : u]);
        var c, d = function(f, h) {
          return qe(f) ? typeof h == "number" ? f[h] : void 0 : i.store.getFieldValue(f, String(h));
        };
        t.map.forEach(function(f, h) {
          var p = d(u, h), v = d(l, h);
          if (v !== void 0) {
            a && a.push(h);
            var g = s.applyMerges(f, p, v, i, a);
            g !== v && (c = c || /* @__PURE__ */ new Map(), c.set(h, g)), a && ue(a.pop() === h);
          }
        }), c && (n = qe(l) ? l.slice(0) : M({}, l), c.forEach(function(f, h) {
          n[h] = f;
        }));
      }
      return t.info ? this.cache.policies.runMergeFunction(r, n, t.info, i, a && (o = i.store).getStorage.apply(o, a)) : n;
    }, e;
  }()
), xv = [];
function ah(e, t) {
  var r = e.map;
  return r.has(t) || r.set(t, xv.pop() || { map: /* @__PURE__ */ new Map() }), r.get(t);
}
function Rl(e, t) {
  if (e === t || !t || Ro(t))
    return e;
  if (!e || Ro(e))
    return t;
  var r = e.info && t.info ? M(M({}, e.info), t.info) : e.info || t.info, n = e.map.size && t.map.size, i = n ? /* @__PURE__ */ new Map() : e.map.size ? e.map : t.map, a = { info: r, map: i };
  if (n) {
    var o = new Set(t.map.keys());
    e.map.forEach(function(s, u) {
      a.map.set(u, Rl(s, t.map.get(u))), o.delete(u);
    }), o.forEach(function(s) {
      a.map.set(s, Rl(t.map.get(s), e.map.get(s)));
    });
  }
  return a;
}
function Ro(e) {
  return !e || !(e.info || e.map.size);
}
function oh(e, t) {
  var r = e.map, n = r.get(t);
  n && Ro(n) && (xv.push(n), r.delete(t));
}
var sh = /* @__PURE__ */ new Set();
function W2(e, t, r, n) {
  var i = function(d) {
    var f = n.getFieldValue(d, r);
    return typeof f == "object" && f;
  }, a = i(e);
  if (a) {
    var o = i(t);
    if (o && !Ae(a) && !Te(a, o) && !Object.keys(a).every(function(d) {
      return n.getFieldValue(o, d) !== void 0;
    })) {
      var s = n.getFieldValue(e, "__typename") || n.getFieldValue(t, "__typename"), u = Ur(r), l = "".concat(s, ".").concat(u);
      if (!sh.has(l)) {
        sh.add(l);
        var c = [];
        !qe(a) && !qe(o) && [a, o].forEach(function(d) {
          var f = n.getFieldValue(d, "__typename");
          typeof f == "string" && !c.includes(f) && c.push(f);
        }), globalThis.__DEV__ !== !1 && ue.warn(14, u, s, c.length ? "either ensure all objects of type " + c.join(" and ") + " have an ID or a custom merge function, or " : "", l, M({}, a), M({}, o));
      }
    }
  }
}
var ud = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this) || this;
      return n.watches = /* @__PURE__ */ new Set(), n.addTypenameTransform = new Km(Jc), n.assumeImmutableResults = !0, n.makeVar = z2, n.txCount = 0, n.config = F2(r), n.addTypename = !!n.config.addTypename, n.policies = new q2({
        cache: n,
        dataIdFromObject: n.config.dataIdFromObject,
        possibleTypes: n.config.possibleTypes,
        typePolicies: n.config.typePolicies
      }), n.init(), n;
    }
    return t.prototype.init = function() {
      var r = this.data = new da.Root({
        policies: this.policies,
        resultCaching: this.config.resultCaching
      });
      this.optimisticData = r.stump, this.resetResultCache();
    }, t.prototype.resetResultCache = function(r) {
      var n = this, i = this.storeReader, a = this.config.fragments;
      this.storeWriter = new H2(this, this.storeReader = new N2({
        cache: this,
        addTypename: this.addTypename,
        resultCacheMaxSize: this.config.resultCacheMaxSize,
        canonizeResults: hv(this.config),
        canon: r ? void 0 : i && i.canon,
        fragments: a
      }), a), this.maybeBroadcastWatch = ua(function(o, s) {
        return n.broadcastWatch(o, s);
      }, {
        max: this.config.resultCacheMaxSize || Xt["inMemoryCache.maybeBroadcastWatch"] || 5e3,
        makeCacheKey: function(o) {
          var s = o.optimistic ? n.optimisticData : n.data;
          if (Gi(s)) {
            var u = o.optimistic, l = o.id, c = o.variables;
            return s.makeCacheKey(
              o.query,
              // Different watches can have the same query, optimistic
              // status, rootId, and variables, but if their callbacks are
              // different, the (identical) result needs to be delivered to
              // each distinct callback. The easiest way to achieve that
              // separation is to include c.callback in the cache key for
              // maybeBroadcastWatch calls. See issue #5733.
              o.callback,
              Lr({ optimistic: u, id: l, variables: c })
            );
          }
        }
      }), (/* @__PURE__ */ new Set([this.data.group, this.optimisticData.group])).forEach(function(o) {
        return o.resetCaching();
      });
    }, t.prototype.restore = function(r) {
      return this.init(), r && this.data.replace(r), this;
    }, t.prototype.extract = function(r) {
      return r === void 0 && (r = !1), (r ? this.optimisticData : this.data).extract();
    }, t.prototype.read = function(r) {
      var n = r.returnPartialData, i = n === void 0 ? !1 : n;
      try {
        return this.storeReader.diffQueryAgainstStore(M(M({}, r), { store: r.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData: i })).result || null;
      } catch (a) {
        if (a instanceof cv)
          return null;
        throw a;
      }
    }, t.prototype.write = function(r) {
      try {
        return ++this.txCount, this.storeWriter.writeToStore(this.data, r);
      } finally {
        !--this.txCount && r.broadcast !== !1 && this.broadcastWatches();
      }
    }, t.prototype.modify = function(r) {
      if (at.call(r, "id") && !r.id)
        return !1;
      var n = r.optimistic ? this.optimisticData : this.data;
      try {
        return ++this.txCount, n.modify(r.id || "ROOT_QUERY", r.fields);
      } finally {
        !--this.txCount && r.broadcast !== !1 && this.broadcastWatches();
      }
    }, t.prototype.diff = function(r) {
      return this.storeReader.diffQueryAgainstStore(M(M({}, r), { store: r.optimistic ? this.optimisticData : this.data, rootId: r.id || "ROOT_QUERY", config: this.config }));
    }, t.prototype.watch = function(r) {
      var n = this;
      return this.watches.size || j2(this), this.watches.add(r), r.immediate && this.maybeBroadcastWatch(r), function() {
        n.watches.delete(r) && !n.watches.size && Yf(n), n.maybeBroadcastWatch.forget(r);
      };
    }, t.prototype.gc = function(r) {
      var n;
      Lr.reset(), Os.reset(), this.addTypenameTransform.resetCache(), (n = this.config.fragments) === null || n === void 0 || n.resetCaches();
      var i = this.optimisticData.gc();
      return r && !this.txCount && (r.resetResultCache ? this.resetResultCache(r.resetResultIdentities) : r.resetResultIdentities && this.storeReader.resetCanon()), i;
    }, t.prototype.retain = function(r, n) {
      return (n ? this.optimisticData : this.data).retain(r);
    }, t.prototype.release = function(r, n) {
      return (n ? this.optimisticData : this.data).release(r);
    }, t.prototype.identify = function(r) {
      if (Ae(r))
        return r.__ref;
      try {
        return this.policies.identify(r)[0];
      } catch (n) {
        globalThis.__DEV__ !== !1 && ue.warn(n);
      }
    }, t.prototype.evict = function(r) {
      if (!r.id) {
        if (at.call(r, "id"))
          return !1;
        r = M(M({}, r), { id: "ROOT_QUERY" });
      }
      try {
        return ++this.txCount, this.optimisticData.evict(r, this.data);
      } finally {
        !--this.txCount && r.broadcast !== !1 && this.broadcastWatches();
      }
    }, t.prototype.reset = function(r) {
      var n = this;
      return this.init(), Lr.reset(), r && r.discardWatches ? (this.watches.forEach(function(i) {
        return n.maybeBroadcastWatch.forget(i);
      }), this.watches.clear(), Yf(this)) : this.broadcastWatches(), Promise.resolve();
    }, t.prototype.removeOptimistic = function(r) {
      var n = this.optimisticData.removeLayer(r);
      n !== this.optimisticData && (this.optimisticData = n, this.broadcastWatches());
    }, t.prototype.batch = function(r) {
      var n = this, i = r.update, a = r.optimistic, o = a === void 0 ? !0 : a, s = r.removeOptimistic, u = r.onWatchUpdated, l, c = function(f) {
        var h = n, p = h.data, v = h.optimisticData;
        ++n.txCount, f && (n.data = n.optimisticData = f);
        try {
          return l = i(n);
        } finally {
          --n.txCount, n.data = p, n.optimisticData = v;
        }
      }, d = /* @__PURE__ */ new Set();
      return u && !this.txCount && this.broadcastWatches(M(M({}, r), { onWatchUpdated: function(f) {
        return d.add(f), !1;
      } })), typeof o == "string" ? this.optimisticData = this.optimisticData.addLayer(o, c) : o === !1 ? c(this.data) : c(), typeof s == "string" && (this.optimisticData = this.optimisticData.removeLayer(s)), u && d.size ? (this.broadcastWatches(M(M({}, r), { onWatchUpdated: function(f, h) {
        var p = u.call(this, f, h);
        return p !== !1 && d.delete(f), p;
      } })), d.size && d.forEach(function(f) {
        return n.maybeBroadcastWatch.dirty(f);
      })) : this.broadcastWatches(r), l;
    }, t.prototype.performTransaction = function(r, n) {
      return this.batch({
        update: r,
        optimistic: n || n !== null
      });
    }, t.prototype.transformDocument = function(r) {
      return this.addTypenameToDocument(this.addFragmentsToDocument(r));
    }, t.prototype.broadcastWatches = function(r) {
      var n = this;
      this.txCount || this.watches.forEach(function(i) {
        return n.maybeBroadcastWatch(i, r);
      });
    }, t.prototype.addFragmentsToDocument = function(r) {
      var n = this.config.fragments;
      return n ? n.transform(r) : r;
    }, t.prototype.addTypenameToDocument = function(r) {
      return this.addTypename ? this.addTypenameTransform.transformDocument(r) : r;
    }, t.prototype.broadcastWatch = function(r, n) {
      var i = r.lastDiff, a = this.diff(r);
      n && (r.optimistic && typeof n.optimistic == "string" && (a.fromOptimisticTransaction = !0), n.onWatchUpdated && n.onWatchUpdated.call(this, r, a, i) === !1) || (!i || !Te(i.result, a.result)) && r.callback(r.lastDiff = a, i);
    }, t;
  }(lv)
);
globalThis.__DEV__ !== !1 && (ud.prototype.getMemoryInternals = HD);
var Ce;
(function(e) {
  e[e.loading = 1] = "loading", e[e.setVariables = 2] = "setVariables", e[e.fetchMore = 3] = "fetchMore", e[e.refetch = 4] = "refetch", e[e.poll = 6] = "poll", e[e.ready = 7] = "ready", e[e.error = 8] = "error";
})(Ce || (Ce = {}));
function fa(e) {
  return e ? e < 7 : !1;
}
var uh = Object.assign, Q2 = Object.hasOwnProperty, Bl = (
  /** @class */
  function(e) {
    Kt(t, e);
    function t(r) {
      var n = r.queryManager, i = r.queryInfo, a = r.options, o = e.call(this, function(g) {
        try {
          var $ = g._subscription._observer;
          $ && !$.error && ($.error = G2);
        } catch {
        }
        var m = !o.observers.size;
        o.observers.add(g);
        var b = o.last;
        return b && b.error ? g.error && g.error(b.error) : b && b.result && g.next && g.next(b.result), m && o.reobserve().catch(function() {
        }), function() {
          o.observers.delete(g) && !o.observers.size && o.tearDownQuery();
        };
      }) || this;
      o.observers = /* @__PURE__ */ new Set(), o.subscriptions = /* @__PURE__ */ new Set(), o.queryInfo = i, o.queryManager = n, o.waitForOwnResult = Tu(a.fetchPolicy), o.isTornDown = !1;
      var s = n.defaultOptions.watchQuery, u = s === void 0 ? {} : s, l = u.fetchPolicy, c = l === void 0 ? "cache-first" : l, d = a.fetchPolicy, f = d === void 0 ? c : d, h = a.initialFetchPolicy, p = h === void 0 ? f === "standby" ? c : f : h;
      o.options = M(M({}, a), {
        // Remember the initial options.fetchPolicy so we can revert back to this
        // policy when variables change. This information can also be specified
        // (or overridden) by providing options.initialFetchPolicy explicitly.
        initialFetchPolicy: p,
        // This ensures this.options.fetchPolicy always has a string value, in
        // case options.fetchPolicy was not provided.
        fetchPolicy: f
      }), o.queryId = i.queryId || n.generateQueryId();
      var v = Aa(o.query);
      return o.queryName = v && v.name && v.name.value, o;
    }
    return Object.defineProperty(t.prototype, "query", {
      // The `query` computed property will always reflect the document transformed
      // by the last run query. `this.options.query` will always reflect the raw
      // untransformed query to ensure document transforms with runtime conditionals
      // are run on the original document.
      get: function() {
        return this.lastQuery || this.options.query;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(t.prototype, "variables", {
      // Computed shorthand for this.options.variables, preserved for
      // backwards compatibility.
      /**
       * An object containing the variables that were provided for the query.
       */
      get: function() {
        return this.options.variables;
      },
      enumerable: !1,
      configurable: !0
    }), t.prototype.result = function() {
      var r = this;
      return new Promise(function(n, i) {
        var a = {
          next: function(s) {
            n(s), r.observers.delete(a), r.observers.size || r.queryManager.removeQuery(r.queryId), setTimeout(function() {
              o.unsubscribe();
            }, 0);
          },
          error: i
        }, o = r.subscribe(a);
      });
    }, t.prototype.resetDiff = function() {
      this.queryInfo.resetDiff();
    }, t.prototype.getCurrentResult = function(r) {
      r === void 0 && (r = !0);
      var n = this.getLastResult(!0), i = this.queryInfo.networkStatus || n && n.networkStatus || Ce.ready, a = M(M({}, n), { loading: fa(i), networkStatus: i }), o = this.options.fetchPolicy, s = o === void 0 ? "cache-first" : o;
      if (
        // These fetch policies should never deliver data from the cache, unless
        // redelivering a previously delivered result.
        !(Tu(s) || // If this.options.query has @client(always: true) fields, we cannot
        // trust diff.result, since it was read from the cache without running
        // local resolvers (and it's too late to run resolvers now, since we must
        // return a result synchronously).
        this.queryManager.getDocumentInfo(this.query).hasForcedResolvers)
      ) if (this.waitForOwnResult)
        this.queryInfo.updateWatch();
      else {
        var u = this.queryInfo.getDiff();
        (u.complete || this.options.returnPartialData) && (a.data = u.result), Te(a.data, {}) && (a.data = void 0), u.complete ? (delete a.partial, u.complete && a.networkStatus === Ce.loading && (s === "cache-first" || s === "cache-only") && (a.networkStatus = Ce.ready, a.loading = !1)) : a.partial = !0, globalThis.__DEV__ !== !1 && !u.complete && !this.options.partialRefetch && !a.loading && !a.data && !a.error && Ev(u.missing);
      }
      return r && this.updateLastResult(a), a;
    }, t.prototype.isDifferentFromLastResult = function(r, n) {
      if (!this.last)
        return !0;
      var i = this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ? !uv(this.query, this.last.result, r, this.variables) : !Te(this.last.result, r);
      return i || n && !Te(this.last.variables, n);
    }, t.prototype.getLast = function(r, n) {
      var i = this.last;
      if (i && i[r] && (!n || Te(i.variables, this.variables)))
        return i[r];
    }, t.prototype.getLastResult = function(r) {
      return this.getLast("result", r);
    }, t.prototype.getLastError = function(r) {
      return this.getLast("error", r);
    }, t.prototype.resetLastResults = function() {
      delete this.last, this.isTornDown = !1;
    }, t.prototype.resetQueryStoreErrors = function() {
      this.queryManager.resetErrors(this.queryId);
    }, t.prototype.refetch = function(r) {
      var n, i = {
        // Always disable polling for refetches.
        pollInterval: 0
      }, a = this.options.fetchPolicy;
      if (a === "cache-and-network" ? i.fetchPolicy = a : a === "no-cache" ? i.fetchPolicy = "no-cache" : i.fetchPolicy = "network-only", globalThis.__DEV__ !== !1 && r && Q2.call(r, "variables")) {
        var o = Am(this.query), s = o.variableDefinitions;
        (!s || !s.some(function(u) {
          return u.variable.name.value === "variables";
        })) && globalThis.__DEV__ !== !1 && ue.warn(
          20,
          r,
          ((n = o.name) === null || n === void 0 ? void 0 : n.value) || o
        );
      }
      return r && !Te(this.options.variables, r) && (i.variables = this.options.variables = M(M({}, this.options.variables), r)), this.queryInfo.resetLastWrite(), this.reobserve(i, Ce.refetch);
    }, t.prototype.fetchMore = function(r) {
      var n = this, i = M(M({}, r.query ? r : M(M(M(M({}, this.options), { query: this.options.query }), r), { variables: M(M({}, this.options.variables), r.variables) })), {
        // The fetchMore request goes immediately to the network and does
        // not automatically write its result to the cache (hence no-cache
        // instead of network-only), because we allow the caller of
        // fetchMore to provide an updateQuery callback that determines how
        // the data gets written to the cache.
        fetchPolicy: "no-cache"
      });
      i.query = this.transformDocument(i.query);
      var a = this.queryManager.generateQueryId();
      this.lastQuery = r.query ? this.transformDocument(this.options.query) : i.query;
      var o = this.queryInfo, s = o.networkStatus;
      o.networkStatus = Ce.fetchMore, i.notifyOnNetworkStatusChange && this.observe();
      var u = /* @__PURE__ */ new Set();
      return this.queryManager.fetchQuery(a, i, Ce.fetchMore).then(function(l) {
        return n.queryManager.removeQuery(a), o.networkStatus === Ce.fetchMore && (o.networkStatus = s), n.queryManager.cache.batch({
          update: function(c) {
            var d = r.updateQuery;
            d ? c.updateQuery({
              query: n.query,
              variables: n.variables,
              returnPartialData: !0,
              optimistic: !1
            }, function(f) {
              return d(f, {
                fetchMoreResult: l.data,
                variables: i.variables
              });
            }) : c.writeQuery({
              query: i.query,
              variables: i.variables,
              data: l.data
            });
          },
          onWatchUpdated: function(c) {
            u.add(c.query);
          }
        }), l;
      }).finally(function() {
        u.has(n.query) || Dv(n);
      });
    }, t.prototype.subscribeToMore = function(r) {
      var n = this, i = this.queryManager.startGraphQLSubscription({
        query: r.document,
        variables: r.variables,
        context: r.context
      }).subscribe({
        next: function(a) {
          var o = r.updateQuery;
          o && n.updateQuery(function(s, u) {
            var l = u.variables;
            return o(s, {
              subscriptionData: a,
              variables: l
            });
          });
        },
        error: function(a) {
          if (r.onError) {
            r.onError(a);
            return;
          }
          globalThis.__DEV__ !== !1 && ue.error(21, a);
        }
      });
      return this.subscriptions.add(i), function() {
        n.subscriptions.delete(i) && i.unsubscribe();
      };
    }, t.prototype.setOptions = function(r) {
      return this.reobserve(r);
    }, t.prototype.silentSetOptions = function(r) {
      var n = dn(this.options, r || {});
      uh(this.options, n);
    }, t.prototype.setVariables = function(r) {
      return Te(this.variables, r) ? this.observers.size ? this.result() : Promise.resolve() : (this.options.variables = r, this.observers.size ? this.reobserve({
        // Reset options.fetchPolicy to its original value.
        fetchPolicy: this.options.initialFetchPolicy,
        variables: r
      }, Ce.setVariables) : Promise.resolve());
    }, t.prototype.updateQuery = function(r) {
      var n = this.queryManager, i = n.cache.diff({
        query: this.options.query,
        variables: this.variables,
        returnPartialData: !0,
        optimistic: !1
      }).result, a = r(i, {
        variables: this.variables
      });
      a && (n.cache.writeQuery({
        query: this.options.query,
        data: a,
        variables: this.variables
      }), n.broadcastQueries());
    }, t.prototype.startPolling = function(r) {
      this.options.pollInterval = r, this.updatePolling();
    }, t.prototype.stopPolling = function() {
      this.options.pollInterval = 0, this.updatePolling();
    }, t.prototype.applyNextFetchPolicy = function(r, n) {
      if (n.nextFetchPolicy) {
        var i = n.fetchPolicy, a = i === void 0 ? "cache-first" : i, o = n.initialFetchPolicy, s = o === void 0 ? a : o;
        a === "standby" || (typeof n.nextFetchPolicy == "function" ? n.fetchPolicy = n.nextFetchPolicy(a, {
          reason: r,
          options: n,
          observable: this,
          initialFetchPolicy: s
        }) : r === "variables-changed" ? n.fetchPolicy = s : n.fetchPolicy = n.nextFetchPolicy);
      }
      return n.fetchPolicy;
    }, t.prototype.fetch = function(r, n, i) {
      return this.queryManager.setObservableQuery(this), this.queryManager.fetchConcastWithInfo(this.queryId, r, n, i);
    }, t.prototype.updatePolling = function() {
      var r = this;
      if (!this.queryManager.ssrMode) {
        var n = this, i = n.pollingInfo, a = n.options.pollInterval;
        if (!a || !this.hasObservers()) {
          i && (clearTimeout(i.timeout), delete this.pollingInfo);
          return;
        }
        if (!(i && i.interval === a)) {
          ue(a, 22);
          var o = i || (this.pollingInfo = {});
          o.interval = a;
          var s = function() {
            var l, c;
            r.pollingInfo && (!fa(r.queryInfo.networkStatus) && !(!((c = (l = r.options).skipPollAttempt) === null || c === void 0) && c.call(l)) ? r.reobserve({
              // Most fetchPolicy options don't make sense to use in a polling context, as
              // users wouldn't want to be polling the cache directly. However, network-only and
              // no-cache are both useful for when the user wants to control whether or not the
              // polled results are written to the cache.
              fetchPolicy: r.options.initialFetchPolicy === "no-cache" ? "no-cache" : "network-only"
            }, Ce.poll).then(u, u) : u());
          }, u = function() {
            var l = r.pollingInfo;
            l && (clearTimeout(l.timeout), l.timeout = setTimeout(s, l.interval));
          };
          u();
        }
      }
    }, t.prototype.updateLastResult = function(r, n) {
      n === void 0 && (n = this.variables);
      var i = this.getLastError();
      return i && this.last && !Te(n, this.last.variables) && (i = void 0), this.last = M({ result: this.queryManager.assumeImmutableResults ? r : Zm(r), variables: n }, i ? { error: i } : null);
    }, t.prototype.reobserveAsConcast = function(r, n) {
      var i = this;
      this.isTornDown = !1;
      var a = (
        // Refetching uses a disposable Concast to allow refetches using different
        // options/variables, without permanently altering the options of the
        // original ObservableQuery.
        n === Ce.refetch || // The fetchMore method does not actually call the reobserve method, but,
        // if it did, it would definitely use a disposable Concast.
        n === Ce.fetchMore || // Polling uses a disposable Concast so the polling options (which force
        // fetchPolicy to be "network-only" or "no-cache") won't override the original options.
        n === Ce.poll
      ), o = this.options.variables, s = this.options.fetchPolicy, u = dn(this.options, r || {}), l = a ? (
        // Disposable Concast fetches receive a shallow copy of this.options
        // (merged with newOptions), leaving this.options unmodified.
        u
      ) : uh(this.options, u), c = this.transformDocument(l.query);
      this.lastQuery = c, a || (this.updatePolling(), r && r.variables && !Te(r.variables, o) && // Don't mess with the fetchPolicy if it's currently "standby".
      l.fetchPolicy !== "standby" && // If we're changing the fetchPolicy anyway, don't try to change it here
      // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.
      l.fetchPolicy === s && (this.applyNextFetchPolicy("variables-changed", l), n === void 0 && (n = Ce.setVariables))), this.waitForOwnResult && (this.waitForOwnResult = Tu(l.fetchPolicy));
      var d = function() {
        i.concast === p && (i.waitForOwnResult = !1);
      }, f = l.variables && M({}, l.variables), h = this.fetch(l, n, c), p = h.concast, v = h.fromLink, g = {
        next: function($) {
          Te(i.variables, f) && (d(), i.reportResult($, f));
        },
        error: function($) {
          Te(i.variables, f) && (d(), i.reportError($, f));
        }
      };
      return !a && (v || !this.concast) && (this.concast && this.observer && this.concast.removeObserver(this.observer), this.concast = p, this.observer = g), p.addObserver(g), p;
    }, t.prototype.reobserve = function(r, n) {
      return this.reobserveAsConcast(r, n).promise;
    }, t.prototype.resubscribeAfterError = function() {
      for (var r = [], n = 0; n < arguments.length; n++)
        r[n] = arguments[n];
      var i = this.last;
      this.resetLastResults();
      var a = this.subscribe.apply(this, r);
      return this.last = i, a;
    }, t.prototype.observe = function() {
      this.reportResult(
        // Passing false is important so that this.getCurrentResult doesn't
        // save the fetchMore result as this.lastResult, causing it to be
        // ignored due to the this.isDifferentFromLastResult check in
        // this.reportResult.
        this.getCurrentResult(!1),
        this.variables
      );
    }, t.prototype.reportResult = function(r, n) {
      var i = this.getLastError(), a = this.isDifferentFromLastResult(r, n);
      (i || !r.partial || this.options.returnPartialData) && this.updateLastResult(r, n), (i || a) && Wi(this.observers, "next", r);
    }, t.prototype.reportError = function(r, n) {
      var i = M(M({}, this.getLastResult()), { error: r, errors: r.graphQLErrors, networkStatus: Ce.error, loading: !1 });
      this.updateLastResult(i, n), Wi(this.observers, "error", this.last.error = r);
    }, t.prototype.hasObservers = function() {
      return this.observers.size > 0;
    }, t.prototype.tearDownQuery = function() {
      this.isTornDown || (this.concast && this.observer && (this.concast.removeObserver(this.observer), delete this.concast, delete this.observer), this.stopPolling(), this.subscriptions.forEach(function(r) {
        return r.unsubscribe();
      }), this.subscriptions.clear(), this.queryManager.stopQuery(this.queryId), this.observers.clear(), this.isTornDown = !0);
    }, t.prototype.transformDocument = function(r) {
      return this.queryManager.transform(r);
    }, t;
  }(ke)
);
Ym(Bl);
function Dv(e) {
  var t = e.options, r = t.fetchPolicy, n = t.nextFetchPolicy;
  return r === "cache-and-network" || r === "network-only" ? e.reobserve({
    fetchPolicy: "cache-first",
    // Use a temporary nextFetchPolicy function that replaces itself with the
    // previous nextFetchPolicy value and returns the original fetchPolicy.
    nextFetchPolicy: function(i, a) {
      return this.nextFetchPolicy = n, typeof this.nextFetchPolicy == "function" ? this.nextFetchPolicy(i, a) : r;
    }
  }) : e.reobserve();
}
function G2(e) {
  globalThis.__DEV__ !== !1 && ue.error(23, e.message, e.stack);
}
function Ev(e) {
  globalThis.__DEV__ !== !1 && e && globalThis.__DEV__ !== !1 && ue.debug(24, e);
}
function Tu(e) {
  return e === "network-only" || e === "no-cache" || e === "standby";
}
var wv = (
  /** @class */
  function() {
    function e(t) {
      var r = t.cache, n = t.client, i = t.resolvers, a = t.fragmentMatcher;
      this.selectionsToResolveCache = /* @__PURE__ */ new WeakMap(), this.cache = r, n && (this.client = n), i && this.addResolvers(i), a && this.setFragmentMatcher(a);
    }
    return e.prototype.addResolvers = function(t) {
      var r = this;
      this.resolvers = this.resolvers || {}, Array.isArray(t) ? t.forEach(function(n) {
        r.resolvers = _f(r.resolvers, n);
      }) : this.resolvers = _f(this.resolvers, t);
    }, e.prototype.setResolvers = function(t) {
      this.resolvers = {}, this.addResolvers(t);
    }, e.prototype.getResolvers = function() {
      return this.resolvers || {};
    }, e.prototype.runResolvers = function(t) {
      return Fr(this, arguments, void 0, function(r) {
        var n = r.document, i = r.remoteResult, a = r.context, o = r.variables, s = r.onlyRunForcedResolvers, u = s === void 0 ? !1 : s;
        return Or(this, function(l) {
          return n ? [2, this.resolveDocument(n, i.data, a, o, this.fragmentMatcher, u).then(function(c) {
            return M(M({}, i), { data: c.result });
          })] : [2, i];
        });
      });
    }, e.prototype.setFragmentMatcher = function(t) {
      this.fragmentMatcher = t;
    }, e.prototype.getFragmentMatcher = function() {
      return this.fragmentMatcher;
    }, e.prototype.clientQuery = function(t) {
      return oa(["client"], t) && this.resolvers ? t : null;
    }, e.prototype.serverQuery = function(t) {
      return Hm(t);
    }, e.prototype.prepareContext = function(t) {
      var r = this.cache;
      return M(M({}, t), {
        cache: r,
        // Getting an entry's cache key is useful for local state resolvers.
        getCacheKey: function(n) {
          return r.identify(n);
        }
      });
    }, e.prototype.addExportedVariables = function(t) {
      return Fr(this, arguments, void 0, function(r, n, i) {
        return n === void 0 && (n = {}), i === void 0 && (i = {}), Or(this, function(a) {
          return r ? [2, this.resolveDocument(r, this.buildRootValueFromCache(r, n) || {}, this.prepareContext(i), n).then(function(o) {
            return M(M({}, n), o.exportedVariables);
          })] : [2, M({}, n)];
        });
      });
    }, e.prototype.shouldForceResolvers = function(t) {
      var r = !1;
      return vr(t, {
        Directive: {
          enter: function(n) {
            if (n.name.value === "client" && n.arguments && (r = n.arguments.some(function(i) {
              return i.name.value === "always" && i.value.kind === "BooleanValue" && i.value.value === !0;
            }), r))
              return Kc;
          }
        }
      }), r;
    }, e.prototype.buildRootValueFromCache = function(t, r) {
      return this.cache.diff({
        query: F5(t),
        variables: r,
        returnPartialData: !0,
        optimistic: !1
      }).result;
    }, e.prototype.resolveDocument = function(t, r) {
      return Fr(this, arguments, void 0, function(n, i, a, o, s, u) {
        var l, c, d, f, h, p, v, g, $, m, b;
        return a === void 0 && (a = {}), o === void 0 && (o = {}), s === void 0 && (s = function() {
          return !0;
        }), u === void 0 && (u = !1), Or(this, function(D) {
          return l = _a(n), c = As(n), d = ks(c), f = this.collectSelectionsToResolve(l, d), h = l.operation, p = h ? h.charAt(0).toUpperCase() + h.slice(1) : "Query", v = this, g = v.cache, $ = v.client, m = {
            fragmentMap: d,
            context: M(M({}, a), { cache: g, client: $ }),
            variables: o,
            fragmentMatcher: s,
            defaultOperationType: p,
            exportedVariables: {},
            selectionsToResolve: f,
            onlyRunForcedResolvers: u
          }, b = !1, [2, this.resolveSelectionSet(l.selectionSet, b, i, m).then(function(S) {
            return {
              result: S,
              exportedVariables: m.exportedVariables
            };
          })];
        });
      });
    }, e.prototype.resolveSelectionSet = function(t, r, n, i) {
      return Fr(this, void 0, void 0, function() {
        var a, o, s, u, l, c = this;
        return Or(this, function(d) {
          return a = i.fragmentMap, o = i.context, s = i.variables, u = [n], l = function(f) {
            return Fr(c, void 0, void 0, function() {
              var h, p;
              return Or(this, function(v) {
                return !r && !i.selectionsToResolve.has(f) ? [
                  2
                  /*return*/
                ] : Pa(f, s) ? jr(f) ? [2, this.resolveField(f, r, n, i).then(function(g) {
                  var $;
                  typeof g < "u" && u.push(($ = {}, $[Vr(f)] = g, $));
                })] : (f5(f) ? h = f : (h = a[f.name.value], ue(h, 18, f.name.value)), h && h.typeCondition && (p = h.typeCondition.name.value, i.fragmentMatcher(n, p, o)) ? [2, this.resolveSelectionSet(h.selectionSet, r, n, i).then(function(g) {
                  u.push(g);
                })] : [
                  2
                  /*return*/
                ]) : [
                  2
                  /*return*/
                ];
              });
            });
          }, [2, Promise.all(t.selections.map(l)).then(function() {
            return Is(u);
          })];
        });
      });
    }, e.prototype.resolveField = function(t, r, n, i) {
      return Fr(this, void 0, void 0, function() {
        var a, o, s, u, l, c, d, f, h, p = this;
        return Or(this, function(v) {
          return n ? (a = i.variables, o = t.name.value, s = Vr(t), u = o !== s, l = n[s] || n[o], c = Promise.resolve(l), (!i.onlyRunForcedResolvers || this.shouldForceResolvers(t)) && (d = n.__typename || i.defaultOperationType, f = this.resolvers && this.resolvers[d], f && (h = f[u ? o : s], h && (c = Promise.resolve(
            // In case the resolve function accesses reactive variables,
            // set cacheSlot to the current cache instance.
            id.withValue(this.cache, h, [
              n,
              Ts(t, a),
              i.context,
              { field: t, fragmentMap: i.fragmentMap }
            ])
          )))), [2, c.then(function(g) {
            var $, m;
            if (g === void 0 && (g = l), t.directives && t.directives.forEach(function(D) {
              D.name.value === "export" && D.arguments && D.arguments.forEach(function(S) {
                S.name.value === "as" && S.value.kind === "StringValue" && (i.exportedVariables[S.value.value] = g);
              });
            }), !t.selectionSet || g == null)
              return g;
            var b = (m = ($ = t.directives) === null || $ === void 0 ? void 0 : $.some(function(D) {
              return D.name.value === "client";
            })) !== null && m !== void 0 ? m : !1;
            if (Array.isArray(g))
              return p.resolveSubSelectedArray(t, r || b, g, i);
            if (t.selectionSet)
              return p.resolveSelectionSet(t.selectionSet, r || b, g, i);
          })]) : [2, null];
        });
      });
    }, e.prototype.resolveSubSelectedArray = function(t, r, n, i) {
      var a = this;
      return Promise.all(n.map(function(o) {
        if (o === null)
          return null;
        if (Array.isArray(o))
          return a.resolveSubSelectedArray(t, r, o, i);
        if (t.selectionSet)
          return a.resolveSelectionSet(t.selectionSet, r, o, i);
      }));
    }, e.prototype.collectSelectionsToResolve = function(t, r) {
      var n = function(o) {
        return !Array.isArray(o);
      }, i = this.selectionsToResolveCache;
      function a(o) {
        if (!i.has(o)) {
          var s = /* @__PURE__ */ new Set();
          i.set(o, s), vr(o, {
            Directive: function(u, l, c, d, f) {
              u.name.value === "client" && f.forEach(function(h) {
                n(h) && xf(h) && s.add(h);
              });
            },
            FragmentSpread: function(u, l, c, d, f) {
              var h = r[u.name.value];
              ue(h, 19, u.name.value);
              var p = a(h);
              p.size > 0 && (f.forEach(function(v) {
                n(v) && xf(v) && s.add(v);
              }), s.add(u), p.forEach(function(v) {
                s.add(v);
              }));
            }
          });
        }
        return i.get(o);
      }
      return a(t);
    }, e;
  }()
), Vn = new (xn ? WeakMap : Map)();
function Au(e, t) {
  var r = e[t];
  typeof r == "function" && (e[t] = function() {
    return Vn.set(
      e,
      // The %1e15 allows the count to wrap around to 0 safely every
      // quadrillion evictions, so there's no risk of overflow. To be
      // clear, this is more of a pedantic principle than something
      // that matters in any conceivable practical scenario.
      (Vn.get(e) + 1) % 1e15
    ), r.apply(this, arguments);
  });
}
function lh(e) {
  e.notifyTimeout && (clearTimeout(e.notifyTimeout), e.notifyTimeout = void 0);
}
var _u = (
  /** @class */
  function() {
    function e(t, r) {
      r === void 0 && (r = t.generateQueryId()), this.queryId = r, this.listeners = /* @__PURE__ */ new Set(), this.document = null, this.lastRequestId = 1, this.stopped = !1, this.dirty = !1, this.observableQuery = null;
      var n = this.cache = t.cache;
      Vn.has(n) || (Vn.set(n, 0), Au(n, "evict"), Au(n, "modify"), Au(n, "reset"));
    }
    return e.prototype.init = function(t) {
      var r = t.networkStatus || Ce.loading;
      return this.variables && this.networkStatus !== Ce.loading && !Te(this.variables, t.variables) && (r = Ce.setVariables), Te(t.variables, this.variables) || (this.lastDiff = void 0), Object.assign(this, {
        document: t.document,
        variables: t.variables,
        networkError: null,
        graphQLErrors: this.graphQLErrors || [],
        networkStatus: r
      }), t.observableQuery && this.setObservableQuery(t.observableQuery), t.lastRequestId && (this.lastRequestId = t.lastRequestId), this;
    }, e.prototype.reset = function() {
      lh(this), this.dirty = !1;
    }, e.prototype.resetDiff = function() {
      this.lastDiff = void 0;
    }, e.prototype.getDiff = function() {
      var t = this.getDiffOptions();
      if (this.lastDiff && Te(t, this.lastDiff.options))
        return this.lastDiff.diff;
      this.updateWatch(this.variables);
      var r = this.observableQuery;
      if (r && r.options.fetchPolicy === "no-cache")
        return { complete: !1 };
      var n = this.cache.diff(t);
      return this.updateLastDiff(n, t), n;
    }, e.prototype.updateLastDiff = function(t, r) {
      this.lastDiff = t ? {
        diff: t,
        options: r || this.getDiffOptions()
      } : void 0;
    }, e.prototype.getDiffOptions = function(t) {
      var r;
      return t === void 0 && (t = this.variables), {
        query: this.document,
        variables: t,
        returnPartialData: !0,
        optimistic: !0,
        canonizeResults: (r = this.observableQuery) === null || r === void 0 ? void 0 : r.options.canonizeResults
      };
    }, e.prototype.setDiff = function(t) {
      var r = this, n, i = this.lastDiff && this.lastDiff.diff;
      t && !t.complete && (!((n = this.observableQuery) === null || n === void 0) && n.getLastError()) || (this.updateLastDiff(t), !this.dirty && !Te(i && i.result, t && t.result) && (this.dirty = !0, this.notifyTimeout || (this.notifyTimeout = setTimeout(function() {
        return r.notify();
      }, 0))));
    }, e.prototype.setObservableQuery = function(t) {
      var r = this;
      t !== this.observableQuery && (this.oqListener && this.listeners.delete(this.oqListener), this.observableQuery = t, t ? (t.queryInfo = this, this.listeners.add(this.oqListener = function() {
        var n = r.getDiff();
        n.fromOptimisticTransaction ? t.observe() : Dv(t);
      })) : delete this.oqListener);
    }, e.prototype.notify = function() {
      var t = this;
      lh(this), this.shouldNotify() && this.listeners.forEach(function(r) {
        return r(t);
      }), this.dirty = !1;
    }, e.prototype.shouldNotify = function() {
      if (!this.dirty || !this.listeners.size)
        return !1;
      if (fa(this.networkStatus) && this.observableQuery) {
        var t = this.observableQuery.options.fetchPolicy;
        if (t !== "cache-only" && t !== "cache-and-network")
          return !1;
      }
      return !0;
    }, e.prototype.stop = function() {
      if (!this.stopped) {
        this.stopped = !0, this.reset(), this.cancel(), this.cancel = e.prototype.cancel;
        var t = this.observableQuery;
        t && t.stopPolling();
      }
    }, e.prototype.cancel = function() {
    }, e.prototype.updateWatch = function(t) {
      var r = this;
      t === void 0 && (t = this.variables);
      var n = this.observableQuery;
      if (!(n && n.options.fetchPolicy === "no-cache")) {
        var i = M(M({}, this.getDiffOptions(t)), { watcher: this, callback: function(a) {
          return r.setDiff(a);
        } });
        (!this.lastWatch || !Te(i, this.lastWatch)) && (this.cancel(), this.cancel = this.cache.watch(this.lastWatch = i));
      }
    }, e.prototype.resetLastWrite = function() {
      this.lastWrite = void 0;
    }, e.prototype.shouldWrite = function(t, r) {
      var n = this.lastWrite;
      return !(n && // If cache.evict has been called since the last time we wrote this
      // data into the cache, there's a chance writing this result into
      // the cache will repair what was evicted.
      n.dmCount === Vn.get(this.cache) && Te(r, n.variables) && Te(t.data, n.result.data));
    }, e.prototype.markResult = function(t, r, n, i) {
      var a = this, o = new Kr(), s = Bt(t.errors) ? t.errors.slice(0) : [];
      if (this.reset(), "incremental" in t && Bt(t.incremental)) {
        var u = Jm(this.getDiff().result, t);
        t.data = u;
      } else if ("hasNext" in t && t.hasNext) {
        var l = this.getDiff();
        t.data = o.merge(l.result, t.data);
      }
      this.graphQLErrors = s, n.fetchPolicy === "no-cache" ? this.updateLastDiff({ result: t.data, complete: !0 }, this.getDiffOptions(n.variables)) : i !== 0 && (Ml(t, n.errorPolicy) ? this.cache.performTransaction(function(c) {
        if (a.shouldWrite(t, n.variables))
          c.writeQuery({
            query: r,
            data: t.data,
            variables: n.variables,
            overwrite: i === 1
          }), a.lastWrite = {
            result: t,
            variables: n.variables,
            dmCount: Vn.get(a.cache)
          };
        else if (a.lastDiff && a.lastDiff.diff.complete) {
          t.data = a.lastDiff.diff.result;
          return;
        }
        var d = a.getDiffOptions(n.variables), f = c.diff(d);
        !a.stopped && Te(a.variables, n.variables) && a.updateWatch(n.variables), a.updateLastDiff(f, d), f.complete && (t.data = f.result);
      }) : this.lastWrite = void 0);
    }, e.prototype.markReady = function() {
      return this.networkError = null, this.networkStatus = Ce.ready;
    }, e.prototype.markError = function(t) {
      return this.networkStatus = Ce.error, this.lastWrite = void 0, this.reset(), t.graphQLErrors && (this.graphQLErrors = t.graphQLErrors), t.networkError && (this.networkError = t.networkError), t;
    }, e;
  }()
);
function Ml(e, t) {
  t === void 0 && (t = "none");
  var r = t === "ignore" || t === "all", n = !bo(e);
  return !n && r && e.data && (n = !0), n;
}
var Z2 = Object.prototype.hasOwnProperty, ch = /* @__PURE__ */ Object.create(null), Y2 = (
  /** @class */
  function() {
    function e(t) {
      var r = t.cache, n = t.link, i = t.defaultOptions, a = t.documentTransform, o = t.queryDeduplication, s = o === void 0 ? !1 : o, u = t.onBroadcast, l = t.ssrMode, c = l === void 0 ? !1 : l, d = t.clientAwareness, f = d === void 0 ? {} : d, h = t.localState, p = t.assumeImmutableResults, v = p === void 0 ? !!r.assumeImmutableResults : p, g = t.defaultContext, $ = this;
      this.clientAwareness = {}, this.queries = /* @__PURE__ */ new Map(), this.fetchCancelFns = /* @__PURE__ */ new Map(), this.transformCache = new qc(
        Xt["queryManager.getDocumentInfo"] || 2e3
        /* defaultCacheSizes["queryManager.getDocumentInfo"] */
      ), this.queryIdCounter = 1, this.requestIdCounter = 1, this.mutationIdCounter = 1, this.inFlightLinkObservables = new vi(!1);
      var m = new Km(
        function(b) {
          return $.cache.transformDocument(b);
        },
        // Allow the apollo cache to manage its own transform caches
        { cache: !1 }
      );
      this.cache = r, this.link = n, this.defaultOptions = i || /* @__PURE__ */ Object.create(null), this.queryDeduplication = s, this.clientAwareness = f, this.localState = h || new wv({ cache: r }), this.ssrMode = c, this.assumeImmutableResults = v, this.documentTransform = a ? m.concat(a).concat(m) : m, this.defaultContext = g || /* @__PURE__ */ Object.create(null), (this.onBroadcast = u) && (this.mutationStore = /* @__PURE__ */ Object.create(null));
    }
    return e.prototype.stop = function() {
      var t = this;
      this.queries.forEach(function(r, n) {
        t.stopQueryNoBroadcast(n);
      }), this.cancelPendingFetches(ht(25));
    }, e.prototype.cancelPendingFetches = function(t) {
      this.fetchCancelFns.forEach(function(r) {
        return r(t);
      }), this.fetchCancelFns.clear();
    }, e.prototype.mutate = function(t) {
      return Fr(this, arguments, void 0, function(r) {
        var n, i, a, o, s, u, l, c = r.mutation, d = r.variables, f = r.optimisticResponse, h = r.updateQueries, p = r.refetchQueries, v = p === void 0 ? [] : p, g = r.awaitRefetchQueries, $ = g === void 0 ? !1 : g, m = r.update, b = r.onQueryUpdated, D = r.fetchPolicy, S = D === void 0 ? ((u = this.defaultOptions.mutate) === null || u === void 0 ? void 0 : u.fetchPolicy) || "network-only" : D, P = r.errorPolicy, B = P === void 0 ? ((l = this.defaultOptions.mutate) === null || l === void 0 ? void 0 : l.errorPolicy) || "none" : P, y = r.keepRootFields, _ = r.context;
        return Or(this, function(w) {
          switch (w.label) {
            case 0:
              return ue(c, 26), ue(S === "network-only" || S === "no-cache", 27), n = this.generateMutationId(), c = this.cache.transformForLink(this.transform(c)), i = this.getDocumentInfo(c).hasClientExports, d = this.getVariables(c, d), i ? [4, this.localState.addExportedVariables(c, d, _)] : [3, 2];
            case 1:
              d = w.sent(), w.label = 2;
            case 2:
              return a = this.mutationStore && (this.mutationStore[n] = {
                mutation: c,
                variables: d,
                loading: !0,
                error: null
              }), o = f && this.markMutationOptimistic(f, {
                mutationId: n,
                document: c,
                variables: d,
                fetchPolicy: S,
                errorPolicy: B,
                context: _,
                updateQueries: h,
                update: m,
                keepRootFields: y
              }), this.broadcastQueries(), s = this, [2, new Promise(function(E, k) {
                return wu(s.getObservableFromLink(c, M(M({}, _), { optimisticResponse: o ? f : void 0 }), d, !1), function(C) {
                  if (bo(C) && B === "none")
                    throw new lr({
                      graphQLErrors: Tl(C)
                    });
                  a && (a.loading = !1, a.error = null);
                  var T = M({}, C);
                  return typeof v == "function" && (v = v(T)), B === "ignore" && bo(T) && delete T.errors, s.markMutationResult({
                    mutationId: n,
                    result: T,
                    document: c,
                    variables: d,
                    fetchPolicy: S,
                    errorPolicy: B,
                    context: _,
                    update: m,
                    updateQueries: h,
                    awaitRefetchQueries: $,
                    refetchQueries: v,
                    removeOptimistic: o ? n : void 0,
                    onQueryUpdated: b,
                    keepRootFields: y
                  });
                }).subscribe({
                  next: function(C) {
                    s.broadcastQueries(), (!("hasNext" in C) || C.hasNext === !1) && E(C);
                  },
                  error: function(C) {
                    a && (a.loading = !1, a.error = C), o && s.cache.removeOptimistic(n), s.broadcastQueries(), k(C instanceof lr ? C : new lr({
                      networkError: C
                    }));
                  }
                });
              })];
          }
        });
      });
    }, e.prototype.markMutationResult = function(t, r) {
      var n = this;
      r === void 0 && (r = this.cache);
      var i = t.result, a = [], o = t.fetchPolicy === "no-cache";
      if (!o && Ml(i, t.errorPolicy)) {
        if (Wn(i) || a.push({
          result: i.data,
          dataId: "ROOT_MUTATION",
          query: t.document,
          variables: t.variables
        }), Wn(i) && Bt(i.incremental)) {
          var s = r.diff({
            id: "ROOT_MUTATION",
            // The cache complains if passed a mutation where it expects a
            // query, so we transform mutations and subscriptions to queries
            // (only once, thanks to this.transformCache).
            query: this.getDocumentInfo(t.document).asQuery,
            variables: t.variables,
            optimistic: !1,
            returnPartialData: !0
          }), u = void 0;
          s.result && (u = Jm(s.result, i)), typeof u < "u" && (i.data = u, a.push({
            result: u,
            dataId: "ROOT_MUTATION",
            query: t.document,
            variables: t.variables
          }));
        }
        var l = t.updateQueries;
        l && this.queries.forEach(function(d, f) {
          var h = d.observableQuery, p = h && h.queryName;
          if (!(!p || !Z2.call(l, p))) {
            var v = l[p], g = n.queries.get(f), $ = g.document, m = g.variables, b = r.diff({
              query: $,
              variables: m,
              returnPartialData: !0,
              optimistic: !1
            }), D = b.result, S = b.complete;
            if (S && D) {
              var P = v(D, {
                mutationResult: i,
                queryName: $ && Cl($) || void 0,
                queryVariables: m
              });
              P && a.push({
                result: P,
                dataId: "ROOT_QUERY",
                query: $,
                variables: m
              });
            }
          }
        });
      }
      if (a.length > 0 || (t.refetchQueries || "").length > 0 || t.update || t.onQueryUpdated || t.removeOptimistic) {
        var c = [];
        if (this.refetchQueries({
          updateCache: function(d) {
            o || a.forEach(function(v) {
              return d.write(v);
            });
            var f = t.update, h = !W5(i) || Wn(i) && !i.hasNext;
            if (f) {
              if (!o) {
                var p = d.diff({
                  id: "ROOT_MUTATION",
                  // The cache complains if passed a mutation where it expects a
                  // query, so we transform mutations and subscriptions to queries
                  // (only once, thanks to this.transformCache).
                  query: n.getDocumentInfo(t.document).asQuery,
                  variables: t.variables,
                  optimistic: !1,
                  returnPartialData: !0
                });
                p.complete && (i = M(M({}, i), { data: p.result }), "incremental" in i && delete i.incremental, "hasNext" in i && delete i.hasNext);
              }
              h && f(d, i, {
                context: t.context,
                variables: t.variables
              });
            }
            !o && !t.keepRootFields && h && d.modify({
              id: "ROOT_MUTATION",
              fields: function(v, g) {
                var $ = g.fieldName, m = g.DELETE;
                return $ === "__typename" ? v : m;
              }
            });
          },
          include: t.refetchQueries,
          // Write the final mutation.result to the root layer of the cache.
          optimistic: !1,
          // Remove the corresponding optimistic layer at the same time as we
          // write the final non-optimistic result.
          removeOptimistic: t.removeOptimistic,
          // Let the caller of client.mutate optionally determine the refetching
          // behavior for watched queries after the mutation.update function runs.
          // If no onQueryUpdated function was provided for this mutation, pass
          // null instead of undefined to disable the default refetching behavior.
          onQueryUpdated: t.onQueryUpdated || null
        }).forEach(function(d) {
          return c.push(d);
        }), t.awaitRefetchQueries || t.onQueryUpdated)
          return Promise.all(c).then(function() {
            return i;
          });
      }
      return Promise.resolve(i);
    }, e.prototype.markMutationOptimistic = function(t, r) {
      var n = this, i = typeof t == "function" ? t(r.variables, { IGNORE: ch }) : t;
      return i === ch ? !1 : (this.cache.recordOptimisticTransaction(function(a) {
        try {
          n.markMutationResult(M(M({}, r), { result: { data: i } }), a);
        } catch (o) {
          globalThis.__DEV__ !== !1 && ue.error(o);
        }
      }, r.mutationId), !0);
    }, e.prototype.fetchQuery = function(t, r, n) {
      return this.fetchConcastWithInfo(t, r, n).concast.promise;
    }, e.prototype.getQueryStore = function() {
      var t = /* @__PURE__ */ Object.create(null);
      return this.queries.forEach(function(r, n) {
        t[n] = {
          variables: r.variables,
          networkStatus: r.networkStatus,
          networkError: r.networkError,
          graphQLErrors: r.graphQLErrors
        };
      }), t;
    }, e.prototype.resetErrors = function(t) {
      var r = this.queries.get(t);
      r && (r.networkError = void 0, r.graphQLErrors = []);
    }, e.prototype.transform = function(t) {
      return this.documentTransform.transformDocument(t);
    }, e.prototype.getDocumentInfo = function(t) {
      var r = this.transformCache;
      if (!r.has(t)) {
        var n = {
          // TODO These three calls (hasClientExports, shouldForceResolvers, and
          // usesNonreactiveDirective) are performing independent full traversals
          // of the transformed document. We should consider merging these
          // traversals into a single pass in the future, though the work is
          // cached after the first time.
          hasClientExports: kD(t),
          hasForcedResolvers: this.localState.shouldForceResolvers(t),
          hasNonreactiveDirective: oa(["nonreactive"], t),
          clientQuery: this.localState.clientQuery(t),
          serverQuery: qm([
            { name: "client", remove: !0 },
            { name: "connection" },
            { name: "nonreactive" }
          ], t),
          defaultVars: Wc(Aa(t)),
          // Transform any mutation or subscription operations to query operations
          // so we can read/write them from/to the cache.
          asQuery: M(M({}, t), { definitions: t.definitions.map(function(i) {
            return i.kind === "OperationDefinition" && i.operation !== "query" ? M(M({}, i), { operation: "query" }) : i;
          }) })
        };
        r.set(t, n);
      }
      return r.get(t);
    }, e.prototype.getVariables = function(t, r) {
      return M(M({}, this.getDocumentInfo(t).defaultVars), r);
    }, e.prototype.watchQuery = function(t) {
      var r = this.transform(t.query);
      t = M(M({}, t), { variables: this.getVariables(r, t.variables) }), typeof t.notifyOnNetworkStatusChange > "u" && (t.notifyOnNetworkStatusChange = !1);
      var n = new _u(this), i = new Bl({
        queryManager: this,
        queryInfo: n,
        options: t
      });
      return i.lastQuery = r, this.queries.set(i.queryId, n), n.init({
        document: r,
        observableQuery: i,
        variables: i.variables
      }), i;
    }, e.prototype.query = function(t, r) {
      var n = this;
      return r === void 0 && (r = this.generateQueryId()), ue(t.query, 28), ue(t.query.kind === "Document", 29), ue(!t.returnPartialData, 30), ue(!t.pollInterval, 31), this.fetchQuery(r, M(M({}, t), { query: this.transform(t.query) })).finally(function() {
        return n.stopQuery(r);
      });
    }, e.prototype.generateQueryId = function() {
      return String(this.queryIdCounter++);
    }, e.prototype.generateRequestId = function() {
      return this.requestIdCounter++;
    }, e.prototype.generateMutationId = function() {
      return String(this.mutationIdCounter++);
    }, e.prototype.stopQueryInStore = function(t) {
      this.stopQueryInStoreNoBroadcast(t), this.broadcastQueries();
    }, e.prototype.stopQueryInStoreNoBroadcast = function(t) {
      var r = this.queries.get(t);
      r && r.stop();
    }, e.prototype.clearStore = function(t) {
      return t === void 0 && (t = {
        discardWatches: !0
      }), this.cancelPendingFetches(ht(32)), this.queries.forEach(function(r) {
        r.observableQuery ? r.networkStatus = Ce.loading : r.stop();
      }), this.mutationStore && (this.mutationStore = /* @__PURE__ */ Object.create(null)), this.cache.reset(t);
    }, e.prototype.getObservableQueries = function(t) {
      var r = this;
      t === void 0 && (t = "active");
      var n = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map(), a = /* @__PURE__ */ new Set();
      return Array.isArray(t) && t.forEach(function(o) {
        typeof o == "string" ? i.set(o, !1) : e5(o) ? i.set(r.transform(o), !1) : Ue(o) && o.query && a.add(o);
      }), this.queries.forEach(function(o, s) {
        var u = o.observableQuery, l = o.document;
        if (u) {
          if (t === "all") {
            n.set(s, u);
            return;
          }
          var c = u.queryName, d = u.options.fetchPolicy;
          if (d === "standby" || t === "active" && !u.hasObservers())
            return;
          (t === "active" || c && i.has(c) || l && i.has(l)) && (n.set(s, u), c && i.set(c, !0), l && i.set(l, !0));
        }
      }), a.size && a.forEach(function(o) {
        var s = vl("legacyOneTimeQuery"), u = r.getQuery(s).init({
          document: o.query,
          variables: o.variables
        }), l = new Bl({
          queryManager: r,
          queryInfo: u,
          options: M(M({}, o), { fetchPolicy: "network-only" })
        });
        ue(l.queryId === s), u.setObservableQuery(l), n.set(s, l);
      }), globalThis.__DEV__ !== !1 && i.size && i.forEach(function(o, s) {
        o || globalThis.__DEV__ !== !1 && ue.warn(typeof s == "string" ? 33 : 34, s);
      }), n;
    }, e.prototype.reFetchObservableQueries = function(t) {
      var r = this;
      t === void 0 && (t = !1);
      var n = [];
      return this.getObservableQueries(t ? "all" : "active").forEach(function(i, a) {
        var o = i.options.fetchPolicy;
        i.resetLastResults(), (t || o !== "standby" && o !== "cache-only") && n.push(i.refetch()), r.getQuery(a).setDiff(null);
      }), this.broadcastQueries(), Promise.all(n);
    }, e.prototype.setObservableQuery = function(t) {
      this.getQuery(t.queryId).setObservableQuery(t);
    }, e.prototype.startGraphQLSubscription = function(t) {
      var r = this, n = t.query, i = t.fetchPolicy, a = t.errorPolicy, o = a === void 0 ? "none" : a, s = t.variables, u = t.context, l = u === void 0 ? {} : u;
      n = this.transform(n), s = this.getVariables(n, s);
      var c = function(f) {
        return r.getObservableFromLink(n, l, f).map(function(h) {
          i !== "no-cache" && (Ml(h, o) && r.cache.write({
            query: n,
            result: h.data,
            dataId: "ROOT_SUBSCRIPTION",
            variables: f
          }), r.broadcastQueries());
          var p = bo(h), v = c2(h);
          if (p || v) {
            var g = {};
            if (p && (g.graphQLErrors = h.errors), v && (g.protocolErrors = h.extensions[nd]), o === "none" || v)
              throw new lr(g);
          }
          return o === "ignore" && delete h.errors, h;
        });
      };
      if (this.getDocumentInfo(n).hasClientExports) {
        var d = this.localState.addExportedVariables(n, s, l).then(c);
        return new ke(function(f) {
          var h = null;
          return d.then(function(p) {
            return h = p.subscribe(f);
          }, f.error), function() {
            return h && h.unsubscribe();
          };
        });
      }
      return c(s);
    }, e.prototype.stopQuery = function(t) {
      this.stopQueryNoBroadcast(t), this.broadcastQueries();
    }, e.prototype.stopQueryNoBroadcast = function(t) {
      this.stopQueryInStoreNoBroadcast(t), this.removeQuery(t);
    }, e.prototype.removeQuery = function(t) {
      this.fetchCancelFns.delete(t), this.queries.has(t) && (this.getQuery(t).stop(), this.queries.delete(t));
    }, e.prototype.broadcastQueries = function() {
      this.onBroadcast && this.onBroadcast(), this.queries.forEach(function(t) {
        return t.notify();
      });
    }, e.prototype.getLocalState = function() {
      return this.localState;
    }, e.prototype.getObservableFromLink = function(t, r, n, i) {
      var a = this, o;
      i === void 0 && (i = (o = r == null ? void 0 : r.queryDeduplication) !== null && o !== void 0 ? o : this.queryDeduplication);
      var s, u = this.getDocumentInfo(t), l = u.serverQuery, c = u.clientQuery;
      if (l) {
        var d = this, f = d.inFlightLinkObservables, h = d.link, p = {
          query: l,
          variables: n,
          operationName: Cl(l) || void 0,
          context: this.prepareContext(M(M({}, r), { forceFetch: !i }))
        };
        if (r = p.context, i) {
          var v = Os(l), g = Lr(n), $ = f.lookup(v, g);
          if (s = $.observable, !s) {
            var m = new On([
              Al(h, p)
            ]);
            s = $.observable = m, m.beforeNext(function() {
              f.remove(v, g);
            });
          }
        } else
          s = new On([
            Al(h, p)
          ]);
      } else
        s = new On([ke.of({ data: {} })]), r = this.prepareContext(r);
      return c && (s = wu(s, function(b) {
        return a.localState.runResolvers({
          document: c,
          remoteResult: b,
          context: r,
          variables: n
        });
      })), s;
    }, e.prototype.getResultsFromLink = function(t, r, n) {
      var i = t.lastRequestId = this.generateRequestId(), a = this.cache.transformForLink(n.query);
      return wu(this.getObservableFromLink(a, n.context, n.variables), function(o) {
        var s = Tl(o), u = s.length > 0;
        if (i >= t.lastRequestId) {
          if (u && n.errorPolicy === "none")
            throw t.markError(new lr({
              graphQLErrors: s
            }));
          t.markResult(o, a, n, r), t.markReady();
        }
        var l = {
          data: o.data,
          loading: !1,
          networkStatus: Ce.ready
        };
        return u && n.errorPolicy !== "ignore" && (l.errors = s, l.networkStatus = Ce.error), l;
      }, function(o) {
        var s = d2(o) ? o : new lr({ networkError: o });
        throw i >= t.lastRequestId && t.markError(s), s;
      });
    }, e.prototype.fetchConcastWithInfo = function(t, r, n, i) {
      var a = this;
      n === void 0 && (n = Ce.loading), i === void 0 && (i = r.query);
      var o = this.getVariables(i, r.variables), s = this.getQuery(t), u = this.defaultOptions.watchQuery, l = r.fetchPolicy, c = l === void 0 ? u && u.fetchPolicy || "cache-first" : l, d = r.errorPolicy, f = d === void 0 ? u && u.errorPolicy || "none" : d, h = r.returnPartialData, p = h === void 0 ? !1 : h, v = r.notifyOnNetworkStatusChange, g = v === void 0 ? !1 : v, $ = r.context, m = $ === void 0 ? {} : $, b = Object.assign({}, r, {
        query: i,
        variables: o,
        fetchPolicy: c,
        errorPolicy: f,
        returnPartialData: p,
        notifyOnNetworkStatusChange: g,
        context: m
      }), D = function(_) {
        b.variables = _;
        var w = a.fetchQueryByPolicy(s, b, n);
        return (
          // If we're in standby, postpone advancing options.fetchPolicy using
          // applyNextFetchPolicy.
          b.fetchPolicy !== "standby" && // The "standby" policy currently returns [] from fetchQueryByPolicy, so
          // this is another way to detect when nothing was done/fetched.
          w.sources.length > 0 && s.observableQuery && s.observableQuery.applyNextFetchPolicy("after-fetch", r), w
        );
      }, S = function() {
        return a.fetchCancelFns.delete(t);
      };
      this.fetchCancelFns.set(t, function(_) {
        S(), setTimeout(function() {
          return P.cancel(_);
        });
      });
      var P, B;
      if (this.getDocumentInfo(b.query).hasClientExports)
        P = new On(this.localState.addExportedVariables(b.query, b.variables, b.context).then(D).then(function(_) {
          return _.sources;
        })), B = !0;
      else {
        var y = D(b.variables);
        B = y.fromLink, P = new On(y.sources);
      }
      return P.promise.then(S, S), {
        concast: P,
        fromLink: B
      };
    }, e.prototype.refetchQueries = function(t) {
      var r = this, n = t.updateCache, i = t.include, a = t.optimistic, o = a === void 0 ? !1 : a, s = t.removeOptimistic, u = s === void 0 ? o ? vl("refetchQueries") : void 0 : s, l = t.onQueryUpdated, c = /* @__PURE__ */ new Map();
      i && this.getObservableQueries(i).forEach(function(f, h) {
        c.set(h, {
          oq: f,
          lastDiff: r.getQuery(h).getDiff()
        });
      });
      var d = /* @__PURE__ */ new Map();
      return n && this.cache.batch({
        update: n,
        // Since you can perform any combination of cache reads and/or writes in
        // the cache.batch update function, its optimistic option can be either
        // a boolean or a string, representing three distinct modes of
        // operation:
        //
        // * false: read/write only the root layer
        // * true: read/write the topmost layer
        // * string: read/write a fresh optimistic layer with that ID string
        //
        // When typeof optimistic === "string", a new optimistic layer will be
        // temporarily created within cache.batch with that string as its ID. If
        // we then pass that same string as the removeOptimistic option, we can
        // make cache.batch immediately remove the optimistic layer after
        // running the updateCache function, triggering only one broadcast.
        //
        // However, the refetchQueries method accepts only true or false for its
        // optimistic option (not string). We interpret true to mean a temporary
        // optimistic layer should be created, to allow efficiently rolling back
        // the effect of the updateCache function, which involves passing a
        // string instead of true as the optimistic option to cache.batch, when
        // refetchQueries receives optimistic: true.
        //
        // In other words, we are deliberately not supporting the use case of
        // writing to an *existing* optimistic layer (using the refetchQueries
        // updateCache function), since that would potentially interfere with
        // other optimistic updates in progress. Instead, you can read/write
        // only the root layer by passing optimistic: false to refetchQueries,
        // or you can read/write a brand new optimistic layer that will be
        // automatically removed by passing optimistic: true.
        optimistic: o && u || !1,
        // The removeOptimistic option can also be provided by itself, even if
        // optimistic === false, to remove some previously-added optimistic
        // layer safely and efficiently, like we do in markMutationResult.
        //
        // If an explicit removeOptimistic string is provided with optimistic:
        // true, the removeOptimistic string will determine the ID of the
        // temporary optimistic layer, in case that ever matters.
        removeOptimistic: u,
        onWatchUpdated: function(f, h, p) {
          var v = f.watcher instanceof _u && f.watcher.observableQuery;
          if (v) {
            if (l) {
              c.delete(v.queryId);
              var g = l(v, h, p);
              return g === !0 && (g = v.refetch()), g !== !1 && d.set(v, g), g;
            }
            l !== null && c.set(v.queryId, { oq: v, lastDiff: p, diff: h });
          }
        }
      }), c.size && c.forEach(function(f, h) {
        var p = f.oq, v = f.lastDiff, g = f.diff, $;
        if (l) {
          if (!g) {
            var m = p.queryInfo;
            m.reset(), g = m.getDiff();
          }
          $ = l(p, g, v);
        }
        (!l || $ === !0) && ($ = p.refetch()), $ !== !1 && d.set(p, $), h.indexOf("legacyOneTimeQuery") >= 0 && r.stopQueryNoBroadcast(h);
      }), u && this.cache.removeOptimistic(u), d;
    }, e.prototype.fetchQueryByPolicy = function(t, r, n) {
      var i = this, a = r.query, o = r.variables, s = r.fetchPolicy, u = r.refetchWritePolicy, l = r.errorPolicy, c = r.returnPartialData, d = r.context, f = r.notifyOnNetworkStatusChange, h = t.networkStatus;
      t.init({
        document: a,
        variables: o,
        networkStatus: n
      });
      var p = function() {
        return t.getDiff();
      }, v = function(D, S) {
        S === void 0 && (S = t.networkStatus || Ce.loading);
        var P = D.result;
        globalThis.__DEV__ !== !1 && !c && !Te(P, {}) && Ev(D.missing);
        var B = function(y) {
          return ke.of(M({ data: y, loading: fa(S), networkStatus: S }, D.complete ? null : { partial: !0 }));
        };
        return P && i.getDocumentInfo(a).hasForcedResolvers ? i.localState.runResolvers({
          document: a,
          remoteResult: { data: P },
          context: d,
          variables: o,
          onlyRunForcedResolvers: !0
        }).then(function(y) {
          return B(y.data || void 0);
        }) : l === "none" && S === Ce.refetch && Array.isArray(D.missing) ? B(void 0) : B(P);
      }, g = s === "no-cache" ? 0 : n === Ce.refetch && u !== "merge" ? 1 : 2, $ = function() {
        return i.getResultsFromLink(t, g, {
          query: a,
          variables: o,
          context: d,
          fetchPolicy: s,
          errorPolicy: l
        });
      }, m = f && typeof h == "number" && h !== n && fa(n);
      switch (s) {
        default:
        case "cache-first": {
          var b = p();
          return b.complete ? {
            fromLink: !1,
            sources: [v(b, t.markReady())]
          } : c || m ? {
            fromLink: !0,
            sources: [v(b), $()]
          } : { fromLink: !0, sources: [$()] };
        }
        case "cache-and-network": {
          var b = p();
          return b.complete || c || m ? {
            fromLink: !0,
            sources: [v(b), $()]
          } : { fromLink: !0, sources: [$()] };
        }
        case "cache-only":
          return {
            fromLink: !1,
            sources: [v(p(), t.markReady())]
          };
        case "network-only":
          return m ? {
            fromLink: !0,
            sources: [v(p()), $()]
          } : { fromLink: !0, sources: [$()] };
        case "no-cache":
          return m ? {
            fromLink: !0,
            // Note that queryInfo.getDiff() for no-cache queries does not call
            // cache.diff, but instead returns a { complete: false } stub result
            // when there is no queryInfo.diff already defined.
            sources: [v(t.getDiff()), $()]
          } : { fromLink: !0, sources: [$()] };
        case "standby":
          return { fromLink: !1, sources: [] };
      }
    }, e.prototype.getQuery = function(t) {
      return t && !this.queries.has(t) && this.queries.set(t, new _u(this, t)), this.queries.get(t);
    }, e.prototype.prepareContext = function(t) {
      t === void 0 && (t = {});
      var r = this.localState.prepareContext(t);
      return M(M(M({}, this.defaultContext), r), { clientAwareness: this.clientAwareness });
    }, e;
  }()
), dh = !1, ld = (
  /** @class */
  function() {
    function e(t) {
      var r = this;
      if (this.resetStoreCallbacks = [], this.clearStoreCallbacks = [], !t.cache)
        throw ht(15);
      var n = t.uri, i = t.credentials, a = t.headers, o = t.cache, s = t.documentTransform, u = t.ssrMode, l = u === void 0 ? !1 : u, c = t.ssrForceFetchDelay, d = c === void 0 ? 0 : c, f = t.connectToDevTools, h = f === void 0 ? typeof window == "object" && !window.__APOLLO_CLIENT__ && globalThis.__DEV__ !== !1 : f, p = t.queryDeduplication, v = p === void 0 ? !0 : p, g = t.defaultOptions, $ = t.defaultContext, m = t.assumeImmutableResults, b = m === void 0 ? o.assumeImmutableResults : m, D = t.resolvers, S = t.typeDefs, P = t.fragmentMatcher, B = t.name, y = t.version, _ = t.link;
      _ || (_ = n ? new S2({ uri: n, credentials: i, headers: a }) : Ut.empty()), this.link = _, this.cache = o, this.disableNetworkFetches = l || d > 0, this.queryDeduplication = v, this.defaultOptions = g || /* @__PURE__ */ Object.create(null), this.typeDefs = S, d && setTimeout(function() {
        return r.disableNetworkFetches = !1;
      }, d), this.watchQuery = this.watchQuery.bind(this), this.query = this.query.bind(this), this.mutate = this.mutate.bind(this), this.watchFragment = this.watchFragment.bind(this), this.resetStore = this.resetStore.bind(this), this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this), this.version = Nc, this.localState = new wv({
        cache: o,
        client: this,
        resolvers: D,
        fragmentMatcher: P
      }), this.queryManager = new Y2({
        cache: this.cache,
        link: this.link,
        defaultOptions: this.defaultOptions,
        defaultContext: $,
        documentTransform: s,
        queryDeduplication: v,
        ssrMode: l,
        clientAwareness: {
          name: B,
          version: y
        },
        localState: this.localState,
        assumeImmutableResults: b,
        onBroadcast: h ? function() {
          r.devToolsHookCb && r.devToolsHookCb({
            action: {},
            state: {
              queries: r.queryManager.getQueryStore(),
              mutations: r.queryManager.mutationStore || {}
            },
            dataWithOptimisticResults: r.cache.extract(!0)
          });
        } : void 0
      }), h && this.connectToDevTools();
    }
    return e.prototype.connectToDevTools = function() {
      if (typeof window == "object") {
        var t = window, r = Symbol.for("apollo.devtools");
        (t[r] = t[r] || []).push(this), t.__APOLLO_CLIENT__ = this;
      }
      !dh && globalThis.__DEV__ !== !1 && (dh = !0, setTimeout(function() {
        if (typeof window < "u" && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ && /^(https?|file):$/.test(window.location.protocol)) {
          var n = window.navigator, i = n && n.userAgent, a = void 0;
          typeof i == "string" && (i.indexOf("Chrome/") > -1 ? a = "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm" : i.indexOf("Firefox/") > -1 && (a = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")), a && globalThis.__DEV__ !== !1 && ue.log("Download the Apollo DevTools for a better development experience: %s", a);
        }
      }, 1e4));
    }, Object.defineProperty(e.prototype, "documentTransform", {
      /**
       * The `DocumentTransform` used to modify GraphQL documents before a request
       * is made. If a custom `DocumentTransform` is not provided, this will be the
       * default document transform.
       */
      get: function() {
        return this.queryManager.documentTransform;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.stop = function() {
      this.queryManager.stop();
    }, e.prototype.watchQuery = function(t) {
      return this.defaultOptions.watchQuery && (t = Qi(this.defaultOptions.watchQuery, t)), this.disableNetworkFetches && (t.fetchPolicy === "network-only" || t.fetchPolicy === "cache-and-network") && (t = M(M({}, t), { fetchPolicy: "cache-first" })), this.queryManager.watchQuery(t);
    }, e.prototype.query = function(t) {
      return this.defaultOptions.query && (t = Qi(this.defaultOptions.query, t)), ue(t.fetchPolicy !== "cache-and-network", 16), this.disableNetworkFetches && t.fetchPolicy === "network-only" && (t = M(M({}, t), { fetchPolicy: "cache-first" })), this.queryManager.query(t);
    }, e.prototype.mutate = function(t) {
      return this.defaultOptions.mutate && (t = Qi(this.defaultOptions.mutate, t)), this.queryManager.mutate(t);
    }, e.prototype.subscribe = function(t) {
      return this.queryManager.startGraphQLSubscription(t);
    }, e.prototype.readQuery = function(t, r) {
      return r === void 0 && (r = !1), this.cache.readQuery(t, r);
    }, e.prototype.watchFragment = function(t) {
      return this.cache.watchFragment(t);
    }, e.prototype.readFragment = function(t, r) {
      return r === void 0 && (r = !1), this.cache.readFragment(t, r);
    }, e.prototype.writeQuery = function(t) {
      var r = this.cache.writeQuery(t);
      return t.broadcast !== !1 && this.queryManager.broadcastQueries(), r;
    }, e.prototype.writeFragment = function(t) {
      var r = this.cache.writeFragment(t);
      return t.broadcast !== !1 && this.queryManager.broadcastQueries(), r;
    }, e.prototype.__actionHookForDevTools = function(t) {
      this.devToolsHookCb = t;
    }, e.prototype.__requestRaw = function(t) {
      return Al(this.link, t);
    }, e.prototype.resetStore = function() {
      var t = this;
      return Promise.resolve().then(function() {
        return t.queryManager.clearStore({
          discardWatches: !1
        });
      }).then(function() {
        return Promise.all(t.resetStoreCallbacks.map(function(r) {
          return r();
        }));
      }).then(function() {
        return t.reFetchObservableQueries();
      });
    }, e.prototype.clearStore = function() {
      var t = this;
      return Promise.resolve().then(function() {
        return t.queryManager.clearStore({
          discardWatches: !0
        });
      }).then(function() {
        return Promise.all(t.clearStoreCallbacks.map(function(r) {
          return r();
        }));
      });
    }, e.prototype.onResetStore = function(t) {
      var r = this;
      return this.resetStoreCallbacks.push(t), function() {
        r.resetStoreCallbacks = r.resetStoreCallbacks.filter(function(n) {
          return n !== t;
        });
      };
    }, e.prototype.onClearStore = function(t) {
      var r = this;
      return this.clearStoreCallbacks.push(t), function() {
        r.clearStoreCallbacks = r.clearStoreCallbacks.filter(function(n) {
          return n !== t;
        });
      };
    }, e.prototype.reFetchObservableQueries = function(t) {
      return this.queryManager.reFetchObservableQueries(t);
    }, e.prototype.refetchQueries = function(t) {
      var r = this.queryManager.refetchQueries(t), n = [], i = [];
      r.forEach(function(o, s) {
        n.push(s), i.push(o);
      });
      var a = Promise.all(i);
      return a.queries = n, a.results = i, a.catch(function(o) {
        globalThis.__DEV__ !== !1 && ue.debug(17, o);
      }), a;
    }, e.prototype.getObservableQueries = function(t) {
      return t === void 0 && (t = "active"), this.queryManager.getObservableQueries(t);
    }, e.prototype.extract = function(t) {
      return this.cache.extract(t);
    }, e.prototype.restore = function(t) {
      return this.cache.restore(t);
    }, e.prototype.addResolvers = function(t) {
      this.localState.addResolvers(t);
    }, e.prototype.setResolvers = function(t) {
      this.localState.setResolvers(t);
    }, e.prototype.getResolvers = function() {
      return this.localState.getResolvers();
    }, e.prototype.setLocalStateFragmentMatcher = function(t) {
      this.localState.setFragmentMatcher(t);
    }, e.prototype.setLink = function(t) {
      this.link = this.queryManager.link = t;
    }, Object.defineProperty(e.prototype, "defaultContext", {
      get: function() {
        return this.queryManager.defaultContext;
      },
      enumerable: !1,
      configurable: !0
    }), e;
  }()
);
globalThis.__DEV__ !== !1 && (ld.prototype.getMemoryInternals = qD);
var Do = /* @__PURE__ */ new Map(), Nl = /* @__PURE__ */ new Map(), Cv = !0, Bo = !1;
function Sv(e) {
  return e.replace(/[\s,]+/g, " ").trim();
}
function J2(e) {
  return Sv(e.source.body.substring(e.start, e.end));
}
function X2(e) {
  var t = /* @__PURE__ */ new Set(), r = [];
  return e.definitions.forEach(function(n) {
    if (n.kind === "FragmentDefinition") {
      var i = n.name.value, a = J2(n.loc), o = Nl.get(i);
      o && !o.has(a) ? Cv && console.warn("Warning: fragment with name " + i + ` already exists.
graphql-tag enforces all fragment names across your application to be unique; read more about
this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names`) : o || Nl.set(i, o = /* @__PURE__ */ new Set()), o.add(a), t.has(a) || (t.add(a), r.push(n));
    } else
      r.push(n);
  }), M(M({}, e), { definitions: r });
}
function eE(e) {
  var t = new Set(e.definitions);
  t.forEach(function(n) {
    n.loc && delete n.loc, Object.keys(n).forEach(function(i) {
      var a = n[i];
      a && typeof a == "object" && t.add(a);
    });
  });
  var r = e.loc;
  return r && (delete r.startToken, delete r.endToken), e;
}
function tE(e) {
  var t = Sv(e);
  if (!Do.has(t)) {
    var r = yD(e, {
      experimentalFragmentVariables: Bo,
      allowLegacyFragmentVariables: Bo
    });
    if (!r || r.kind !== "Document")
      throw new Error("Not a valid GraphQL document.");
    Do.set(t, eE(X2(r)));
  }
  return Do.get(t);
}
function er(e) {
  for (var t = [], r = 1; r < arguments.length; r++)
    t[r - 1] = arguments[r];
  typeof e == "string" && (e = [e]);
  var n = e[0];
  return t.forEach(function(i, a) {
    i && i.kind === "Document" ? n += i.loc.source.body : n += i, n += e[a + 1];
  }), tE(n);
}
function rE() {
  Do.clear(), Nl.clear();
}
function nE() {
  Cv = !1;
}
function iE() {
  Bo = !0;
}
function aE() {
  Bo = !1;
}
var Ti = {
  gql: er,
  resetCaches: rE,
  disableFragmentWarnings: nE,
  enableExperimentalFragmentVariables: iE,
  disableExperimentalFragmentVariables: aE
};
(function(e) {
  e.gql = Ti.gql, e.resetCaches = Ti.resetCaches, e.disableFragmentWarnings = Ti.disableFragmentWarnings, e.enableExperimentalFragmentVariables = Ti.enableExperimentalFragmentVariables, e.disableExperimentalFragmentVariables = Ti.disableExperimentalFragmentVariables;
})(er || (er = {}));
er.default = er;
function kv(e) {
  return new Ut(function(t, r) {
    var n = zt(t, []);
    return new ke(function(i) {
      var a, o = !1;
      return Promise.resolve(n).then(function(s) {
        return e(s, t.getContext());
      }).then(t.setContext).then(function() {
        o || (a = r(t).subscribe({
          next: i.next.bind(i),
          error: i.error.bind(i),
          complete: i.complete.bind(i)
        }));
      }).catch(i.error.bind(i)), function() {
        o = !0, a && a.unsubscribe();
      };
    });
  });
}
function cd(e) {
  return new Ut(function(t, r) {
    return new ke(function(n) {
      var i, a, o;
      try {
        i = r(t).subscribe({
          next: function(s) {
            if (s.errors && (o = e({
              graphQLErrors: s.errors,
              response: s,
              operation: t,
              forward: r
            }), o)) {
              a = o.subscribe({
                next: n.next.bind(n),
                error: n.error.bind(n),
                complete: n.complete.bind(n)
              });
              return;
            }
            n.next(s);
          },
          error: function(s) {
            if (o = e({
              operation: t,
              networkError: s,
              //Network errors can return GraphQL errors on for example a 403
              graphQLErrors: s && s.result && s.result.errors || void 0,
              forward: r
            }), o) {
              a = o.subscribe({
                next: n.next.bind(n),
                error: n.error.bind(n),
                complete: n.complete.bind(n)
              });
              return;
            }
            n.error(s);
          },
          complete: function() {
            o || n.complete.bind(n)();
          }
        });
      } catch (s) {
        e({ networkError: s, operation: t, forward: r }), n.error(s);
      }
      return function() {
        i && i.unsubscribe(), a && i.unsubscribe();
      };
    });
  });
}
(function(e) {
  Kt(t, e);
  function t(r) {
    var n = e.call(this) || this;
    return n.link = cd(r), n;
  }
  return t.prototype.request = function(r, n) {
    return this.link.request(r, n);
  }, t;
})(Ut);
function oE(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Pv = { exports: {} };
(function(e) {
  e.exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = void 0, e.exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = void 0, e.exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = void 0, Object.assign(e.exports, A);
})(Pv);
var Ge = Pv.exports;
const sE = /* @__PURE__ */ oE(Ge), Tv = /* @__PURE__ */ U$({
  __proto__: null,
  default: sE
}, [Ge]);
var fh = Uc ? Symbol.for("__APOLLO_CONTEXT__") : "__APOLLO_CONTEXT__";
function Av() {
  ue("createContext" in Tv, 45);
  var e = Ge.createContext[fh];
  return e || (Object.defineProperty(Ge.createContext, fh, {
    value: e = Ge.createContext({}),
    enumerable: !1,
    writable: !1,
    configurable: !0
  }), e.displayName = "ApolloContext"), e;
}
function dd(e) {
  var t = Ge.useContext(Av()), r = e || t.client;
  return ue(!!r, 49), r;
}
var hh = !1, uE = "useSyncExternalStore", lE = Tv[uE], cE = lE || function(e, t, r) {
  var n = t();
  // DEVIATION: Using __DEV__
  globalThis.__DEV__ !== !1 && !hh && // DEVIATION: Not using Object.is because we know our snapshots will never
  // be exotic primitive values like NaN, which is !== itself.
  n !== t() && (hh = !0, globalThis.__DEV__ !== !1 && ue.error(58));
  var i = Ge.useState({
    inst: { value: n, getSnapshot: t }
  }), a = i[0].inst, o = i[1];
  return RD ? Ge.useLayoutEffect(function() {
    Object.assign(a, { value: n, getSnapshot: t }), Fu(a) && o({ inst: a });
  }, [e, n, t]) : Object.assign(a, { value: n, getSnapshot: t }), Ge.useEffect(function() {
    return Fu(a) && o({ inst: a }), e(function() {
      Fu(a) && o({ inst: a });
    });
  }, [e]), n;
};
function Fu(e) {
  var t = e.value, r = e.getSnapshot;
  try {
    return t !== r();
  } catch {
    return !0;
  }
}
var Zt;
(function(e) {
  e[e.Query = 0] = "Query", e[e.Mutation = 1] = "Mutation", e[e.Subscription = 2] = "Subscription";
})(Zt || (Zt = {}));
var rn;
function ph(e) {
  var t;
  switch (e) {
    case Zt.Query:
      t = "Query";
      break;
    case Zt.Mutation:
      t = "Mutation";
      break;
    case Zt.Subscription:
      t = "Subscription";
      break;
  }
  return t;
}
function _v(e) {
  rn || (rn = new qc(
    Xt.parser || 1e3
    /* defaultCacheSizes.parser */
  ));
  var t = rn.get(e);
  if (t)
    return t;
  var r, n, i;
  ue(!!e && !!e.kind, 60, e);
  for (var a = [], o = [], s = [], u = [], l = 0, c = e.definitions; l < c.length; l++) {
    var d = c[l];
    if (d.kind === "FragmentDefinition") {
      a.push(d);
      continue;
    }
    if (d.kind === "OperationDefinition")
      switch (d.operation) {
        case "query":
          o.push(d);
          break;
        case "mutation":
          s.push(d);
          break;
        case "subscription":
          u.push(d);
          break;
      }
  }
  ue(!a.length || o.length || s.length || u.length, 61), ue(
    o.length + s.length + u.length <= 1,
    62,
    e,
    o.length,
    u.length,
    s.length
  ), n = o.length ? Zt.Query : Zt.Mutation, !o.length && !s.length && (n = Zt.Subscription);
  var f = o.length ? o : s.length ? s : u;
  ue(f.length === 1, 63, e, f.length);
  var h = f[0];
  r = h.variableDefinitions || [], h.name && h.name.kind === "Name" ? i = h.name.value : i = "data";
  var p = { name: i, type: n, variables: r };
  return rn.set(e, p), p;
}
_v.resetCache = function() {
  rn = void 0;
};
globalThis.__DEV__ !== !1 && Hc("parser", function() {
  return rn ? rn.size : 0;
});
function Fv(e, t) {
  var r = _v(e), n = ph(t), i = ph(r.type);
  ue(
    r.type === t,
    64,
    n,
    n,
    i
  );
}
var dE = wm ? Ge.useLayoutEffect : Ge.useEffect, fE = Symbol.for("apollo.hook.wrappers");
function hE(e, t, r) {
  var n = r.queryManager, i = n && n[fE], a = i && i[e];
  return a ? a(t) : t;
}
var pE = Object.prototype.hasOwnProperty;
function mE(e, t) {
  return t === void 0 && (t = /* @__PURE__ */ Object.create(null)), hE("useQuery", vE, dd(t && t.client))(e, t);
}
function vE(e, t) {
  return yE(dd(t.client), e).useQuery(t);
}
function yE(e, t) {
  var r = Ge.useReducer(function(s) {
    return s + 1;
  }, 0)[1];
  function n(s) {
    return Object.assign(new gE(e, t, s), {
      forceUpdateState: r
    });
  }
  var i = Ge.useState(n), a = i[0], o = i[1];
  return (e !== a.client || t !== a.query) && o(a = n(a)), a;
}
var gE = (
  /** @class */
  function() {
    function e(t, r, n) {
      var i = this;
      this.client = t, this.query = r, this.forceUpdate = function() {
        return i.forceUpdateState();
      }, this.ssrDisabledResult = la({
        loading: !0,
        data: void 0,
        error: void 0,
        networkStatus: Ce.loading
      }), this.skipStandbyResult = la({
        loading: !1,
        data: void 0,
        error: void 0,
        networkStatus: Ce.ready
      }), this.toQueryResultCache = new (xn ? WeakMap : Map)(), Fv(r, Zt.Query);
      var a = n && n.result, o = a && a.data;
      o && (this.previousData = o);
    }
    return e.prototype.forceUpdateState = function() {
      globalThis.__DEV__ !== !1 && ue.warn(51);
    }, e.prototype.executeQuery = function(t) {
      var r = this, n;
      t.query && Object.assign(this, { query: t.query }), this.watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = t);
      var i = this.observable.reobserveAsConcast(this.getObsQueryOptions());
      return this.previousData = ((n = this.result) === null || n === void 0 ? void 0 : n.data) || this.previousData, this.result = void 0, this.forceUpdate(), new Promise(function(a) {
        var o;
        i.subscribe({
          next: function(s) {
            o = s;
          },
          error: function() {
            a(r.toQueryResult(r.observable.getCurrentResult()));
          },
          complete: function() {
            a(r.toQueryResult(o));
          }
        });
      });
    }, e.prototype.useQuery = function(t) {
      var r = this;
      this.renderPromises = Ge.useContext(Av()).renderPromises, this.useOptions(t);
      var n = this.useObservableQuery(), i = cE(
        // eslint-disable-next-line react-hooks/rules-of-hooks
        Ge.useCallback(function(a) {
          if (r.renderPromises)
            return function() {
            };
          r.forceUpdate = a;
          var o = function() {
            var l = r.result, c = n.getCurrentResult();
            l && l.loading === c.loading && l.networkStatus === c.networkStatus && Te(l.data, c.data) || r.setResult(c);
          }, s = function(l) {
            if (u.unsubscribe(), u = n.resubscribeAfterError(o, s), !pE.call(l, "graphQLErrors"))
              throw l;
            var c = r.result;
            (!c || c && c.loading || !Te(l, c.error)) && r.setResult({
              data: c && c.data,
              error: l,
              loading: !1,
              networkStatus: Ce.error
            });
          }, u = n.subscribe(o, s);
          return function() {
            setTimeout(function() {
              return u.unsubscribe();
            }), r.forceUpdate = function() {
              return r.forceUpdateState();
            };
          };
        }, [
          // We memoize the subscribe function using useCallback and the following
          // dependency keys, because the subscribe function reference is all that
          // useSyncExternalStore uses internally as a dependency key for the
          // useEffect ultimately responsible for the subscription, so we are
          // effectively passing this dependency array to that useEffect buried
          // inside useSyncExternalStore, as desired.
          n,
          // eslint-disable-next-line react-hooks/exhaustive-deps
          this.renderPromises,
          // eslint-disable-next-line react-hooks/exhaustive-deps
          this.client.disableNetworkFetches
        ]),
        function() {
          return r.getCurrentResult();
        },
        function() {
          return r.getCurrentResult();
        }
      );
      return this.unsafeHandlePartialRefetch(i), this.toQueryResult(i);
    }, e.prototype.useOptions = function(t) {
      var r, n = this.createWatchQueryOptions(this.queryHookOptions = t), i = this.watchQueryOptions;
      Te(n, i) || (this.watchQueryOptions = n, i && this.observable && (this.observable.reobserve(this.getObsQueryOptions()), this.previousData = ((r = this.result) === null || r === void 0 ? void 0 : r.data) || this.previousData, this.result = void 0)), this.onCompleted = t.onCompleted || e.prototype.onCompleted, this.onError = t.onError || e.prototype.onError, (this.renderPromises || this.client.disableNetworkFetches) && this.queryHookOptions.ssr === !1 && !this.queryHookOptions.skip ? this.result = this.ssrDisabledResult : this.queryHookOptions.skip || this.watchQueryOptions.fetchPolicy === "standby" ? this.result = this.skipStandbyResult : (this.result === this.ssrDisabledResult || this.result === this.skipStandbyResult) && (this.result = void 0);
    }, e.prototype.getObsQueryOptions = function() {
      var t = [], r = this.client.defaultOptions.watchQuery;
      return r && t.push(r), this.queryHookOptions.defaultOptions && t.push(this.queryHookOptions.defaultOptions), t.push(dn(this.observable && this.observable.options, this.watchQueryOptions)), t.reduce(Qi);
    }, e.prototype.createWatchQueryOptions = function(t) {
      var r;
      t === void 0 && (t = {});
      var n = t.skip;
      t.ssr, t.onCompleted, t.onError, t.defaultOptions;
      var i = zt(t, ["skip", "ssr", "onCompleted", "onError", "defaultOptions"]), a = Object.assign(i, { query: this.query });
      if (this.renderPromises && (a.fetchPolicy === "network-only" || a.fetchPolicy === "cache-and-network") && (a.fetchPolicy = "cache-first"), a.variables || (a.variables = {}), n) {
        var o = a.fetchPolicy, s = o === void 0 ? this.getDefaultFetchPolicy() : o, u = a.initialFetchPolicy, l = u === void 0 ? s : u;
        Object.assign(a, {
          initialFetchPolicy: l,
          fetchPolicy: "standby"
        });
      } else a.fetchPolicy || (a.fetchPolicy = ((r = this.observable) === null || r === void 0 ? void 0 : r.options.initialFetchPolicy) || this.getDefaultFetchPolicy());
      return a;
    }, e.prototype.getDefaultFetchPolicy = function() {
      var t, r;
      return ((t = this.queryHookOptions.defaultOptions) === null || t === void 0 ? void 0 : t.fetchPolicy) || ((r = this.client.defaultOptions.watchQuery) === null || r === void 0 ? void 0 : r.fetchPolicy) || "cache-first";
    }, e.prototype.onCompleted = function(t) {
    }, e.prototype.onError = function(t) {
    }, e.prototype.useObservableQuery = function() {
      var t = this.observable = this.renderPromises && this.renderPromises.getSSRObservable(this.watchQueryOptions) || this.observable || // Reuse this.observable if possible (and not SSR)
      this.client.watchQuery(this.getObsQueryOptions());
      this.obsQueryFields = Ge.useMemo(function() {
        return {
          refetch: t.refetch.bind(t),
          reobserve: t.reobserve.bind(t),
          fetchMore: t.fetchMore.bind(t),
          updateQuery: t.updateQuery.bind(t),
          startPolling: t.startPolling.bind(t),
          stopPolling: t.stopPolling.bind(t),
          subscribeToMore: t.subscribeToMore.bind(t)
        };
      }, [t]);
      var r = !(this.queryHookOptions.ssr === !1 || this.queryHookOptions.skip);
      return this.renderPromises && r && (this.renderPromises.registerSSRObservable(t), t.getCurrentResult().loading && this.renderPromises.addObservableQueryPromise(t)), t;
    }, e.prototype.setResult = function(t) {
      var r = this.result;
      r && r.data && (this.previousData = r.data), this.result = t, this.forceUpdate(), this.handleErrorOrCompleted(t, r);
    }, e.prototype.handleErrorOrCompleted = function(t, r) {
      var n = this;
      if (!t.loading) {
        var i = this.toApolloError(t);
        Promise.resolve().then(function() {
          i ? n.onError(i) : t.data && (r == null ? void 0 : r.networkStatus) !== t.networkStatus && t.networkStatus === Ce.ready && n.onCompleted(t.data);
        }).catch(function(a) {
          globalThis.__DEV__ !== !1 && ue.warn(a);
        });
      }
    }, e.prototype.toApolloError = function(t) {
      return Bt(t.errors) ? new lr({ graphQLErrors: t.errors }) : t.error;
    }, e.prototype.getCurrentResult = function() {
      return this.result || this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult()), this.result;
    }, e.prototype.toQueryResult = function(t) {
      var r = this.toQueryResultCache.get(t);
      if (r)
        return r;
      var n = t.data;
      t.partial;
      var i = zt(t, ["data", "partial"]);
      return this.toQueryResultCache.set(t, r = M(M(M({ data: n }, i), this.obsQueryFields), { client: this.client, observable: this.observable, variables: this.observable.variables, called: !this.queryHookOptions.skip, previousData: this.previousData })), !r.error && Bt(t.errors) && (r.error = new lr({ graphQLErrors: t.errors })), r;
    }, e.prototype.unsafeHandlePartialRefetch = function(t) {
      t.partial && this.queryHookOptions.partialRefetch && !t.loading && (!t.data || Object.keys(t.data).length === 0) && this.observable.options.fetchPolicy !== "cache-only" && (Object.assign(t, {
        loading: !0,
        networkStatus: Ce.refetch
      }), this.observable.refetch());
    }, e;
  }()
);
function Ov(e, t) {
  var r = dd(t == null ? void 0 : t.client);
  Fv(e, Zt.Mutation);
  var n = Ge.useState({
    called: !1,
    loading: !1,
    client: r
  }), i = n[0], a = n[1], o = Ge.useRef({
    result: i,
    mutationId: 0,
    isMounted: !0,
    client: r,
    mutation: e,
    options: t
  });
  dE(function() {
    Object.assign(o.current, { client: r, options: t, mutation: e });
  });
  var s = Ge.useCallback(function(l) {
    l === void 0 && (l = {});
    var c = o.current, d = c.options, f = c.mutation, h = M(M({}, d), { mutation: f }), p = l.client || o.current.client;
    !o.current.result.loading && !h.ignoreResults && o.current.isMounted && a(o.current.result = {
      loading: !0,
      error: void 0,
      data: void 0,
      called: !0,
      client: p
    });
    var v = ++o.current.mutationId, g = Qi(h, l);
    return p.mutate(g).then(function($) {
      var m, b, D = $.data, S = $.errors, P = S && S.length > 0 ? new lr({ graphQLErrors: S }) : void 0, B = l.onError || ((m = o.current.options) === null || m === void 0 ? void 0 : m.onError);
      if (P && B && B(P, g), v === o.current.mutationId && !g.ignoreResults) {
        var y = {
          called: !0,
          loading: !1,
          data: D,
          error: P,
          client: p
        };
        o.current.isMounted && !Te(o.current.result, y) && a(o.current.result = y);
      }
      var _ = l.onCompleted || ((b = o.current.options) === null || b === void 0 ? void 0 : b.onCompleted);
      return P || _ == null || _($.data, g), $;
    }).catch(function($) {
      var m;
      if (v === o.current.mutationId && o.current.isMounted) {
        var b = {
          loading: !1,
          error: $,
          data: void 0,
          called: !0,
          client: p
        };
        Te(o.current.result, b) || a(o.current.result = b);
      }
      var D = l.onError || ((m = o.current.options) === null || m === void 0 ? void 0 : m.onError);
      if (D)
        return D($, g), { data: void 0, errors: $ };
      throw $;
    });
  }, []), u = Ge.useCallback(function() {
    if (o.current.isMounted) {
      var l = {
        called: !1,
        loading: !1,
        client: o.current.client
      };
      Object.assign(o.current, { mutationId: 0, result: l }), a(l);
    }
  }, []);
  return Ge.useEffect(function() {
    var l = o.current;
    return l.isMounted = !0, function() {
      l.isMounted = !1;
    };
  }, []), [s, M({ reset: u }, i)];
}
const bE = new ud();
async function $E({ mode: e, ownerId: t }) {
  const r = e === "development" ? ni.engageGraphqlDevEndpoint : ni.engageGraphqlEndpoint, n = sv({ uri: r }), i = kv((s, { headers: u }) => {
    const l = sm({ ownerId: t }), c = l ? `Accounts ${l}` : "";
    return {
      headers: {
        ...u,
        authorization: c
      }
    };
  }), a = cd(({ networkError: s, operation: u, forward: l }) => {
    if (s && s.statusCode === 401)
      return console.log("Re-authenticating..."), new ke((c) => {
        Mc({ mode: e, ownerId: t }).then((d) => {
          u.setContext(({ headers: h }) => ({
            headers: {
              ...h,
              authorization: d ? `Accounts ${d}` : ""
            }
          }));
          const f = {
            next: c.next.bind(c),
            error: c.error.bind(c),
            complete: c.complete.bind(c)
          };
          l(u).subscribe(f);
        }).catch(c.error.bind(c));
      });
  });
  return new ld({
    link: Ut.from([a, i, n]),
    cache: bE
  });
}
const Iv = de({
  apolloClient: null
});
function xE({ children: e, mode: t, ownerId: r }) {
  const [n, i] = ee(null);
  return oe(() => {
    async function a() {
      i(await $E({ mode: t, ownerId: r }));
    }
    a().catch(console.error);
  }, [t, r]), n ? /* @__PURE__ */ R(Iv.Provider, { value: { client: n }, children: e }) : /* @__PURE__ */ R("h2", { children: "Initializing..." });
}
function DE() {
  const e = le(Iv);
  if (!e)
    throw new Error("useEngage must be used within an EngageProvider");
  return e;
}
function EE(e, t = {}) {
  const { client: r } = DE();
  return Ov(e, { ...t, client: r });
}
const wE = new ud();
async function CE({ mode: e, ownerId: t }) {
  const r = e === "development" ? ni.accountsGraphqlDevEndpoint : ni.accountsGraphqlEndpoint, n = sv({ uri: r }), i = kv((s, { headers: u }) => {
    const l = sm({ ownerId: t }), c = l ? `Bearer ${l}` : "";
    return {
      headers: {
        ...u,
        accept: "application/json",
        // Necessary to get a 401 instead of a redirect on auth errors.
        authorization: c
      }
    };
  }), a = cd(({ networkError: s, operation: u, forward: l }) => {
    if (s && s.statusCode === 401)
      return console.log("Re-authenticating..."), new ke((c) => {
        Mc({ mode: e, ownerId: t }).then((d) => {
          u.setContext(({ headers: h }) => ({
            headers: {
              ...h,
              authorization: d ? `Accounts ${d}` : ""
            }
          }));
          const f = {
            next: c.next.bind(c),
            error: c.error.bind(c),
            complete: c.complete.bind(c)
          };
          l(u).subscribe(f);
        }).catch(c.error.bind(c));
      });
  });
  return new ld({
    link: Ut.from([a, i, n]),
    cache: wE
  });
}
const Rv = de({
  apolloClient: null
});
function SE({ children: e, mode: t, ownerId: r }) {
  const [n, i] = ee(null);
  return oe(() => {
    async function a() {
      i(await CE({ mode: t, ownerId: r }));
    }
    a().catch(console.error);
  }, [t, r]), n ? /* @__PURE__ */ R(Rv.Provider, { value: { client: n }, children: e }) : /* @__PURE__ */ R("h2", { children: "Initializing..." });
}
function Bv() {
  const e = le(Rv);
  if (!e)
    throw new Error("useAccounts must be used within an AccountsProvider");
  return e;
}
function kE(e, t = {}) {
  const { client: r } = Bv();
  return Ov(e, { ...t, client: r });
}
function fd(e, t = {}) {
  const { client: r } = Bv();
  return mE(e, { ...t, client: r });
}
const Mv = de({}), PE = () => le(Mv);
function TE({ children: e, options: t = {} }) {
  return t.isProd = t.mode === "production", t.isDev = !t.isProd, /* @__PURE__ */ R(Mv.Provider, { value: t, children: e });
}
function dT({
  ownerId: e,
  senalysisBusinessId: t,
  spilloverBusinessId: r,
  children: n,
  mode: i = "production"
}) {
  return /* @__PURE__ */ R(TE, { options: {
    mode: i,
    ownerId: e,
    senalysisBusinessId: t,
    spilloverBusinessId: r
  }, children: /* @__PURE__ */ R(Bx, { mode: i, ownerId: e, children: /* @__PURE__ */ R(SE, { mode: i, ownerId: e, children: /* @__PURE__ */ R(xE, { mode: i, ownerId: e, children: /* @__PURE__ */ ge(
    "div",
    {
      className: "sfs-isolate",
      style: { height: "100%", width: "100%" },
      children: [
        n,
        /* @__PURE__ */ R(rx, {})
      ]
    }
  ) }) }) }) });
}
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const AE = (e) => e.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase(), Nv = (...e) => e.filter((t, r, n) => !!t && n.indexOf(t) === r).join(" ");
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
var _E = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: 2,
  strokeLinecap: "round",
  strokeLinejoin: "round"
};
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const FE = Ee(
  ({
    color: e = "currentColor",
    size: t = 24,
    strokeWidth: r = 2,
    absoluteStrokeWidth: n,
    className: i = "",
    children: a,
    iconNode: o,
    ...s
  }, u) => dl(
    "svg",
    {
      ref: u,
      ..._E,
      width: t,
      height: t,
      stroke: e,
      strokeWidth: n ? Number(r) * 24 / Number(t) : r,
      className: Nv("lucide", i),
      ...s
    },
    [
      ...o.map(([l, c]) => dl(l, c)),
      ...Array.isArray(a) ? a : [a]
    ]
  )
);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const je = (e, t) => {
  const r = Ee(
    ({ className: n, ...i }, a) => dl(FE, {
      ref: a,
      iconNode: t,
      className: Nv(`lucide-${AE(e)}`, n),
      ...i
    })
  );
  return r.displayName = `${e}`, r;
};
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const OE = je("BookA", [
  ["path", { d: "M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20", key: "t4utmx" }],
  ["path", { d: "m8 13 4-7 4 7", key: "4rari8" }],
  ["path", { d: "M9.1 11h5.7", key: "1gkovt" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const IE = je("Calendar", [
  ["path", { d: "M8 2v4", key: "1cmpym" }],
  ["path", { d: "M16 2v4", key: "4m81vk" }],
  ["rect", { width: "18", height: "18", x: "3", y: "4", rx: "2", key: "1hopcy" }],
  ["path", { d: "M3 10h18", key: "8toen8" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const RE = je("Check", [["path", { d: "M20 6 9 17l-5-5", key: "1gmf2c" }]]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Lv = je("ChevronDown", [
  ["path", { d: "m6 9 6 6 6-6", key: "qrunsl" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Ll = je("ChevronLeft", [
  ["path", { d: "m15 18-6-6 6-6", key: "1wnfg3" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const mh = je("ChevronRight", [
  ["path", { d: "m9 18 6-6-6-6", key: "mthhwq" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const BE = je("CircleMinus", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const ME = je("CirclePlus", [
  ["circle", { cx: "12", cy: "12", r: "10", key: "1mglay" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "M12 8v8", key: "napkw2" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const NE = je("Ellipsis", [
  ["circle", { cx: "12", cy: "12", r: "1", key: "41hilf" }],
  ["circle", { cx: "19", cy: "12", r: "1", key: "1wjl8i" }],
  ["circle", { cx: "5", cy: "12", r: "1", key: "1pcz8c" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const LE = je("Feather", [
  [
    "path",
    {
      d: "M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z",
      key: "18jl4k"
    }
  ],
  ["path", { d: "M16 8 2 22", key: "vp34q" }],
  ["path", { d: "M17.5 15H9", key: "1oz8nu" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const VE = je("FileDown", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M12 18v-6", key: "17g6i2" }],
  ["path", { d: "m9 15 3 3 3-3", key: "1npd3o" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const vh = je("FileText", [
  ["path", { d: "M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z", key: "1rqfz7" }],
  ["path", { d: "M14 2v4a2 2 0 0 0 2 2h4", key: "tnqrlb" }],
  ["path", { d: "M10 9H8", key: "b1mrlr" }],
  ["path", { d: "M16 13H8", key: "t4e002" }],
  ["path", { d: "M16 17H8", key: "z1uh3a" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const jE = je("Languages", [
  ["path", { d: "m5 8 6 6", key: "1wu5hv" }],
  ["path", { d: "m4 14 6-6 2-3", key: "1k1g8d" }],
  ["path", { d: "M2 5h12", key: "or177f" }],
  ["path", { d: "M7 2h1", key: "1t2jsx" }],
  ["path", { d: "m22 22-5-10-5 10", key: "don7ne" }],
  ["path", { d: "M14 18h6", key: "1m8k6r" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const zE = je("List", [
  ["line", { x1: "8", x2: "21", y1: "6", y2: "6", key: "7ey8pc" }],
  ["line", { x1: "8", x2: "21", y1: "12", y2: "12", key: "rjfblc" }],
  ["line", { x1: "8", x2: "21", y1: "18", y2: "18", key: "c3b1m8" }],
  ["line", { x1: "3", x2: "3.01", y1: "6", y2: "6", key: "1g7gq3" }],
  ["line", { x1: "3", x2: "3.01", y1: "12", y2: "12", key: "1pjlvk" }],
  ["line", { x1: "3", x2: "3.01", y1: "18", y2: "18", key: "28t2mc" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Vv = je("LoaderCircle", [
  ["path", { d: "M21 12a9 9 0 1 1-6.219-8.56", key: "13zald" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const KE = je("Loader", [
  ["path", { d: "M12 2v4", key: "3427ic" }],
  ["path", { d: "m16.2 7.8 2.9-2.9", key: "r700ao" }],
  ["path", { d: "M18 12h4", key: "wj9ykh" }],
  ["path", { d: "m16.2 16.2 2.9 2.9", key: "1bxg5t" }],
  ["path", { d: "M12 18v4", key: "jadmvz" }],
  ["path", { d: "m4.9 19.1 2.9-2.9", key: "bwix9q" }],
  ["path", { d: "M2 12h4", key: "j09sii" }],
  ["path", { d: "m4.9 4.9 2.9 2.9", key: "giyufr" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const UE = je("MailCheck", [
  ["path", { d: "M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8", key: "12jkf8" }],
  ["path", { d: "m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7", key: "1ocrg3" }],
  ["path", { d: "m16 19 2 2 4-4", key: "1b14m6" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const qE = je("RefreshCw", [
  ["path", { d: "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8", key: "v9h5vc" }],
  ["path", { d: "M21 3v5h-5", key: "1q7to0" }],
  ["path", { d: "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16", key: "3uifl3" }],
  ["path", { d: "M8 16H3v5", key: "1cv678" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const HE = je("Reply", [
  ["polyline", { points: "9 17 4 12 9 7", key: "hvgpf2" }],
  ["path", { d: "M20 18v-2a4 4 0 0 0-4-4H4", key: "5vmcpk" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const WE = je("SmilePlus", [
  ["path", { d: "M22 11v1a10 10 0 1 1-9-10", key: "ew0xw9" }],
  ["path", { d: "M8 14s1.5 2 4 2 4-2 4-2", key: "1y1vjs" }],
  ["line", { x1: "9", x2: "9.01", y1: "9", y2: "9", key: "yxxnd0" }],
  ["line", { x1: "15", x2: "15.01", y1: "9", y2: "9", key: "1p4y9e" }],
  ["path", { d: "M16 5h6", key: "1vod17" }],
  ["path", { d: "M19 2v6", key: "4bpg5p" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const QE = je("SpellCheck", [
  ["path", { d: "m6 16 6-12 6 12", key: "1b4byz" }],
  ["path", { d: "M8 12h8", key: "1wcyev" }],
  ["path", { d: "m16 20 2 2 4-4", key: "13tcca" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const GE = je("Star", [
  [
    "polygon",
    {
      points: "12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2",
      key: "8f66p6"
    }
  ]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const Rs = je("WandSparkles", [
  [
    "path",
    {
      d: "m21.64 3.64-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72",
      key: "ul74o6"
    }
  ],
  ["path", { d: "m14 7 3 3", key: "1r5n42" }],
  ["path", { d: "M5 6v4", key: "ilb8ba" }],
  ["path", { d: "M19 14v4", key: "blhpug" }],
  ["path", { d: "M10 2v2", key: "7u0qdc" }],
  ["path", { d: "M7 8H3", key: "zfb6yr" }],
  ["path", { d: "M21 16h-4", key: "1cnmox" }],
  ["path", { d: "M11 3H9", key: "1obp7u" }]
]);
/**
 * @license lucide-react v0.396.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */
const jv = je("X", [
  ["path", { d: "M18 6 6 18", key: "1bl5f8" }],
  ["path", { d: "m6 6 12 12", key: "d8bk6v" }]
]), zv = de({
  currentScreen: null
});
function hd() {
  const e = le(zv);
  if (!e)
    throw new Error("useMiniApp must be used within a MiniAppProvider");
  return e;
}
function ZE({ onCloseButtonClick: e, children: t }) {
  const [r, n] = ee(null), i = () => n(null);
  return /* @__PURE__ */ R(
    zv.Provider,
    {
      value: { currentScreen: r, setCurrentScreen: n, goHome: i, onCloseButtonClick: e },
      children: t
    }
  );
}
de(null);
de(null);
de(null);
de(null);
de(null);
const pd = de({}), Re = typeof document < "u" ? A.useLayoutEffect : () => {
};
function ut(e) {
  const t = q(null);
  return Re(() => {
    t.current = e;
  }, [
    e
  ]), be((...r) => {
    const n = t.current;
    return n == null ? void 0 : n(...r);
  }, []);
}
function YE(e) {
  let [t, r] = ee(e), n = q(null), i = ut(() => {
    if (!n.current) return;
    let o = n.current.next();
    if (o.done) {
      n.current = null;
      return;
    }
    t === o.value ? i() : r(o.value);
  });
  Re(() => {
    n.current && i();
  });
  let a = ut((o) => {
    n.current = o(t), i();
  });
  return [
    t,
    a
  ];
}
const Mo = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
}, Kv = /* @__PURE__ */ A.createContext(Mo), JE = /* @__PURE__ */ A.createContext(!1);
let XE = !!(typeof window < "u" && window.document && window.document.createElement), Ou = /* @__PURE__ */ new WeakMap();
function ew(e = !1) {
  let t = le(Kv), r = q(null);
  if (r.current === null && !e) {
    var n, i;
    let a = (i = A.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || i === void 0 || (n = i.ReactCurrentOwner) === null || n === void 0 ? void 0 : n.current;
    if (a) {
      let o = Ou.get(a);
      o == null ? Ou.set(a, {
        id: t.current,
        state: a.memoizedState
      }) : a.memoizedState !== o.state && (t.current = o.id, Ou.delete(a));
    }
    r.current = ++t.current;
  }
  return r.current;
}
function tw(e) {
  let t = le(Kv);
  t === Mo && !XE && console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let r = ew(!!e), n = t === Mo && process.env.NODE_ENV === "test" ? "react-aria" : `react-aria${t.prefix}`;
  return e || `${n}-${r}`;
}
function rw(e) {
  let t = A.useId(), [r] = ee(Er()), n = r || process.env.NODE_ENV === "test" ? "react-aria" : `react-aria${Mo.prefix}`;
  return e || `${n}-${t}`;
}
const nw = typeof A.useId == "function" ? rw : tw;
function iw() {
  return !1;
}
function aw() {
  return !0;
}
function ow(e) {
  return () => {
  };
}
function Er() {
  return typeof A.useSyncExternalStore == "function" ? A.useSyncExternalStore(ow, iw, aw) : le(JE);
}
let sw = !!(typeof window < "u" && window.document && window.document.createElement), No = /* @__PURE__ */ new Map();
function St(e) {
  let [t, r] = ee(e), n = q(null), i = nw(t), a = be((o) => {
    n.current = o;
  }, []);
  return sw && No.set(i, a), Re(() => {
    let o = i;
    return () => {
      No.delete(o);
    };
  }, [
    i
  ]), oe(() => {
    let o = n.current;
    o && (n.current = null, r(o));
  }), i;
}
function uw(e, t) {
  if (e === t) return e;
  let r = No.get(e);
  if (r)
    return r(t), t;
  let n = No.get(t);
  return n ? (n(e), e) : t;
}
function ui(e = []) {
  let t = St(), [r, n] = YE(t), i = be(() => {
    n(function* () {
      yield t, yield document.getElementById(t) ? t : void 0;
    });
  }, [
    t,
    n
  ]);
  return Re(i, [
    t,
    i,
    ...e
  ]), r;
}
function qr(...e) {
  return (...t) => {
    for (let r of e) typeof r == "function" && r(...t);
  };
}
const Be = (e) => {
  var t;
  return (t = e == null ? void 0 : e.ownerDocument) !== null && t !== void 0 ? t : document;
}, Ot = (e) => e && "window" in e && e.window === e ? e : Be(e).defaultView || window;
function ye(...e) {
  let t = {
    ...e[0]
  };
  for (let r = 1; r < e.length; r++) {
    let n = e[r];
    for (let i in n) {
      let a = t[i], o = n[i];
      typeof a == "function" && typeof o == "function" && // This is a lot faster than a regex.
      i[0] === "o" && i[1] === "n" && i.charCodeAt(2) >= /* 'A' */
      65 && i.charCodeAt(2) <= /* 'Z' */
      90 ? t[i] = qr(a, o) : (i === "className" || i === "UNSAFE_className") && typeof a == "string" && typeof o == "string" ? t[i] = dr(a, o) : i === "id" && a && o ? t.id = uw(a, o) : t[i] = o !== void 0 ? o : a;
    }
  }
  return t;
}
function md(...e) {
  return e.length === 1 ? e[0] : (t) => {
    for (let r of e)
      typeof r == "function" ? r(t) : r != null && (r.current = t);
  };
}
const lw = /* @__PURE__ */ new Set([
  "id"
]), cw = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]), dw = /* @__PURE__ */ new Set([
  "href",
  "hrefLang",
  "target",
  "rel",
  "download",
  "ping",
  "referrerPolicy"
]), fw = /^(data-.*)$/;
function Oe(e, t = {}) {
  let { labelable: r, isLink: n, propNames: i } = t, a = {};
  for (const o in e) Object.prototype.hasOwnProperty.call(e, o) && (lw.has(o) || r && cw.has(o) || n && dw.has(o) || i != null && i.has(o) || fw.test(o)) && (a[o] = e[o]);
  return a;
}
function Wt(e) {
  if (hw()) e.focus({
    preventScroll: !0
  });
  else {
    let t = pw(e);
    e.focus(), mw(t);
  }
}
let eo = null;
function hw() {
  if (eo == null) {
    eo = !1;
    try {
      document.createElement("div").focus({
        get preventScroll() {
          return eo = !0, !0;
        }
      });
    } catch {
    }
  }
  return eo;
}
function pw(e) {
  let t = e.parentNode, r = [], n = document.scrollingElement || document.documentElement;
  for (; t instanceof HTMLElement && t !== n; )
    (t.offsetHeight < t.scrollHeight || t.offsetWidth < t.scrollWidth) && r.push({
      element: t,
      scrollTop: t.scrollTop,
      scrollLeft: t.scrollLeft
    }), t = t.parentNode;
  return n instanceof HTMLElement && r.push({
    element: n,
    scrollTop: n.scrollTop,
    scrollLeft: n.scrollLeft
  }), r;
}
function mw(e) {
  for (let { element: t, scrollTop: r, scrollLeft: n } of e)
    t.scrollTop = r, t.scrollLeft = n;
}
function Bs(e) {
  var t;
  return typeof window > "u" || window.navigator == null ? !1 : ((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.brands.some((r) => e.test(r.brand))) || e.test(window.navigator.userAgent);
}
function vd(e) {
  var t;
  return typeof window < "u" && window.navigator != null ? e.test(((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.platform) || window.navigator.platform) : !1;
}
function yr() {
  return vd(/^Mac/i);
}
function vw() {
  return vd(/^iPhone/i);
}
function Uv() {
  return vd(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  yr() && navigator.maxTouchPoints > 1;
}
function Fa() {
  return vw() || Uv();
}
function Eo() {
  return yr() || Fa();
}
function yd() {
  return Bs(/AppleWebKit/i) && !yw();
}
function yw() {
  return Bs(/Chrome/i);
}
function qv() {
  return Bs(/Android/i);
}
function gw() {
  return Bs(/Firefox/i);
}
const bw = /* @__PURE__ */ de({
  isNative: !0,
  open: xw,
  useHref: (e) => e
});
function Ms() {
  return le(bw);
}
function fn(e, t, r = !0) {
  var n, i;
  let { metaKey: a, ctrlKey: o, altKey: s, shiftKey: u } = t;
  gw() && (!((i = window.event) === null || i === void 0 || (n = i.type) === null || n === void 0) && n.startsWith("key")) && e.target === "_blank" && (yr() ? a = !0 : o = !0);
  let l = yd() && yr() && !Uv() ? new KeyboardEvent("keydown", {
    keyIdentifier: "Enter",
    metaKey: a,
    ctrlKey: o,
    altKey: s,
    shiftKey: u
  }) : new MouseEvent("click", {
    metaKey: a,
    ctrlKey: o,
    altKey: s,
    shiftKey: u,
    bubbles: !0,
    cancelable: !0
  });
  fn.isOpening = r, Wt(e), e.dispatchEvent(l), fn.isOpening = !1;
}
fn.isOpening = !1;
function $w(e, t) {
  if (e instanceof HTMLAnchorElement) t(e);
  else if (e.hasAttribute("data-href")) {
    let r = document.createElement("a");
    r.href = e.getAttribute("data-href"), e.hasAttribute("data-target") && (r.target = e.getAttribute("data-target")), e.hasAttribute("data-rel") && (r.rel = e.getAttribute("data-rel")), e.hasAttribute("data-download") && (r.download = e.getAttribute("data-download")), e.hasAttribute("data-ping") && (r.ping = e.getAttribute("data-ping")), e.hasAttribute("data-referrer-policy") && (r.referrerPolicy = e.getAttribute("data-referrer-policy")), e.appendChild(r), t(r), e.removeChild(r);
  }
}
function xw(e, t) {
  $w(e, (r) => fn(r, t));
}
function Dw(e) {
  let t = Ms();
  return {
    href: e != null && e.href ? t.useHref(e == null ? void 0 : e.href) : void 0,
    target: e == null ? void 0 : e.target,
    rel: e == null ? void 0 : e.rel,
    download: e == null ? void 0 : e.download,
    ping: e == null ? void 0 : e.ping,
    referrerPolicy: e == null ? void 0 : e.referrerPolicy
  };
}
let In = /* @__PURE__ */ new Map(), Vl = /* @__PURE__ */ new Set();
function yh() {
  if (typeof window > "u") return;
  function e(n) {
    return "propertyName" in n;
  }
  let t = (n) => {
    if (!e(n) || !n.target) return;
    let i = In.get(n.target);
    i || (i = /* @__PURE__ */ new Set(), In.set(n.target, i), n.target.addEventListener("transitioncancel", r, {
      once: !0
    })), i.add(n.propertyName);
  }, r = (n) => {
    if (!e(n) || !n.target) return;
    let i = In.get(n.target);
    if (i && (i.delete(n.propertyName), i.size === 0 && (n.target.removeEventListener("transitioncancel", r), In.delete(n.target)), In.size === 0)) {
      for (let a of Vl) a();
      Vl.clear();
    }
  };
  document.body.addEventListener("transitionrun", t), document.body.addEventListener("transitionend", r);
}
typeof document < "u" && (document.readyState !== "loading" ? yh() : document.addEventListener("DOMContentLoaded", yh));
function Hv(e) {
  requestAnimationFrame(() => {
    In.size === 0 ? e() : Vl.add(e);
  });
}
function gd() {
  let e = q(/* @__PURE__ */ new Map()), t = be((i, a, o, s) => {
    let u = s != null && s.once ? (...l) => {
      e.current.delete(o), o(...l);
    } : o;
    e.current.set(o, {
      type: a,
      eventTarget: i,
      fn: u,
      options: s
    }), i.addEventListener(a, o, s);
  }, []), r = be((i, a, o, s) => {
    var u;
    let l = ((u = e.current.get(o)) === null || u === void 0 ? void 0 : u.fn) || o;
    i.removeEventListener(a, l, s), e.current.delete(o);
  }, []), n = be(() => {
    e.current.forEach((i, a) => {
      r(i.eventTarget, i.type, a, i.options);
    });
  }, [
    r
  ]);
  return oe(() => n, [
    n
  ]), {
    addGlobalListener: t,
    removeGlobalListener: r,
    removeAllGlobalListeners: n
  };
}
function hn(e, t) {
  let { id: r, "aria-label": n, "aria-labelledby": i } = e;
  return r = St(r), i && n ? i = [
    .../* @__PURE__ */ new Set([
      r,
      ...i.trim().split(/\s+/)
    ])
  ].join(" ") : i && (i = i.trim().split(/\s+/).join(" ")), !n && !i && t && (n = t), {
    id: r,
    "aria-label": n,
    "aria-labelledby": i
  };
}
function Dn(e) {
  const t = q(null);
  return G(() => ({
    get current() {
      return t.current;
    },
    set current(r) {
      t.current = r, typeof e == "function" ? e(r) : e && (e.current = r);
    }
  }), [
    e
  ]);
}
function gh(e, t) {
  const r = q(!0), n = q(null);
  oe(() => (r.current = !0, () => {
    r.current = !1;
  }), []), oe(() => {
    r.current ? r.current = !1 : (!n.current || t.some((i, a) => !Object.is(i, n[a]))) && e(), n.current = t;
  }, t);
}
function Ew() {
  return typeof window.ResizeObserver < "u";
}
function Ns(e) {
  const { ref: t, onResize: r } = e;
  oe(() => {
    let n = t == null ? void 0 : t.current;
    if (n)
      if (Ew()) {
        const i = new window.ResizeObserver((a) => {
          a.length && r();
        });
        return i.observe(n), () => {
          n && i.unobserve(n);
        };
      } else
        return window.addEventListener("resize", r, !1), () => {
          window.removeEventListener("resize", r, !1);
        };
  }, [
    r,
    t
  ]);
}
function bd(e, t) {
  Re(() => {
    if (e && e.ref && t)
      return e.ref.current = t.current, () => {
        e.ref && (e.ref.current = null);
      };
  });
}
function ha(e, t) {
  let r = window.getComputedStyle(e), n = /(auto|scroll)/.test(r.overflow + r.overflowX + r.overflowY);
  return n && t && (n = e.scrollHeight !== e.clientHeight || e.scrollWidth !== e.clientWidth), n;
}
function Ls(e, t) {
  let r = e;
  for (ha(r, t) && (r = r.parentElement); r && !ha(r, t); ) r = r.parentElement;
  return r || document.scrollingElement || document.documentElement;
}
function ww(e, t) {
  const r = [];
  for (; e && e !== document.documentElement; )
    ha(e, t) && r.push(e), e = e.parentElement;
  return r;
}
let At = typeof document < "u" && window.visualViewport;
function Cw() {
  let e = Er(), [t, r] = ee(() => e ? {
    width: 0,
    height: 0
  } : bh());
  return oe(() => {
    let n = () => {
      r((i) => {
        let a = bh();
        return a.width === i.width && a.height === i.height ? i : a;
      });
    };
    return At ? At.addEventListener("resize", n) : window.addEventListener("resize", n), () => {
      At ? At.removeEventListener("resize", n) : window.removeEventListener("resize", n);
    };
  }, []), t;
}
function bh() {
  return {
    width: At && (At == null ? void 0 : At.width) || window.innerWidth,
    height: At && (At == null ? void 0 : At.height) || window.innerHeight
  };
}
let Sw = 0;
const Iu = /* @__PURE__ */ new Map();
function Vs(e) {
  let [t, r] = ee();
  return Re(() => {
    if (!e) return;
    let n = Iu.get(e);
    if (n)
      r(n.element.id);
    else {
      let i = `react-aria-description-${Sw++}`;
      r(i);
      let a = document.createElement("div");
      a.id = i, a.style.display = "none", a.textContent = e, document.body.appendChild(a), n = {
        refCount: 0,
        element: a
      }, Iu.set(e, n);
    }
    return n.refCount++, () => {
      n && --n.refCount === 0 && (n.element.remove(), Iu.delete(e));
    };
  }, [
    e
  ]), {
    "aria-describedby": e ? t : void 0
  };
}
function Gn(e, t, r, n) {
  let i = ut(r), a = r == null;
  oe(() => {
    if (a || !e.current) return;
    let o = e.current;
    return o.addEventListener(t, i, n), () => {
      o.removeEventListener(t, i, n);
    };
  }, [
    e,
    t,
    n,
    a,
    i
  ]);
}
function Wv(e, t) {
  let r = $h(e, t, "left"), n = $h(e, t, "top"), i = t.offsetWidth, a = t.offsetHeight, o = e.scrollLeft, s = e.scrollTop, { borderTopWidth: u, borderLeftWidth: l } = getComputedStyle(e), c = e.scrollLeft + parseInt(l, 10), d = e.scrollTop + parseInt(u, 10), f = c + e.clientWidth, h = d + e.clientHeight;
  r <= o ? o = r - parseInt(l, 10) : r + i > f && (o += r + i - f), n <= d ? s = n - parseInt(u, 10) : n + a > h && (s += n + a - h), e.scrollLeft = o, e.scrollTop = s;
}
function $h(e, t, r) {
  const n = r === "left" ? "offsetLeft" : "offsetTop";
  let i = 0;
  for (; t.offsetParent && (i += t[n], t.offsetParent !== e); ) {
    if (t.offsetParent.contains(e)) {
      i -= e[n];
      break;
    }
    t = t.offsetParent;
  }
  return i;
}
function Lo(e, t) {
  if (document.contains(e)) {
    let o = document.scrollingElement || document.documentElement;
    if (window.getComputedStyle(o).overflow === "hidden") {
      let u = ww(e);
      for (let l of u) Wv(l, e);
    } else {
      var r;
      let { left: u, top: l } = e.getBoundingClientRect();
      e == null || (r = e.scrollIntoView) === null || r === void 0 || r.call(e, {
        block: "nearest"
      });
      let { left: c, top: d } = e.getBoundingClientRect();
      if (Math.abs(u - c) > 1 || Math.abs(l - d) > 1) {
        var n, i, a;
        t == null || (i = t.containingElement) === null || i === void 0 || (n = i.scrollIntoView) === null || n === void 0 || n.call(i, {
          block: "center",
          inline: "center"
        }), (a = e.scrollIntoView) === null || a === void 0 || a.call(e, {
          block: "nearest"
        });
      }
    }
  }
}
function jl(e) {
  return e.mozInputSource === 0 && e.isTrusted ? !0 : qv() && e.pointerType ? e.type === "click" && e.buttons === 1 : e.detail === 0 && !e.pointerType;
}
function kw(e) {
  return !qv() && e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === "mouse";
}
function Qv(e, t) {
  let r = q(null);
  return e && r.current && t(e, r.current) && (e = r.current), r.current = e, e;
}
function $d(e, t, r) {
  let n = q(t), i = ut(() => {
    r && r(n.current);
  });
  oe(() => {
    var a;
    let o = e == null || (a = e.current) === null || a === void 0 ? void 0 : a.form;
    return o == null || o.addEventListener("reset", i), () => {
      o == null || o.removeEventListener("reset", i);
    };
  }, [
    e,
    i
  ]);
}
function tr(e, t, r) {
  let [n, i] = ee(e || t), a = q(e !== void 0), o = e !== void 0;
  oe(() => {
    let l = a.current;
    l !== o && console.warn(`WARN: A component changed from ${l ? "controlled" : "uncontrolled"} to ${o ? "controlled" : "uncontrolled"}.`), a.current = o;
  }, [
    o
  ]);
  let s = o ? e : n, u = be((l, ...c) => {
    let d = (f, ...h) => {
      r && (Object.is(s, f) || r(f, ...h)), o || (s = f);
    };
    typeof l == "function" ? (console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320"), i((h, ...p) => {
      let v = l(o ? s : h, ...p);
      return d(v, ...c), o ? h : v;
    })) : (o || i(l), d(l, ...c));
  }, [
    o,
    s,
    r
  ]);
  return [
    s,
    u
  ];
}
function zl(e, t = -1 / 0, r = 1 / 0) {
  return Math.min(Math.max(e, t), r);
}
let jn = "default", Kl = "", wo = /* @__PURE__ */ new WeakMap();
function xh(e) {
  if (Fa()) {
    if (jn === "default") {
      const t = Be(e);
      Kl = t.documentElement.style.webkitUserSelect, t.documentElement.style.webkitUserSelect = "none";
    }
    jn = "disabled";
  } else (e instanceof HTMLElement || e instanceof SVGElement) && (wo.set(e, e.style.userSelect), e.style.userSelect = "none");
}
function to(e) {
  if (Fa()) {
    if (jn !== "disabled") return;
    jn = "restoring", setTimeout(() => {
      Hv(() => {
        if (jn === "restoring") {
          const t = Be(e);
          t.documentElement.style.webkitUserSelect === "none" && (t.documentElement.style.webkitUserSelect = Kl || ""), Kl = "", jn = "default";
        }
      });
    }, 300);
  } else if ((e instanceof HTMLElement || e instanceof SVGElement) && e && wo.has(e)) {
    let t = wo.get(e);
    e.style.userSelect === "none" && (e.style.userSelect = t), e.getAttribute("style") === "" && e.removeAttribute("style"), wo.delete(e);
  }
}
const pa = A.createContext({
  register: () => {
  }
});
pa.displayName = "PressResponderContext";
function Pw(e, t) {
  return t.get ? t.get.call(e) : t.value;
}
function Gv(e, t, r) {
  if (!t.has(e)) throw new TypeError("attempted to " + r + " private field on non-instance");
  return t.get(e);
}
function Tw(e, t) {
  var r = Gv(e, t, "get");
  return Pw(e, r);
}
function Aw(e, t) {
  if (t.has(e))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function Oa(e, t, r) {
  Aw(e, t), t.set(e, r);
}
function _w(e, t, r) {
  if (t.set) t.set.call(e, r);
  else {
    if (!t.writable)
      throw new TypeError("attempted to set read only private field");
    t.value = r;
  }
}
function Dh(e, t, r) {
  var n = Gv(e, t, "set");
  return _w(e, n, r), r;
}
function Fw(e) {
  let t = le(pa);
  if (t) {
    let { register: r, ...n } = t;
    e = ye(n, e), r();
  }
  return bd(t, e.ref), e;
}
var ro = /* @__PURE__ */ new WeakMap();
class no {
  continuePropagation() {
    Dh(this, ro, !1);
  }
  get shouldStopPropagation() {
    return Tw(this, ro);
  }
  constructor(t, r, n) {
    Oa(this, ro, {
      writable: !0,
      value: void 0
    }), Dh(this, ro, !0), this.type = t, this.pointerType = r, this.target = n.currentTarget, this.shiftKey = n.shiftKey, this.metaKey = n.metaKey, this.ctrlKey = n.ctrlKey, this.altKey = n.altKey;
  }
}
const Eh = Symbol("linkClicked");
function Ia(e) {
  let {
    onPress: t,
    onPressChange: r,
    onPressStart: n,
    onPressEnd: i,
    onPressUp: a,
    isDisabled: o,
    isPressed: s,
    preventFocusOnPress: u,
    shouldCancelOnPointerExit: l,
    allowTextSelectionOnPress: c,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: d,
    ...f
  } = Fw(e), [h, p] = ee(!1), v = q({
    isPressed: !1,
    ignoreEmulatedMouseEvents: !1,
    ignoreClickAfterPress: !1,
    didFirePressStart: !1,
    isTriggeringEvent: !1,
    activePointerId: null,
    target: null,
    isOverTarget: !1,
    pointerType: null
  }), { addGlobalListener: g, removeAllGlobalListeners: $ } = gd(), m = ut((y, _) => {
    let w = v.current;
    if (o || w.didFirePressStart) return !1;
    let E = !0;
    if (w.isTriggeringEvent = !0, n) {
      let k = new no("pressstart", _, y);
      n(k), E = k.shouldStopPropagation;
    }
    return r && r(!0), w.isTriggeringEvent = !1, w.didFirePressStart = !0, p(!0), E;
  }), b = ut((y, _, w = !0) => {
    let E = v.current;
    if (!E.didFirePressStart) return !1;
    E.ignoreClickAfterPress = !0, E.didFirePressStart = !1, E.isTriggeringEvent = !0;
    let k = !0;
    if (i) {
      let C = new no("pressend", _, y);
      i(C), k = C.shouldStopPropagation;
    }
    if (r && r(!1), p(!1), t && w && !o) {
      let C = new no("press", _, y);
      t(C), k && (k = C.shouldStopPropagation);
    }
    return E.isTriggeringEvent = !1, k;
  }), D = ut((y, _) => {
    let w = v.current;
    if (o) return !1;
    if (a) {
      w.isTriggeringEvent = !0;
      let E = new no("pressup", _, y);
      return a(E), w.isTriggeringEvent = !1, E.shouldStopPropagation;
    }
    return !0;
  }), S = ut((y) => {
    let _ = v.current;
    _.isPressed && _.target && (_.isOverTarget && _.pointerType != null && b(nr(_.target, y), _.pointerType, !1), _.isPressed = !1, _.isOverTarget = !1, _.activePointerId = null, _.pointerType = null, $(), c || to(_.target));
  }), P = ut((y) => {
    l && S(y);
  }), B = G(() => {
    let y = v.current, _ = {
      onKeyDown(E) {
        if (Ru(E.nativeEvent, E.currentTarget) && E.currentTarget.contains(E.target)) {
          var k;
          Ch(E.target, E.key) && E.preventDefault();
          let C = !0;
          if (!y.isPressed && !E.repeat) {
            y.target = E.currentTarget, y.isPressed = !0, C = m(E, "keyboard");
            let T = E.currentTarget, L = (O) => {
              Ru(O, T) && !O.repeat && T.contains(O.target) && y.target && D(nr(y.target, O), "keyboard");
            };
            g(Be(E.currentTarget), "keyup", qr(L, w), !0);
          }
          C && E.stopPropagation(), E.metaKey && yr() && ((k = y.metaKeyEvents) === null || k === void 0 || k.set(E.key, E.nativeEvent));
        } else E.key === "Meta" && (y.metaKeyEvents = /* @__PURE__ */ new Map());
      },
      onClick(E) {
        if (!(E && !E.currentTarget.contains(E.target)) && E && E.button === 0 && !y.isTriggeringEvent && !fn.isOpening) {
          let k = !0;
          if (o && E.preventDefault(), !y.ignoreClickAfterPress && !y.ignoreEmulatedMouseEvents && !y.isPressed && (y.pointerType === "virtual" || jl(E.nativeEvent))) {
            !o && !u && Wt(E.currentTarget);
            let C = m(E, "virtual"), T = D(E, "virtual"), L = b(E, "virtual");
            k = C && T && L;
          }
          y.ignoreEmulatedMouseEvents = !1, y.ignoreClickAfterPress = !1, k && E.stopPropagation();
        }
      }
    }, w = (E) => {
      var k;
      if (y.isPressed && y.target && Ru(E, y.target)) {
        var C;
        Ch(E.target, E.key) && E.preventDefault();
        let L = E.target;
        b(nr(y.target, E), "keyboard", y.target.contains(L)), $(), E.key !== "Enter" && xd(y.target) && y.target.contains(L) && !E[Eh] && (E[Eh] = !0, fn(y.target, E, !1)), y.isPressed = !1, (C = y.metaKeyEvents) === null || C === void 0 || C.delete(E.key);
      } else if (E.key === "Meta" && (!((k = y.metaKeyEvents) === null || k === void 0) && k.size)) {
        var T;
        let L = y.metaKeyEvents;
        y.metaKeyEvents = void 0;
        for (let O of L.values()) (T = y.target) === null || T === void 0 || T.dispatchEvent(new KeyboardEvent("keyup", O));
      }
    };
    if (typeof PointerEvent < "u") {
      _.onPointerDown = (T) => {
        if (T.button !== 0 || !T.currentTarget.contains(T.target)) return;
        if (kw(T.nativeEvent)) {
          y.pointerType = "virtual";
          return;
        }
        Bu(T.currentTarget) && T.preventDefault(), y.pointerType = T.pointerType;
        let L = !0;
        y.isPressed || (y.isPressed = !0, y.isOverTarget = !0, y.activePointerId = T.pointerId, y.target = T.currentTarget, !o && !u && Wt(T.currentTarget), c || xh(y.target), L = m(T, y.pointerType), g(Be(T.currentTarget), "pointermove", E, !1), g(Be(T.currentTarget), "pointerup", k, !1), g(Be(T.currentTarget), "pointercancel", C, !1)), L && T.stopPropagation();
      }, _.onMouseDown = (T) => {
        T.currentTarget.contains(T.target) && T.button === 0 && (Bu(T.currentTarget) && T.preventDefault(), T.stopPropagation());
      }, _.onPointerUp = (T) => {
        !T.currentTarget.contains(T.target) || y.pointerType === "virtual" || T.button === 0 && Pn(T, T.currentTarget) && D(T, y.pointerType || T.pointerType);
      };
      let E = (T) => {
        T.pointerId === y.activePointerId && (y.target && Pn(T, y.target) ? !y.isOverTarget && y.pointerType != null && (y.isOverTarget = !0, m(nr(y.target, T), y.pointerType)) : y.target && y.isOverTarget && y.pointerType != null && (y.isOverTarget = !1, b(nr(y.target, T), y.pointerType, !1), P(T)));
      }, k = (T) => {
        T.pointerId === y.activePointerId && y.isPressed && T.button === 0 && y.target && (Pn(T, y.target) && y.pointerType != null ? b(nr(y.target, T), y.pointerType) : y.isOverTarget && y.pointerType != null && b(nr(y.target, T), y.pointerType, !1), y.isPressed = !1, y.isOverTarget = !1, y.activePointerId = null, y.pointerType = null, $(), c || to(y.target));
      }, C = (T) => {
        S(T);
      };
      _.onDragStart = (T) => {
        T.currentTarget.contains(T.target) && S(T);
      };
    } else {
      _.onMouseDown = (C) => {
        if (C.button !== 0 || !C.currentTarget.contains(C.target)) return;
        if (Bu(C.currentTarget) && C.preventDefault(), y.ignoreEmulatedMouseEvents) {
          C.stopPropagation();
          return;
        }
        y.isPressed = !0, y.isOverTarget = !0, y.target = C.currentTarget, y.pointerType = jl(C.nativeEvent) ? "virtual" : "mouse", !o && !u && Wt(C.currentTarget), m(C, y.pointerType) && C.stopPropagation(), g(Be(C.currentTarget), "mouseup", E, !1);
      }, _.onMouseEnter = (C) => {
        if (!C.currentTarget.contains(C.target)) return;
        let T = !0;
        y.isPressed && !y.ignoreEmulatedMouseEvents && y.pointerType != null && (y.isOverTarget = !0, T = m(C, y.pointerType)), T && C.stopPropagation();
      }, _.onMouseLeave = (C) => {
        if (!C.currentTarget.contains(C.target)) return;
        let T = !0;
        y.isPressed && !y.ignoreEmulatedMouseEvents && y.pointerType != null && (y.isOverTarget = !1, T = b(C, y.pointerType, !1), P(C)), T && C.stopPropagation();
      }, _.onMouseUp = (C) => {
        C.currentTarget.contains(C.target) && !y.ignoreEmulatedMouseEvents && C.button === 0 && D(C, y.pointerType || "mouse");
      };
      let E = (C) => {
        if (C.button === 0) {
          if (y.isPressed = !1, $(), y.ignoreEmulatedMouseEvents) {
            y.ignoreEmulatedMouseEvents = !1;
            return;
          }
          y.target && Pn(C, y.target) && y.pointerType != null ? b(nr(y.target, C), y.pointerType) : y.target && y.isOverTarget && y.pointerType != null && b(nr(y.target, C), y.pointerType, !1), y.isOverTarget = !1;
        }
      };
      _.onTouchStart = (C) => {
        if (!C.currentTarget.contains(C.target)) return;
        let T = Ow(C.nativeEvent);
        if (!T) return;
        y.activePointerId = T.identifier, y.ignoreEmulatedMouseEvents = !0, y.isOverTarget = !0, y.isPressed = !0, y.target = C.currentTarget, y.pointerType = "touch", !o && !u && Wt(C.currentTarget), c || xh(y.target), m(C, y.pointerType) && C.stopPropagation(), g(Ot(C.currentTarget), "scroll", k, !0);
      }, _.onTouchMove = (C) => {
        if (!C.currentTarget.contains(C.target)) return;
        if (!y.isPressed) {
          C.stopPropagation();
          return;
        }
        let T = wh(C.nativeEvent, y.activePointerId), L = !0;
        T && Pn(T, C.currentTarget) ? !y.isOverTarget && y.pointerType != null && (y.isOverTarget = !0, L = m(C, y.pointerType)) : y.isOverTarget && y.pointerType != null && (y.isOverTarget = !1, L = b(C, y.pointerType, !1), P(C)), L && C.stopPropagation();
      }, _.onTouchEnd = (C) => {
        if (!C.currentTarget.contains(C.target)) return;
        if (!y.isPressed) {
          C.stopPropagation();
          return;
        }
        let T = wh(C.nativeEvent, y.activePointerId), L = !0;
        T && Pn(T, C.currentTarget) && y.pointerType != null ? (D(C, y.pointerType), L = b(C, y.pointerType)) : y.isOverTarget && y.pointerType != null && (L = b(C, y.pointerType, !1)), L && C.stopPropagation(), y.isPressed = !1, y.activePointerId = null, y.isOverTarget = !1, y.ignoreEmulatedMouseEvents = !0, y.target && !c && to(y.target), $();
      }, _.onTouchCancel = (C) => {
        C.currentTarget.contains(C.target) && (C.stopPropagation(), y.isPressed && S(C));
      };
      let k = (C) => {
        y.isPressed && C.target.contains(y.target) && S({
          currentTarget: y.target,
          shiftKey: !1,
          ctrlKey: !1,
          metaKey: !1,
          altKey: !1
        });
      };
      _.onDragStart = (C) => {
        C.currentTarget.contains(C.target) && S(C);
      };
    }
    return _;
  }, [
    g,
    o,
    u,
    $,
    c,
    S,
    P,
    b,
    m,
    D
  ]);
  return oe(() => () => {
    var y;
    c || to((y = v.current.target) !== null && y !== void 0 ? y : void 0);
  }, [
    c
  ]), {
    isPressed: s || h,
    pressProps: ye(f, B)
  };
}
function xd(e) {
  return e.tagName === "A" && e.hasAttribute("href");
}
function Ru(e, t) {
  const { key: r, code: n } = e, i = t, a = i.getAttribute("role");
  return (r === "Enter" || r === " " || r === "Spacebar" || n === "Space") && !(i instanceof Ot(i).HTMLInputElement && !Zv(i, r) || i instanceof Ot(i).HTMLTextAreaElement || i.isContentEditable) && // Links should only trigger with Enter key
  !((a === "link" || !a && xd(i)) && r !== "Enter");
}
function Ow(e) {
  const { targetTouches: t } = e;
  return t.length > 0 ? t[0] : null;
}
function wh(e, t) {
  const r = e.changedTouches;
  for (let n = 0; n < r.length; n++) {
    const i = r[n];
    if (i.identifier === t) return i;
  }
  return null;
}
function nr(e, t) {
  return {
    currentTarget: e,
    shiftKey: t.shiftKey,
    ctrlKey: t.ctrlKey,
    metaKey: t.metaKey,
    altKey: t.altKey
  };
}
function Iw(e) {
  let t = 0, r = 0;
  return e.width !== void 0 ? t = e.width / 2 : e.radiusX !== void 0 && (t = e.radiusX), e.height !== void 0 ? r = e.height / 2 : e.radiusY !== void 0 && (r = e.radiusY), {
    top: e.clientY - r,
    right: e.clientX + t,
    bottom: e.clientY + r,
    left: e.clientX - t
  };
}
function Rw(e, t) {
  return !(e.left > t.right || t.left > e.right || e.top > t.bottom || t.top > e.bottom);
}
function Pn(e, t) {
  let r = t.getBoundingClientRect(), n = Iw(e);
  return Rw(r, n);
}
function Bu(e) {
  return !(e instanceof HTMLElement) || !e.hasAttribute("draggable");
}
function Ch(e, t) {
  return e instanceof HTMLInputElement ? !Zv(e, t) : e instanceof HTMLButtonElement ? e.type !== "submit" && e.type !== "reset" : !xd(e);
}
const Bw = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function Zv(e, t) {
  return e.type === "checkbox" || e.type === "radio" ? t === " " : Bw.has(e.type);
}
const Mw = /* @__PURE__ */ A.forwardRef(({ children: e, ...t }, r) => {
  let n = q(!1), i = le(pa);
  r = Dn(r || (i == null ? void 0 : i.ref));
  let a = ye(i || {}, {
    ...t,
    ref: r,
    register() {
      n.current = !0, i && i.register();
    }
  });
  return bd(i, r), oe(() => {
    n.current || (console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component."), n.current = !0);
  }, []), /* @__PURE__ */ A.createElement(pa.Provider, {
    value: a
  }, e);
});
function Nw({ children: e }) {
  let t = G(() => ({
    register: () => {
    }
  }), []);
  return /* @__PURE__ */ A.createElement(pa.Provider, {
    value: t
  }, e);
}
class Lw {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = !0, this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation(), this.isPropagationStopped = () => !0;
  }
  isPropagationStopped() {
    return !1;
  }
  persist() {
  }
  constructor(t, r) {
    this.nativeEvent = r, this.target = r.target, this.currentTarget = r.currentTarget, this.relatedTarget = r.relatedTarget, this.bubbles = r.bubbles, this.cancelable = r.cancelable, this.defaultPrevented = r.defaultPrevented, this.eventPhase = r.eventPhase, this.isTrusted = r.isTrusted, this.timeStamp = r.timeStamp, this.type = t;
  }
}
function Yv(e) {
  let t = q({
    isFocused: !1,
    observer: null
  });
  Re(() => {
    const n = t.current;
    return () => {
      n.observer && (n.observer.disconnect(), n.observer = null);
    };
  }, []);
  let r = ut((n) => {
    e == null || e(n);
  });
  return be((n) => {
    if (n.target instanceof HTMLButtonElement || n.target instanceof HTMLInputElement || n.target instanceof HTMLTextAreaElement || n.target instanceof HTMLSelectElement) {
      t.current.isFocused = !0;
      let i = n.target, a = (o) => {
        t.current.isFocused = !1, i.disabled && r(new Lw("blur", o)), t.current.observer && (t.current.observer.disconnect(), t.current.observer = null);
      };
      i.addEventListener("focusout", a, {
        once: !0
      }), t.current.observer = new MutationObserver(() => {
        if (t.current.isFocused && i.disabled) {
          var o;
          (o = t.current.observer) === null || o === void 0 || o.disconnect();
          let s = i === document.activeElement ? null : document.activeElement;
          i.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: s
          })), i.dispatchEvent(new FocusEvent("focusout", {
            bubbles: !0,
            relatedTarget: s
          }));
        }
      }), t.current.observer.observe(i, {
        attributes: !0,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    r
  ]);
}
function Jv(e) {
  let { isDisabled: t, onFocus: r, onBlur: n, onFocusChange: i } = e;
  const a = be((u) => {
    if (u.target === u.currentTarget)
      return n && n(u), i && i(!1), !0;
  }, [
    n,
    i
  ]), o = Yv(a), s = be((u) => {
    const l = Be(u.target);
    u.target === u.currentTarget && l.activeElement === u.target && (r && r(u), i && i(!0), o(u));
  }, [
    i,
    r,
    o
  ]);
  return {
    focusProps: {
      onFocus: !t && (r || i || n) ? s : void 0,
      onBlur: !t && (n || i) ? a : void 0
    }
  };
}
let gr = null, ma = /* @__PURE__ */ new Set(), Yi = /* @__PURE__ */ new Map(), pn = !1, Ul = !1;
const Vw = {
  Tab: !0,
  Escape: !0
};
function js(e, t) {
  for (let r of ma) r(e, t);
}
function jw(e) {
  return !(e.metaKey || !yr() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function Vo(e) {
  pn = !0, jw(e) && (gr = "keyboard", js("keyboard", e));
}
function Ft(e) {
  gr = "pointer", (e.type === "mousedown" || e.type === "pointerdown") && (pn = !0, js("pointer", e));
}
function Xv(e) {
  jl(e) && (pn = !0, gr = "virtual");
}
function ey(e) {
  e.target === window || e.target === document || (!pn && !Ul && (gr = "virtual", js("virtual", e)), pn = !1, Ul = !1);
}
function ty() {
  pn = !1, Ul = !0;
}
function jo(e) {
  if (typeof window > "u" || Yi.get(Ot(e))) return;
  const t = Ot(e), r = Be(e);
  let n = t.HTMLElement.prototype.focus;
  t.HTMLElement.prototype.focus = function() {
    pn = !0, n.apply(this, arguments);
  }, r.addEventListener("keydown", Vo, !0), r.addEventListener("keyup", Vo, !0), r.addEventListener("click", Xv, !0), t.addEventListener("focus", ey, !0), t.addEventListener("blur", ty, !1), typeof PointerEvent < "u" ? (r.addEventListener("pointerdown", Ft, !0), r.addEventListener("pointermove", Ft, !0), r.addEventListener("pointerup", Ft, !0)) : (r.addEventListener("mousedown", Ft, !0), r.addEventListener("mousemove", Ft, !0), r.addEventListener("mouseup", Ft, !0)), t.addEventListener("beforeunload", () => {
    ry(e);
  }, {
    once: !0
  }), Yi.set(t, {
    focus: n
  });
}
const ry = (e, t) => {
  const r = Ot(e), n = Be(e);
  t && n.removeEventListener("DOMContentLoaded", t), Yi.has(r) && (r.HTMLElement.prototype.focus = Yi.get(r).focus, n.removeEventListener("keydown", Vo, !0), n.removeEventListener("keyup", Vo, !0), n.removeEventListener("click", Xv, !0), r.removeEventListener("focus", ey, !0), r.removeEventListener("blur", ty, !1), typeof PointerEvent < "u" ? (n.removeEventListener("pointerdown", Ft, !0), n.removeEventListener("pointermove", Ft, !0), n.removeEventListener("pointerup", Ft, !0)) : (n.removeEventListener("mousedown", Ft, !0), n.removeEventListener("mousemove", Ft, !0), n.removeEventListener("mouseup", Ft, !0)), Yi.delete(r));
};
function zw(e) {
  const t = Be(e);
  let r;
  return t.readyState !== "loading" ? jo(e) : (r = () => {
    jo(e);
  }, t.addEventListener("DOMContentLoaded", r)), () => ry(e, r);
}
typeof document < "u" && zw();
function zo() {
  return gr !== "pointer";
}
function Ko() {
  return gr;
}
function ny(e) {
  gr = e, js(e, null);
}
function Kw() {
  jo();
  let [e, t] = ee(gr);
  return oe(() => {
    let r = () => {
      t(gr);
    };
    return ma.add(r), () => {
      ma.delete(r);
    };
  }, []), Er() ? null : e;
}
const Uw = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function qw(e, t, r) {
  var n;
  const i = typeof window < "u" ? Ot(r == null ? void 0 : r.target).HTMLInputElement : HTMLInputElement, a = typeof window < "u" ? Ot(r == null ? void 0 : r.target).HTMLTextAreaElement : HTMLTextAreaElement, o = typeof window < "u" ? Ot(r == null ? void 0 : r.target).HTMLElement : HTMLElement, s = typeof window < "u" ? Ot(r == null ? void 0 : r.target).KeyboardEvent : KeyboardEvent;
  return e = e || (r == null ? void 0 : r.target) instanceof i && !Uw.has(r == null || (n = r.target) === null || n === void 0 ? void 0 : n.type) || (r == null ? void 0 : r.target) instanceof a || (r == null ? void 0 : r.target) instanceof o && (r == null ? void 0 : r.target.isContentEditable), !(e && t === "keyboard" && r instanceof s && !Vw[r.key]);
}
function Hw(e, t, r) {
  jo(), oe(() => {
    let n = (i, a) => {
      qw(!!(r != null && r.isTextInput), i, a) && e(zo());
    };
    return ma.add(n), () => {
      ma.delete(n);
    };
  }, t);
}
function yi(e) {
  let { isDisabled: t, onBlurWithin: r, onFocusWithin: n, onFocusWithinChange: i } = e, a = q({
    isFocusWithin: !1
  }), o = be((l) => {
    a.current.isFocusWithin && !l.currentTarget.contains(l.relatedTarget) && (a.current.isFocusWithin = !1, r && r(l), i && i(!1));
  }, [
    r,
    i,
    a
  ]), s = Yv(o), u = be((l) => {
    !a.current.isFocusWithin && document.activeElement === l.target && (n && n(l), i && i(!0), a.current.isFocusWithin = !0, s(l));
  }, [
    n,
    i,
    s
  ]);
  return t ? {
    focusWithinProps: {
      // These should not have been null, that would conflict in mergeProps
      onFocus: void 0,
      onBlur: void 0
    }
  } : {
    focusWithinProps: {
      onFocus: u,
      onBlur: o
    }
  };
}
let Uo = !1, Mu = 0;
function ql() {
  Uo = !0, setTimeout(() => {
    Uo = !1;
  }, 50);
}
function Sh(e) {
  e.pointerType === "touch" && ql();
}
function Ww() {
  if (!(typeof document > "u"))
    return typeof PointerEvent < "u" ? document.addEventListener("pointerup", Sh) : document.addEventListener("touchend", ql), Mu++, () => {
      Mu--, !(Mu > 0) && (typeof PointerEvent < "u" ? document.removeEventListener("pointerup", Sh) : document.removeEventListener("touchend", ql));
    };
}
function En(e) {
  let { onHoverStart: t, onHoverChange: r, onHoverEnd: n, isDisabled: i } = e, [a, o] = ee(!1), s = q({
    isHovered: !1,
    ignoreEmulatedMouseEvents: !1,
    pointerType: "",
    target: null
  }).current;
  oe(Ww, []);
  let { hoverProps: u, triggerHoverEnd: l } = G(() => {
    let c = (h, p) => {
      if (s.pointerType = p, i || p === "touch" || s.isHovered || !h.currentTarget.contains(h.target)) return;
      s.isHovered = !0;
      let v = h.currentTarget;
      s.target = v, t && t({
        type: "hoverstart",
        target: v,
        pointerType: p
      }), r && r(!0), o(!0);
    }, d = (h, p) => {
      if (s.pointerType = "", s.target = null, p === "touch" || !s.isHovered) return;
      s.isHovered = !1;
      let v = h.currentTarget;
      n && n({
        type: "hoverend",
        target: v,
        pointerType: p
      }), r && r(!1), o(!1);
    }, f = {};
    return typeof PointerEvent < "u" ? (f.onPointerEnter = (h) => {
      Uo && h.pointerType === "mouse" || c(h, h.pointerType);
    }, f.onPointerLeave = (h) => {
      !i && h.currentTarget.contains(h.target) && d(h, h.pointerType);
    }) : (f.onTouchStart = () => {
      s.ignoreEmulatedMouseEvents = !0;
    }, f.onMouseEnter = (h) => {
      !s.ignoreEmulatedMouseEvents && !Uo && c(h, "mouse"), s.ignoreEmulatedMouseEvents = !1;
    }, f.onMouseLeave = (h) => {
      !i && h.currentTarget.contains(h.target) && d(h, "mouse");
    }), {
      hoverProps: f,
      triggerHoverEnd: d
    };
  }, [
    t,
    r,
    n,
    i,
    s
  ]);
  return oe(() => {
    i && l({
      currentTarget: s.target
    }, s.pointerType);
  }, [
    i
  ]), {
    hoverProps: u,
    isHovered: a
  };
}
function Qw(e) {
  let { ref: t, onInteractOutside: r, isDisabled: n, onInteractOutsideStart: i } = e, a = q({
    isPointerDown: !1,
    ignoreEmulatedMouseEvents: !1
  }), o = ut((u) => {
    r && io(u, t) && (i && i(u), a.current.isPointerDown = !0);
  }), s = ut((u) => {
    r && r(u);
  });
  oe(() => {
    let u = a.current;
    if (n) return;
    const l = t.current, c = Be(l);
    if (typeof PointerEvent < "u") {
      let d = (f) => {
        u.isPointerDown && io(f, t) && s(f), u.isPointerDown = !1;
      };
      return c.addEventListener("pointerdown", o, !0), c.addEventListener("pointerup", d, !0), () => {
        c.removeEventListener("pointerdown", o, !0), c.removeEventListener("pointerup", d, !0);
      };
    } else {
      let d = (h) => {
        u.ignoreEmulatedMouseEvents ? u.ignoreEmulatedMouseEvents = !1 : u.isPointerDown && io(h, t) && s(h), u.isPointerDown = !1;
      }, f = (h) => {
        u.ignoreEmulatedMouseEvents = !0, u.isPointerDown && io(h, t) && s(h), u.isPointerDown = !1;
      };
      return c.addEventListener("mousedown", o, !0), c.addEventListener("mouseup", d, !0), c.addEventListener("touchstart", o, !0), c.addEventListener("touchend", f, !0), () => {
        c.removeEventListener("mousedown", o, !0), c.removeEventListener("mouseup", d, !0), c.removeEventListener("touchstart", o, !0), c.removeEventListener("touchend", f, !0);
      };
    }
  }, [
    t,
    n,
    o,
    s
  ]);
}
function io(e, t) {
  if (e.button > 0) return !1;
  if (e.target) {
    const r = e.target.ownerDocument;
    if (!r || !r.documentElement.contains(e.target) || e.target.closest("[data-react-aria-top-layer]")) return !1;
  }
  return t.current && !t.current.contains(e.target);
}
function kh(e) {
  if (!e) return;
  let t = !0;
  return (r) => {
    let n = {
      ...r,
      preventDefault() {
        r.preventDefault();
      },
      isDefaultPrevented() {
        return r.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        t = !1;
      }
    };
    e(n), t && r.stopPropagation();
  };
}
function Gw(e) {
  return {
    keyboardProps: e.isDisabled ? {} : {
      onKeyDown: kh(e.onKeyDown),
      onKeyUp: kh(e.onKeyUp)
    }
  };
}
const Zw = 500;
function iy(e) {
  let { isDisabled: t, onLongPressStart: r, onLongPressEnd: n, onLongPress: i, threshold: a = Zw, accessibilityDescription: o } = e;
  const s = q();
  let { addGlobalListener: u, removeGlobalListener: l } = gd(), { pressProps: c } = Ia({
    isDisabled: t,
    onPressStart(f) {
      if (f.continuePropagation(), (f.pointerType === "mouse" || f.pointerType === "touch") && (r && r({
        ...f,
        type: "longpressstart"
      }), s.current = setTimeout(() => {
        f.target.dispatchEvent(new PointerEvent("pointercancel", {
          bubbles: !0
        })), i && i({
          ...f,
          type: "longpress"
        }), s.current = void 0;
      }, a), f.pointerType === "touch")) {
        let h = (p) => {
          p.preventDefault();
        };
        u(f.target, "contextmenu", h, {
          once: !0
        }), u(window, "pointerup", () => {
          setTimeout(() => {
            l(f.target, "contextmenu", h);
          }, 30);
        }, {
          once: !0
        });
      }
    },
    onPressEnd(f) {
      s.current && clearTimeout(s.current), n && (f.pointerType === "mouse" || f.pointerType === "touch") && n({
        ...f,
        type: "longpressend"
      });
    }
  }), d = Vs(i && !t ? o : void 0);
  return {
    longPressProps: ye(c, d)
  };
}
function mn(e) {
  const t = Be(e);
  if (Ko() === "virtual") {
    let r = t.activeElement;
    Hv(() => {
      t.activeElement === r && e.isConnected && Wt(e);
    });
  } else Wt(e);
}
function Yw(e) {
  const t = Ot(e);
  if (!(e instanceof t.HTMLElement) && !(e instanceof t.SVGElement)) return !1;
  let { display: r, visibility: n } = e.style, i = r !== "none" && n !== "hidden" && n !== "collapse";
  if (i) {
    const { getComputedStyle: a } = e.ownerDocument.defaultView;
    let { display: o, visibility: s } = a(e);
    i = o !== "none" && s !== "hidden" && s !== "collapse";
  }
  return i;
}
function Jw(e, t) {
  return !e.hasAttribute("hidden") && // Ignore HiddenSelect when tree walking.
  !e.hasAttribute("data-react-aria-prevent-focus") && (e.nodeName === "DETAILS" && t && t.nodeName !== "SUMMARY" ? e.hasAttribute("open") : !0);
}
function ay(e, t) {
  return e.nodeName !== "#comment" && Yw(e) && Jw(e, t) && (!e.parentElement || ay(e.parentElement, e));
}
const Ph = /* @__PURE__ */ A.createContext(null);
let Me = null;
function oy(e) {
  let { children: t, contain: r, restoreFocus: n, autoFocus: i } = e, a = q(null), o = q(null), s = q([]), { parentNode: u } = le(Ph) || {}, l = G(() => new Hl({
    scopeRef: s
  }), [
    s
  ]);
  Re(() => {
    let f = u || Xe.root;
    if (Xe.getTreeNode(f.scopeRef) && Me && !Ho(Me, f.scopeRef)) {
      let h = Xe.getTreeNode(Me);
      h && (f = h);
    }
    f.addChild(l), Xe.addNode(l);
  }, [
    l,
    u
  ]), Re(() => {
    let f = Xe.getTreeNode(s);
    f && (f.contain = !!r);
  }, [
    r
  ]), Re(() => {
    var f;
    let h = (f = a.current) === null || f === void 0 ? void 0 : f.nextSibling, p = [];
    for (; h && h !== o.current; )
      p.push(h), h = h.nextSibling;
    s.current = p;
  }, [
    t
  ]), a6(s, n, r), r6(s, r), s6(s, n, r), i6(s, i), oe(() => {
    const f = Be(s.current ? s.current[0] : void 0).activeElement;
    let h = null;
    if (lt(f, s.current)) {
      for (let p of Xe.traverse()) p.scopeRef && lt(f, p.scopeRef.current) && (h = p);
      h === Xe.getTreeNode(s) && (Me = h.scopeRef);
    }
  }, [
    s
  ]), Re(() => () => {
    var f, h, p;
    let v = (p = (h = Xe.getTreeNode(s)) === null || h === void 0 || (f = h.parent) === null || f === void 0 ? void 0 : f.scopeRef) !== null && p !== void 0 ? p : null;
    (s === Me || Ho(s, Me)) && (!v || Xe.getTreeNode(v)) && (Me = v), Xe.removeTreeNode(s);
  }, [
    s
  ]);
  let c = G(() => Xw(s), []), d = G(() => ({
    focusManager: c,
    parentNode: l
  }), [
    l,
    c
  ]);
  return /* @__PURE__ */ A.createElement(Ph.Provider, {
    value: d
  }, /* @__PURE__ */ A.createElement("span", {
    "data-focus-scope-start": !0,
    hidden: !0,
    ref: a
  }), t, /* @__PURE__ */ A.createElement("span", {
    "data-focus-scope-end": !0,
    hidden: !0,
    ref: o
  }));
}
function Xw(e) {
  return {
    focusNext(t = {}) {
      let r = e.current, { from: n, tabbable: i, wrap: a, accept: o } = t, s = n || Be(r[0]).activeElement, u = r[0].previousElementSibling, l = nn(r), c = gt(l, {
        tabbable: i,
        accept: o
      }, r);
      c.currentNode = lt(s, r) ? s : u;
      let d = c.nextNode();
      return !d && a && (c.currentNode = u, d = c.nextNode()), d && yt(d, !0), d;
    },
    focusPrevious(t = {}) {
      let r = e.current, { from: n, tabbable: i, wrap: a, accept: o } = t, s = n || Be(r[0]).activeElement, u = r[r.length - 1].nextElementSibling, l = nn(r), c = gt(l, {
        tabbable: i,
        accept: o
      }, r);
      c.currentNode = lt(s, r) ? s : u;
      let d = c.previousNode();
      return !d && a && (c.currentNode = u, d = c.previousNode()), d && yt(d, !0), d;
    },
    focusFirst(t = {}) {
      let r = e.current, { tabbable: n, accept: i } = t, a = nn(r), o = gt(a, {
        tabbable: n,
        accept: i
      }, r);
      o.currentNode = r[0].previousElementSibling;
      let s = o.nextNode();
      return s && yt(s, !0), s;
    },
    focusLast(t = {}) {
      let r = e.current, { tabbable: n, accept: i } = t, a = nn(r), o = gt(a, {
        tabbable: n,
        accept: i
      }, r);
      o.currentNode = r[r.length - 1].nextElementSibling;
      let s = o.previousNode();
      return s && yt(s, !0), s;
    }
  };
}
const Dd = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
], e6 = Dd.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
Dd.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
const t6 = Dd.join(':not([hidden]):not([tabindex="-1"]),');
function nn(e) {
  return e[0].parentElement;
}
function Li(e) {
  let t = Xe.getTreeNode(Me);
  for (; t && t.scopeRef !== e; ) {
    if (t.contain) return !1;
    t = t.parent;
  }
  return !0;
}
function r6(e, t) {
  let r = q(), n = q();
  Re(() => {
    let i = e.current;
    if (!t) {
      n.current && (cancelAnimationFrame(n.current), n.current = void 0);
      return;
    }
    const a = Be(i ? i[0] : void 0);
    let o = (l) => {
      if (l.key !== "Tab" || l.altKey || l.ctrlKey || l.metaKey || !Li(e) || l.isComposing) return;
      let c = a.activeElement, d = e.current;
      if (!d || !lt(c, d)) return;
      let f = nn(d), h = gt(f, {
        tabbable: !0
      }, d);
      if (!c) return;
      h.currentNode = c;
      let p = l.shiftKey ? h.previousNode() : h.nextNode();
      p || (h.currentNode = l.shiftKey ? d[d.length - 1].nextElementSibling : d[0].previousElementSibling, p = l.shiftKey ? h.previousNode() : h.nextNode()), l.preventDefault(), p && yt(p, !0);
    }, s = (l) => {
      (!Me || Ho(Me, e)) && lt(l.target, e.current) ? (Me = e, r.current = l.target) : Li(e) && !qo(l.target, e) ? r.current ? r.current.focus() : Me && Me.current && Wo(Me.current) : Li(e) && (r.current = l.target);
    }, u = (l) => {
      n.current && cancelAnimationFrame(n.current), n.current = requestAnimationFrame(() => {
        if (a.activeElement && Li(e) && !qo(a.activeElement, e))
          if (Me = e, a.body.contains(l.target)) {
            var c;
            r.current = l.target, (c = r.current) === null || c === void 0 || c.focus();
          } else Me.current && Wo(Me.current);
      });
    };
    return a.addEventListener("keydown", o, !1), a.addEventListener("focusin", s, !1), i == null || i.forEach((l) => l.addEventListener("focusin", s, !1)), i == null || i.forEach((l) => l.addEventListener("focusout", u, !1)), () => {
      a.removeEventListener("keydown", o, !1), a.removeEventListener("focusin", s, !1), i == null || i.forEach((l) => l.removeEventListener("focusin", s, !1)), i == null || i.forEach((l) => l.removeEventListener("focusout", u, !1));
    };
  }, [
    e,
    t
  ]), Re(() => () => {
    n.current && cancelAnimationFrame(n.current);
  }, [
    n
  ]);
}
function sy(e) {
  return qo(e);
}
function lt(e, t) {
  return !e || !t ? !1 : t.some((r) => r.contains(e));
}
function qo(e, t = null) {
  if (e instanceof Element && e.closest("[data-react-aria-top-layer]")) return !0;
  for (let { scopeRef: r } of Xe.traverse(Xe.getTreeNode(t)))
    if (r && lt(e, r.current)) return !0;
  return !1;
}
function n6(e) {
  return qo(e, Me);
}
function Ho(e, t) {
  var r;
  let n = (r = Xe.getTreeNode(t)) === null || r === void 0 ? void 0 : r.parent;
  for (; n; ) {
    if (n.scopeRef === e) return !0;
    n = n.parent;
  }
  return !1;
}
function yt(e, t = !1) {
  if (e != null && !t) try {
    mn(e);
  } catch {
  }
  else if (e != null) try {
    e.focus();
  } catch {
  }
}
function Wo(e, t = !0) {
  let r = e[0].previousElementSibling, n = nn(e), i = gt(n, {
    tabbable: t
  }, e);
  i.currentNode = r;
  let a = i.nextNode();
  t && !a && (n = nn(e), i = gt(n, {
    tabbable: !1
  }, e), i.currentNode = r, a = i.nextNode()), yt(a);
}
function i6(e, t) {
  const r = A.useRef(t);
  oe(() => {
    if (r.current) {
      Me = e;
      const n = Be(e.current ? e.current[0] : void 0);
      !lt(n.activeElement, Me.current) && e.current && Wo(e.current);
    }
    r.current = !1;
  }, [
    e
  ]);
}
function a6(e, t, r) {
  Re(() => {
    if (t || r) return;
    let n = e.current;
    const i = Be(n ? n[0] : void 0);
    let a = (o) => {
      let s = o.target;
      lt(s, e.current) ? Me = e : sy(s) || (Me = null);
    };
    return i.addEventListener("focusin", a, !1), n == null || n.forEach((o) => o.addEventListener("focusin", a, !1)), () => {
      i.removeEventListener("focusin", a, !1), n == null || n.forEach((o) => o.removeEventListener("focusin", a, !1));
    };
  }, [
    e,
    t,
    r
  ]);
}
function o6(e) {
  let t = Xe.getTreeNode(Me);
  for (; t && t.scopeRef !== e; ) {
    if (t.nodeToRestore) return !1;
    t = t.parent;
  }
  return (t == null ? void 0 : t.scopeRef) === e;
}
function s6(e, t, r) {
  const n = q(typeof document < "u" ? Be(e.current ? e.current[0] : void 0).activeElement : null);
  Re(() => {
    let i = e.current;
    const a = Be(i ? i[0] : void 0);
    if (!t || r) return;
    let o = () => {
      (!Me || Ho(Me, e)) && lt(a.activeElement, e.current) && (Me = e);
    };
    return a.addEventListener("focusin", o, !1), i == null || i.forEach((s) => s.addEventListener("focusin", o, !1)), () => {
      a.removeEventListener("focusin", o, !1), i == null || i.forEach((s) => s.removeEventListener("focusin", o, !1));
    };
  }, [
    e,
    r
  ]), Re(() => {
    const i = Be(e.current ? e.current[0] : void 0);
    if (!t) return;
    let a = (o) => {
      if (o.key !== "Tab" || o.altKey || o.ctrlKey || o.metaKey || !Li(e) || o.isComposing) return;
      let s = i.activeElement;
      if (!lt(s, e.current)) return;
      let u = Xe.getTreeNode(e);
      if (!u) return;
      let l = u.nodeToRestore, c = gt(i.body, {
        tabbable: !0
      });
      c.currentNode = s;
      let d = o.shiftKey ? c.previousNode() : c.nextNode();
      if ((!l || !i.body.contains(l) || l === i.body) && (l = void 0, u.nodeToRestore = void 0), (!d || !lt(d, e.current)) && l) {
        c.currentNode = l;
        do
          d = o.shiftKey ? c.previousNode() : c.nextNode();
        while (lt(d, e.current));
        o.preventDefault(), o.stopPropagation(), d ? yt(d, !0) : sy(l) ? yt(l, !0) : s.blur();
      }
    };
    return r || i.addEventListener("keydown", a, !0), () => {
      r || i.removeEventListener("keydown", a, !0);
    };
  }, [
    e,
    t,
    r
  ]), Re(() => {
    const i = Be(e.current ? e.current[0] : void 0);
    if (!t) return;
    let a = Xe.getTreeNode(e);
    if (a) {
      var o;
      return a.nodeToRestore = (o = n.current) !== null && o !== void 0 ? o : void 0, () => {
        let s = Xe.getTreeNode(e);
        if (!s) return;
        let u = s.nodeToRestore;
        if (t && u && // eslint-disable-next-line react-hooks/exhaustive-deps
        (lt(i.activeElement, e.current) || i.activeElement === i.body && o6(e))) {
          let l = Xe.clone();
          requestAnimationFrame(() => {
            if (i.activeElement === i.body) {
              let c = l.getTreeNode(e);
              for (; c; ) {
                if (c.nodeToRestore && c.nodeToRestore.isConnected) {
                  yt(c.nodeToRestore);
                  return;
                }
                c = c.parent;
              }
              for (c = l.getTreeNode(e); c; ) {
                if (c.scopeRef && c.scopeRef.current && Xe.getTreeNode(c.scopeRef)) {
                  Wo(c.scopeRef.current, !0);
                  return;
                }
                c = c.parent;
              }
            }
          });
        }
      };
    }
  }, [
    e,
    t
  ]);
}
function gt(e, t, r) {
  let n = t != null && t.tabbable ? t6 : e6, i = Be(e).createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
    acceptNode(a) {
      var o;
      return !(t == null || (o = t.from) === null || o === void 0) && o.contains(a) ? NodeFilter.FILTER_REJECT : a.matches(n) && ay(a) && (!r || lt(a, r)) && (!(t != null && t.accept) || t.accept(a)) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  return t != null && t.from && (i.currentNode = t.from), i;
}
function Ed(e, t = {}) {
  return {
    focusNext(r = {}) {
      let n = e.current;
      if (!n) return null;
      let { from: i, tabbable: a = t.tabbable, wrap: o = t.wrap, accept: s = t.accept } = r, u = i || Be(n).activeElement, l = gt(n, {
        tabbable: a,
        accept: s
      });
      n.contains(u) && (l.currentNode = u);
      let c = l.nextNode();
      return !c && o && (l.currentNode = n, c = l.nextNode()), c && yt(c, !0), c;
    },
    focusPrevious(r = t) {
      let n = e.current;
      if (!n) return null;
      let { from: i, tabbable: a = t.tabbable, wrap: o = t.wrap, accept: s = t.accept } = r, u = i || Be(n).activeElement, l = gt(n, {
        tabbable: a,
        accept: s
      });
      if (n.contains(u)) l.currentNode = u;
      else {
        let d = Nu(l);
        return d && yt(d, !0), d ?? null;
      }
      let c = l.previousNode();
      if (!c && o) {
        l.currentNode = n;
        let d = Nu(l);
        if (!d)
          return null;
        c = d;
      }
      return c && yt(c, !0), c ?? null;
    },
    focusFirst(r = t) {
      let n = e.current;
      if (!n) return null;
      let { tabbable: i = t.tabbable, accept: a = t.accept } = r, s = gt(n, {
        tabbable: i,
        accept: a
      }).nextNode();
      return s && yt(s, !0), s;
    },
    focusLast(r = t) {
      let n = e.current;
      if (!n) return null;
      let { tabbable: i = t.tabbable, accept: a = t.accept } = r, o = gt(n, {
        tabbable: i,
        accept: a
      }), s = Nu(o);
      return s && yt(s, !0), s ?? null;
    }
  };
}
function Nu(e) {
  let t, r;
  do
    r = e.lastChild(), r && (t = r);
  while (r);
  return t;
}
class wd {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(t) {
    return this.fastMap.get(t);
  }
  addTreeNode(t, r, n) {
    let i = this.fastMap.get(r ?? null);
    if (!i) return;
    let a = new Hl({
      scopeRef: t
    });
    i.addChild(a), a.parent = i, this.fastMap.set(t, a), n && (a.nodeToRestore = n);
  }
  addNode(t) {
    this.fastMap.set(t.scopeRef, t);
  }
  removeTreeNode(t) {
    if (t === null) return;
    let r = this.fastMap.get(t);
    if (!r) return;
    let n = r.parent;
    for (let a of this.traverse()) a !== r && r.nodeToRestore && a.nodeToRestore && r.scopeRef && r.scopeRef.current && lt(a.nodeToRestore, r.scopeRef.current) && (a.nodeToRestore = r.nodeToRestore);
    let i = r.children;
    n && (n.removeChild(r), i.size > 0 && i.forEach((a) => n && n.addChild(a))), this.fastMap.delete(r.scopeRef);
  }
  // Pre Order Depth First
  *traverse(t = this.root) {
    if (t.scopeRef != null && (yield t), t.children.size > 0) for (let r of t.children) yield* this.traverse(r);
  }
  clone() {
    var t;
    let r = new wd();
    var n;
    for (let i of this.traverse()) r.addTreeNode(i.scopeRef, (n = (t = i.parent) === null || t === void 0 ? void 0 : t.scopeRef) !== null && n !== void 0 ? n : null, i.nodeToRestore);
    return r;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map(), this.root = new Hl({
      scopeRef: null
    }), this.fastMap.set(null, this.root);
  }
}
class Hl {
  addChild(t) {
    this.children.add(t), t.parent = this;
  }
  removeChild(t) {
    this.children.delete(t), t.parent = void 0;
  }
  constructor(t) {
    this.children = /* @__PURE__ */ new Set(), this.contain = !1, this.scopeRef = t.scopeRef;
  }
}
let Xe = new wd();
function Wr(e = {}) {
  let { autoFocus: t = !1, isTextInput: r, within: n } = e, i = q({
    isFocused: !1,
    isFocusVisible: t || zo()
  }), [a, o] = ee(!1), [s, u] = ee(() => i.current.isFocused && i.current.isFocusVisible), l = be(() => u(i.current.isFocused && i.current.isFocusVisible), []), c = be((h) => {
    i.current.isFocused = h, o(h), l();
  }, [
    l
  ]);
  Hw((h) => {
    i.current.isFocusVisible = h, l();
  }, [], {
    isTextInput: r
  });
  let { focusProps: d } = Jv({
    isDisabled: n,
    onFocusChange: c
  }), { focusWithinProps: f } = yi({
    isDisabled: !n,
    onFocusWithinChange: c
  });
  return {
    isFocused: a,
    isFocusVisible: s,
    focusProps: n ? f : d
  };
}
let u6 = /* @__PURE__ */ A.createContext(null);
function l6(e) {
  let t = le(u6) || {};
  bd(t, e);
  let { ref: r, ...n } = t;
  return n;
}
function uy(e, t) {
  let { focusProps: r } = Jv(e), { keyboardProps: n } = Gw(e), i = ye(r, n), a = l6(t), o = e.isDisabled ? {} : a, s = q(e.autoFocus);
  return oe(() => {
    s.current && t.current && mn(t.current), s.current = !1;
  }, [
    t
  ]), {
    focusableProps: ye({
      ...i,
      tabIndex: e.excludeFromTabOrder && !e.isDisabled ? -1 : void 0
    }, o)
  };
}
const c6 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]), d6 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function f6(e) {
  if (Intl.Locale) {
    let r = new Intl.Locale(e).maximize(), n = typeof r.getTextInfo == "function" ? r.getTextInfo() : r.textInfo;
    if (n) return n.direction === "rtl";
    if (r.script) return c6.has(r.script);
  }
  let t = e.split("-")[0];
  return d6.has(t);
}
const h6 = Symbol.for("react-aria.i18n.locale");
function ly() {
  let e = typeof window < "u" && window[h6] || typeof navigator < "u" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      e
    ]);
  } catch {
    e = "en-US";
  }
  return {
    locale: e,
    direction: f6(e) ? "rtl" : "ltr"
  };
}
let Wl = ly(), Vi = /* @__PURE__ */ new Set();
function Th() {
  Wl = ly();
  for (let e of Vi) e(Wl);
}
function p6() {
  let e = Er(), [t, r] = ee(Wl);
  return oe(() => (Vi.size === 0 && window.addEventListener("languagechange", Th), Vi.add(r), () => {
    Vi.delete(r), Vi.size === 0 && window.removeEventListener("languagechange", Th);
  }), []), e ? {
    locale: "en-US",
    direction: "ltr"
  } : t;
}
const m6 = /* @__PURE__ */ A.createContext(null);
function ct() {
  let e = p6();
  return le(m6) || e;
}
const v6 = Symbol.for("react-aria.i18n.locale"), y6 = Symbol.for("react-aria.i18n.strings");
let Tn;
class Qr {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(t, r) {
    let i = this.getStringsForLocale(r)[t];
    if (!i) throw new Error(`Could not find intl message ${t} in ${r} locale`);
    return i;
  }
  /** Returns all localized strings for the given locale. */
  getStringsForLocale(t) {
    let r = this.strings[t];
    return r || (r = g6(t, this.strings, this.defaultLocale), this.strings[t] = r), r;
  }
  static getGlobalDictionaryForPackage(t) {
    if (typeof window > "u") return null;
    let r = window[v6];
    if (Tn === void 0) {
      let i = window[y6];
      if (!i) return null;
      Tn = {};
      for (let a in i) Tn[a] = new Qr({
        [r]: i[a]
      }, r);
    }
    let n = Tn == null ? void 0 : Tn[t];
    if (!n) throw new Error(`Strings for package "${t}" were not included by LocalizedStringProvider. Please add it to the list passed to createLocalizedStringDictionary.`);
    return n;
  }
  constructor(t, r = "en-US") {
    this.strings = Object.fromEntries(Object.entries(t).filter(([, n]) => n)), this.defaultLocale = r;
  }
}
function g6(e, t, r = "en-US") {
  if (t[e]) return t[e];
  let n = b6(e);
  if (t[n]) return t[n];
  for (let i in t)
    if (i.startsWith(n + "-")) return t[i];
  return t[r];
}
function b6(e) {
  return Intl.Locale ? new Intl.Locale(e).language : e.split("-")[0];
}
const Ah = /* @__PURE__ */ new Map(), _h = /* @__PURE__ */ new Map();
class cy {
  /** Formats a localized string for the given key with the provided variables. */
  format(t, r) {
    let n = this.strings.getStringForLocale(t, this.locale);
    return typeof n == "function" ? n(r, this) : n;
  }
  plural(t, r, n = "cardinal") {
    let i = r["=" + t];
    if (i) return typeof i == "function" ? i() : i;
    let a = this.locale + ":" + n, o = Ah.get(a);
    o || (o = new Intl.PluralRules(this.locale, {
      type: n
    }), Ah.set(a, o));
    let s = o.select(t);
    return i = r[s] || r.other, typeof i == "function" ? i() : i;
  }
  number(t) {
    let r = _h.get(this.locale);
    return r || (r = new Intl.NumberFormat(this.locale), _h.set(this.locale, r)), r.format(t);
  }
  select(t, r) {
    let n = t[r] || t.other;
    return typeof n == "function" ? n() : n;
  }
  constructor(t, r) {
    this.locale = t, this.strings = r;
  }
}
const Fh = /* @__PURE__ */ new WeakMap();
function $6(e) {
  let t = Fh.get(e);
  return t || (t = new Qr(e), Fh.set(e, t)), t;
}
function dy(e, t) {
  return t && Qr.getGlobalDictionaryForPackage(t) || $6(e);
}
function qt(e, t) {
  let { locale: r } = ct(), n = dy(e, t);
  return G(() => new cy(r, n), [
    r,
    n
  ]);
}
function Zn(e, t) {
  return e - t * Math.floor(e / t);
}
const fy = 1721426;
function an(e, t, r, n) {
  t = Ra(e, t);
  let i = t - 1, a = -2;
  return r <= 2 ? a = 0 : Mr(t) && (a = -1), fy - 1 + 365 * i + Math.floor(i / 4) - Math.floor(i / 100) + Math.floor(i / 400) + Math.floor((367 * r - 362) / 12 + a + n);
}
function Mr(e) {
  return e % 4 === 0 && (e % 100 !== 0 || e % 400 === 0);
}
function Ra(e, t) {
  return e === "BC" ? 1 - t : t;
}
function zs(e) {
  let t = "AD";
  return e <= 0 && (t = "BC", e = 1 - e), [
    t,
    e
  ];
}
const x6 = {
  standard: [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ],
  leapyear: [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ]
};
class $t {
  fromJulianDay(t) {
    let r = t, n = r - fy, i = Math.floor(n / 146097), a = Zn(n, 146097), o = Math.floor(a / 36524), s = Zn(a, 36524), u = Math.floor(s / 1461), l = Zn(s, 1461), c = Math.floor(l / 365), d = i * 400 + o * 100 + u * 4 + c + (o !== 4 && c !== 4 ? 1 : 0), [f, h] = zs(d), p = r - an(f, h, 1, 1), v = 2;
    r < an(f, h, 3, 1) ? v = 0 : Mr(h) && (v = 1);
    let g = Math.floor(((p + v) * 12 + 373) / 367), $ = r - an(f, h, g, 1) + 1;
    return new tt(f, h, g, $);
  }
  toJulianDay(t) {
    return an(t.era, t.year, t.month, t.day);
  }
  getDaysInMonth(t) {
    return x6[Mr(t.year) ? "leapyear" : "standard"][t.month - 1];
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getMonthsInYear(t) {
    return 12;
  }
  getDaysInYear(t) {
    return Mr(t.year) ? 366 : 365;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getYearsInEra(t) {
    return 9999;
  }
  getEras() {
    return [
      "BC",
      "AD"
    ];
  }
  isInverseEra(t) {
    return t.era === "BC";
  }
  balanceDate(t) {
    t.year <= 0 && (t.era = t.era === "BC" ? "AD" : "BC", t.year = 1 - t.year);
  }
  constructor() {
    this.identifier = "gregory";
  }
}
const D6 = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};
function et(e, t) {
  return t = Ve(t, e.calendar), e.era === t.era && e.year === t.year && e.month === t.month && e.day === t.day;
}
function E6(e, t) {
  return t = Ve(t, e.calendar), e = br(e), t = br(t), e.era === t.era && e.year === t.year && e.month === t.month;
}
function Ql(e, t) {
  return e.calendar.identifier === t.calendar.identifier && e.era === t.era && e.year === t.year && e.month === t.month && e.day === t.day;
}
function w6(e, t) {
  return et(e, Ks(t));
}
function Cd(e, t) {
  let r = e.calendar.toJulianDay(e), n = Math.ceil(r + 1 - T6(t)) % 7;
  return n < 0 && (n += 7), n;
}
function hy(e) {
  return fr(Date.now(), e);
}
function Ks(e) {
  return bt(hy(e));
}
function py(e, t) {
  return e.calendar.toJulianDay(e) - t.calendar.toJulianDay(t);
}
function my(e, t) {
  return Oh(e) - Oh(t);
}
function Oh(e) {
  return e.hour * 36e5 + e.minute * 6e4 + e.second * 1e3 + e.millisecond;
}
let Lu = null;
function vn() {
  return Lu == null && (Lu = new Intl.DateTimeFormat().resolvedOptions().timeZone), Lu;
}
function br(e) {
  return e.subtract({
    days: e.day - 1
  });
}
function li(e) {
  return e.add({
    days: e.calendar.getDaysInMonth(e) - e.day
  });
}
function Gl(e) {
  return br(e.subtract({
    months: e.month - 1
  }));
}
function C6(e) {
  return li(e.add({
    months: e.calendar.getMonthsInYear(e) - e.month
  }));
}
function S6(e) {
  return e.calendar.getMinimumMonthInYear ? e.calendar.getMinimumMonthInYear(e) : 1;
}
function k6(e) {
  return e.calendar.getMinimumDayInMonth ? e.calendar.getMinimumDayInMonth(e) : 1;
}
function yn(e, t) {
  let r = Cd(e, t);
  return e.subtract({
    days: r
  });
}
function vy(e, t) {
  return yn(e, t).add({
    days: 6
  });
}
const Ih = /* @__PURE__ */ new Map();
function P6(e) {
  if (Intl.Locale) {
    let r = Ih.get(e);
    return r || (r = new Intl.Locale(e).maximize().region, r && Ih.set(e, r)), r;
  }
  let t = e.split("-")[1];
  return t === "u" ? void 0 : t;
}
function T6(e) {
  let t = P6(e);
  return t && D6[t] || 0;
}
function A6(e, t) {
  let r = e.calendar.getDaysInMonth(e);
  return Math.ceil((Cd(br(e), t) + r) / 7);
}
function Sd(e, t) {
  return e && t ? e.compare(t) <= 0 ? e : t : e || t;
}
function kd(e, t) {
  return e && t ? e.compare(t) >= 0 ? e : t : e || t;
}
function ci(e) {
  e = Ve(e, new $t());
  let t = Ra(e.era, e.year);
  return yy(t, e.month, e.day, e.hour, e.minute, e.second, e.millisecond);
}
function yy(e, t, r, n, i, a, o) {
  let s = /* @__PURE__ */ new Date();
  return s.setUTCHours(n, i, a, o), s.setUTCFullYear(e, t - 1, r), s.getTime();
}
function Zl(e, t) {
  if (t === "UTC") return 0;
  if (e > 0 && t === vn()) return new Date(e).getTimezoneOffset() * -6e4;
  let { year: r, month: n, day: i, hour: a, minute: o, second: s } = gy(e, t);
  return yy(r, n, i, a, o, s, 0) - Math.floor(e / 1e3) * 1e3;
}
const Rh = /* @__PURE__ */ new Map();
function gy(e, t) {
  let r = Rh.get(t);
  r || (r = new Intl.DateTimeFormat("en-US", {
    timeZone: t,
    hour12: !1,
    era: "short",
    year: "numeric",
    month: "numeric",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  }), Rh.set(t, r));
  let n = r.formatToParts(new Date(e)), i = {};
  for (let a of n) a.type !== "literal" && (i[a.type] = a.value);
  return {
    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253
    year: i.era === "BC" || i.era === "B" ? -i.year + 1 : +i.year,
    month: +i.month,
    day: +i.day,
    hour: i.hour === "24" ? 0 : +i.hour,
    minute: +i.minute,
    second: +i.second
  };
}
const Bh = 864e5;
function _6(e, t, r, n) {
  return (r === n ? [
    r
  ] : [
    r,
    n
  ]).filter((a) => F6(e, t, a));
}
function F6(e, t, r) {
  let n = gy(r, t);
  return e.year === n.year && e.month === n.month && e.day === n.day && e.hour === n.hour && e.minute === n.minute && e.second === n.second;
}
function cr(e, t, r = "compatible") {
  let n = $r(e);
  if (t === "UTC") return ci(n);
  if (t === vn() && r === "compatible") {
    n = Ve(n, new $t());
    let u = /* @__PURE__ */ new Date(), l = Ra(n.era, n.year);
    return u.setFullYear(l, n.month - 1, n.day), u.setHours(n.hour, n.minute, n.second, n.millisecond), u.getTime();
  }
  let i = ci(n), a = Zl(i - Bh, t), o = Zl(i + Bh, t), s = _6(n, t, i - a, i - o);
  if (s.length === 1) return s[0];
  if (s.length > 1) switch (r) {
    case "compatible":
    case "earlier":
      return s[0];
    case "later":
      return s[s.length - 1];
    case "reject":
      throw new RangeError("Multiple possible absolute times found");
  }
  switch (r) {
    case "earlier":
      return Math.min(i - a, i - o);
    case "compatible":
    case "later":
      return Math.max(i - a, i - o);
    case "reject":
      throw new RangeError("No such absolute time found");
  }
}
function by(e, t, r = "compatible") {
  return new Date(cr(e, t, r));
}
function fr(e, t) {
  let r = Zl(e, t), n = new Date(e + r), i = n.getUTCFullYear(), a = n.getUTCMonth() + 1, o = n.getUTCDate(), s = n.getUTCHours(), u = n.getUTCMinutes(), l = n.getUTCSeconds(), c = n.getUTCMilliseconds();
  return new ya(i, a, o, t, r, s, u, l, c);
}
function bt(e) {
  return new tt(e.calendar, e.era, e.year, e.month, e.day);
}
function $r(e, t) {
  let r = 0, n = 0, i = 0, a = 0;
  if ("timeZone" in e) ({ hour: r, minute: n, second: i, millisecond: a } = e);
  else if ("hour" in e && !t) return e;
  return t && ({ hour: r, minute: n, second: i, millisecond: a } = t), new Qo(e.calendar, e.era, e.year, e.month, e.day, r, n, i, a);
}
function Ve(e, t) {
  if (e.calendar.identifier === t.identifier) return e;
  let r = t.fromJulianDay(e.calendar.toJulianDay(e)), n = e.copy();
  return n.calendar = t, n.era = r.era, n.year = r.year, n.month = r.month, n.day = r.day, gn(n), n;
}
function O6(e, t, r) {
  if (e instanceof ya)
    return e.timeZone === t ? e : R6(e, t);
  let n = cr(e, t, r);
  return fr(n, t);
}
function I6(e) {
  let t = ci(e) - e.offset;
  return new Date(t);
}
function R6(e, t) {
  let r = ci(e) - e.offset;
  return Ve(fr(r, t), e.calendar);
}
const Ai = 36e5;
function Us(e, t) {
  let r = e.copy(), n = "hour" in r ? Ey(r, t) : 0;
  Yl(r, t.years || 0), r.calendar.balanceYearMonth && r.calendar.balanceYearMonth(r, e), r.month += t.months || 0, Jl(r), $y(r), r.day += (t.weeks || 0) * 7, r.day += t.days || 0, r.day += n, B6(r), r.calendar.balanceDate && r.calendar.balanceDate(r), r.year < 1 && (r.year = 1, r.month = 1, r.day = 1);
  let i = r.calendar.getYearsInEra(r);
  if (r.year > i) {
    var a, o;
    let u = (a = (o = r.calendar).isInverseEra) === null || a === void 0 ? void 0 : a.call(o, r);
    r.year = i, r.month = u ? 1 : r.calendar.getMonthsInYear(r), r.day = u ? 1 : r.calendar.getDaysInMonth(r);
  }
  r.month < 1 && (r.month = 1, r.day = 1);
  let s = r.calendar.getMonthsInYear(r);
  return r.month > s && (r.month = s, r.day = r.calendar.getDaysInMonth(r)), r.day = Math.max(1, Math.min(r.calendar.getDaysInMonth(r), r.day)), r;
}
function Yl(e, t) {
  var r, n;
  !((r = (n = e.calendar).isInverseEra) === null || r === void 0) && r.call(n, e) && (t = -t), e.year += t;
}
function Jl(e) {
  for (; e.month < 1; )
    Yl(e, -1), e.month += e.calendar.getMonthsInYear(e);
  let t = 0;
  for (; e.month > (t = e.calendar.getMonthsInYear(e)); )
    e.month -= t, Yl(e, 1);
}
function B6(e) {
  for (; e.day < 1; )
    e.month--, Jl(e), e.day += e.calendar.getDaysInMonth(e);
  for (; e.day > e.calendar.getDaysInMonth(e); )
    e.day -= e.calendar.getDaysInMonth(e), e.month++, Jl(e);
}
function $y(e) {
  e.month = Math.max(1, Math.min(e.calendar.getMonthsInYear(e), e.month)), e.day = Math.max(1, Math.min(e.calendar.getDaysInMonth(e), e.day));
}
function gn(e) {
  e.calendar.constrainDate && e.calendar.constrainDate(e), e.year = Math.max(1, Math.min(e.calendar.getYearsInEra(e), e.year)), $y(e);
}
function Pd(e) {
  let t = {};
  for (let r in e) typeof e[r] == "number" && (t[r] = -e[r]);
  return t;
}
function xy(e, t) {
  return Us(e, Pd(t));
}
function Td(e, t) {
  let r = e.copy();
  return t.era != null && (r.era = t.era), t.year != null && (r.year = t.year), t.month != null && (r.month = t.month), t.day != null && (r.day = t.day), gn(r), r;
}
function va(e, t) {
  let r = e.copy();
  return t.hour != null && (r.hour = t.hour), t.minute != null && (r.minute = t.minute), t.second != null && (r.second = t.second), t.millisecond != null && (r.millisecond = t.millisecond), Dy(r), r;
}
function M6(e) {
  e.second += Math.floor(e.millisecond / 1e3), e.millisecond = ao(e.millisecond, 1e3), e.minute += Math.floor(e.second / 60), e.second = ao(e.second, 60), e.hour += Math.floor(e.minute / 60), e.minute = ao(e.minute, 60);
  let t = Math.floor(e.hour / 24);
  return e.hour = ao(e.hour, 24), t;
}
function Dy(e) {
  e.millisecond = Math.max(0, Math.min(e.millisecond, 1e3)), e.second = Math.max(0, Math.min(e.second, 59)), e.minute = Math.max(0, Math.min(e.minute, 59)), e.hour = Math.max(0, Math.min(e.hour, 23));
}
function ao(e, t) {
  let r = e % t;
  return r < 0 && (r += t), r;
}
function Ey(e, t) {
  return e.hour += t.hours || 0, e.minute += t.minutes || 0, e.second += t.seconds || 0, e.millisecond += t.milliseconds || 0, M6(e);
}
function wy(e, t) {
  let r = e.copy();
  return Ey(r, t), r;
}
function N6(e, t) {
  return wy(e, Pd(t));
}
function Ad(e, t, r, n) {
  let i = e.copy();
  switch (t) {
    case "era": {
      let s = e.calendar.getEras(), u = s.indexOf(e.era);
      if (u < 0) throw new Error("Invalid era: " + e.era);
      u = hr(u, r, 0, s.length - 1, n == null ? void 0 : n.round), i.era = s[u], gn(i);
      break;
    }
    case "year":
      var a, o;
      !((a = (o = i.calendar).isInverseEra) === null || a === void 0) && a.call(o, i) && (r = -r), i.year = hr(e.year, r, -1 / 0, 9999, n == null ? void 0 : n.round), i.year === -1 / 0 && (i.year = 1), i.calendar.balanceYearMonth && i.calendar.balanceYearMonth(i, e);
      break;
    case "month":
      i.month = hr(e.month, r, 1, e.calendar.getMonthsInYear(e), n == null ? void 0 : n.round);
      break;
    case "day":
      i.day = hr(e.day, r, 1, e.calendar.getDaysInMonth(e), n == null ? void 0 : n.round);
      break;
    default:
      throw new Error("Unsupported field " + t);
  }
  return e.calendar.balanceDate && e.calendar.balanceDate(i), gn(i), i;
}
function _d(e, t, r, n) {
  let i = e.copy();
  switch (t) {
    case "hour": {
      let a = e.hour, o = 0, s = 23;
      if ((n == null ? void 0 : n.hourCycle) === 12) {
        let u = a >= 12;
        o = u ? 12 : 0, s = u ? 23 : 11;
      }
      i.hour = hr(a, r, o, s, n == null ? void 0 : n.round);
      break;
    }
    case "minute":
      i.minute = hr(e.minute, r, 0, 59, n == null ? void 0 : n.round);
      break;
    case "second":
      i.second = hr(e.second, r, 0, 59, n == null ? void 0 : n.round);
      break;
    case "millisecond":
      i.millisecond = hr(e.millisecond, r, 0, 999, n == null ? void 0 : n.round);
      break;
    default:
      throw new Error("Unsupported field " + t);
  }
  return i;
}
function hr(e, t, r, n, i = !1) {
  if (i) {
    e += Math.sign(t), e < r && (e = n);
    let a = Math.abs(t);
    t > 0 ? e = Math.ceil(e / a) * a : e = Math.floor(e / a) * a, e > n && (e = r);
  } else
    e += t, e < r ? e = n - (r - e - 1) : e > n && (e = r + (e - n - 1));
  return e;
}
function Cy(e, t) {
  let r;
  if (t.years != null && t.years !== 0 || t.months != null && t.months !== 0 || t.weeks != null && t.weeks !== 0 || t.days != null && t.days !== 0) {
    let i = Us($r(e), {
      years: t.years,
      months: t.months,
      weeks: t.weeks,
      days: t.days
    });
    r = cr(i, e.timeZone);
  } else
    r = ci(e) - e.offset;
  r += t.milliseconds || 0, r += (t.seconds || 0) * 1e3, r += (t.minutes || 0) * 6e4, r += (t.hours || 0) * 36e5;
  let n = fr(r, e.timeZone);
  return Ve(n, e.calendar);
}
function L6(e, t) {
  return Cy(e, Pd(t));
}
function V6(e, t, r, n) {
  switch (t) {
    case "hour": {
      let i = 0, a = 23;
      if ((n == null ? void 0 : n.hourCycle) === 12) {
        let p = e.hour >= 12;
        i = p ? 12 : 0, a = p ? 23 : 11;
      }
      let o = $r(e), s = Ve(va(o, {
        hour: i
      }), new $t()), u = [
        cr(s, e.timeZone, "earlier"),
        cr(s, e.timeZone, "later")
      ].filter((p) => fr(p, e.timeZone).day === s.day)[0], l = Ve(va(o, {
        hour: a
      }), new $t()), c = [
        cr(l, e.timeZone, "earlier"),
        cr(l, e.timeZone, "later")
      ].filter((p) => fr(p, e.timeZone).day === l.day).pop(), d = ci(e) - e.offset, f = Math.floor(d / Ai), h = d % Ai;
      return d = hr(f, r, Math.floor(u / Ai), Math.floor(c / Ai), n == null ? void 0 : n.round) * Ai + h, Ve(fr(d, e.timeZone), e.calendar);
    }
    case "minute":
    case "second":
    case "millisecond":
      return _d(e, t, r, n);
    case "era":
    case "year":
    case "month":
    case "day": {
      let i = Ad($r(e), t, r, n), a = cr(i, e.timeZone);
      return Ve(fr(a, e.timeZone), e.calendar);
    }
    default:
      throw new Error("Unsupported field " + t);
  }
}
function j6(e, t, r) {
  let n = $r(e), i = va(Td(n, t), t);
  if (i.compare(n) === 0) return e;
  let a = cr(i, e.timeZone, r);
  return Ve(fr(a, e.timeZone), e.calendar);
}
function Sy(e) {
  return `${String(e.hour).padStart(2, "0")}:${String(e.minute).padStart(2, "0")}:${String(e.second).padStart(2, "0")}${e.millisecond ? String(e.millisecond / 1e3).slice(1) : ""}`;
}
function ky(e) {
  let t = Ve(e, new $t());
  return `${String(t.year).padStart(4, "0")}-${String(t.month).padStart(2, "0")}-${String(t.day).padStart(2, "0")}`;
}
function Py(e) {
  return `${ky(e)}T${Sy(e)}`;
}
function z6(e) {
  let t = Math.sign(e) < 0 ? "-" : "+";
  e = Math.abs(e);
  let r = Math.floor(e / 36e5), n = e % 36e5 / 6e4;
  return `${t}${String(r).padStart(2, "0")}:${String(n).padStart(2, "0")}`;
}
function K6(e) {
  return `${Py(e)}${z6(e.offset)}[${e.timeZone}]`;
}
function Fd(e) {
  let t = typeof e[0] == "object" ? e.shift() : new $t(), r;
  if (typeof e[0] == "string") r = e.shift();
  else {
    let o = t.getEras();
    r = o[o.length - 1];
  }
  let n = e.shift(), i = e.shift(), a = e.shift();
  return [
    t,
    r,
    n,
    i,
    a
  ];
}
var U6 = /* @__PURE__ */ new WeakMap();
class tt {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new tt(this.calendar, this.era, this.year, this.month, this.day) : new tt(this.calendar, this.year, this.month, this.day);
  }
  /** Returns a new `CalendarDate` with the given duration added to it. */
  add(t) {
    return Us(this, t);
  }
  /** Returns a new `CalendarDate` with the given duration subtracted from it. */
  subtract(t) {
    return xy(this, t);
  }
  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t) {
    return Td(this, t);
  }
  /**
  * Returns a new `CalendarDate` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, r, n) {
    return Ad(this, t, r, n);
  }
  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */
  toDate(t) {
    return by(this, t);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return ky(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    return py(this, t);
  }
  constructor(...t) {
    Oa(this, U6, {
      writable: !0,
      value: void 0
    });
    let [r, n, i, a, o] = Fd(t);
    this.calendar = r, this.era = n, this.year = i, this.month = a, this.day = o, gn(this);
  }
}
var q6 = /* @__PURE__ */ new WeakMap();
class Od {
  /** Returns a copy of this time. */
  copy() {
    return new Od(this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `Time` with the given duration added to it. */
  add(t) {
    return wy(this, t);
  }
  /** Returns a new `Time` with the given duration subtracted from it. */
  subtract(t) {
    return N6(this, t);
  }
  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t) {
    return va(this, t);
  }
  /**
  * Returns a new `Time` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, r, n) {
    return _d(this, t, r, n);
  }
  /** Converts the time to an ISO 8601 formatted string. */
  toString() {
    return Sy(this);
  }
  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */
  compare(t) {
    return my(this, t);
  }
  constructor(t = 0, r = 0, n = 0, i = 0) {
    Oa(this, q6, {
      writable: !0,
      value: void 0
    }), this.hour = t, this.minute = r, this.second = n, this.millisecond = i, Dy(this);
  }
}
var H6 = /* @__PURE__ */ new WeakMap();
class Qo {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new Qo(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond) : new Qo(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `CalendarDateTime` with the given duration added to it. */
  add(t) {
    return Us(this, t);
  }
  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */
  subtract(t) {
    return xy(this, t);
  }
  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t) {
    return Td(va(this, t), t);
  }
  /**
  * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, r, n) {
    switch (t) {
      case "era":
      case "year":
      case "month":
      case "day":
        return Ad(this, t, r, n);
      default:
        return _d(this, t, r, n);
    }
  }
  /** Converts the date to a native JavaScript Date object in the given time zone. */
  toDate(t, r) {
    return by(this, t, r);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return Py(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    let r = py(this, t);
    return r === 0 ? my(this, $r(t)) : r;
  }
  constructor(...t) {
    Oa(this, H6, {
      writable: !0,
      value: void 0
    });
    let [r, n, i, a, o] = Fd(t);
    this.calendar = r, this.era = n, this.year = i, this.month = a, this.day = o, this.hour = t.shift() || 0, this.minute = t.shift() || 0, this.second = t.shift() || 0, this.millisecond = t.shift() || 0, gn(this);
  }
}
var W6 = /* @__PURE__ */ new WeakMap();
class ya {
  /** Returns a copy of this date. */
  copy() {
    return this.era ? new ya(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond) : new ya(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `ZonedDateTime` with the given duration added to it. */
  add(t) {
    return Cy(this, t);
  }
  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */
  subtract(t) {
    return L6(this, t);
  }
  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(t, r) {
    return j6(this, t, r);
  }
  /**
  * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(t, r, n) {
    return V6(this, t, r, n);
  }
  /** Converts the date to a native JavaScript Date object. */
  toDate() {
    return I6(this);
  }
  /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */
  toString() {
    return K6(this);
  }
  /** Converts the date to an ISO 8601 formatted string in UTC. */
  toAbsoluteString() {
    return this.toDate().toISOString();
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(t) {
    return this.toDate().getTime() - O6(t, this.timeZone).toDate().getTime();
  }
  constructor(...t) {
    Oa(this, W6, {
      writable: !0,
      value: void 0
    });
    let [r, n, i, a, o] = Fd(t), s = t.shift(), u = t.shift();
    this.calendar = r, this.era = n, this.year = i, this.month = a, this.day = o, this.timeZone = s, this.offset = u, this.hour = t.shift() || 0, this.minute = t.shift() || 0, this.second = t.shift() || 0, this.millisecond = t.shift() || 0, gn(this);
  }
}
const Yn = [
  [
    1868,
    9,
    8
  ],
  [
    1912,
    7,
    30
  ],
  [
    1926,
    12,
    25
  ],
  [
    1989,
    1,
    8
  ],
  [
    2019,
    5,
    1
  ]
], Q6 = [
  [
    1912,
    7,
    29
  ],
  [
    1926,
    12,
    24
  ],
  [
    1989,
    1,
    7
  ],
  [
    2019,
    4,
    30
  ]
], Co = [
  1867,
  1911,
  1925,
  1988,
  2018
], Rr = [
  "meiji",
  "taisho",
  "showa",
  "heisei",
  "reiwa"
];
function Mh(e) {
  const t = Yn.findIndex(([r, n, i]) => e.year < r || e.year === r && e.month < n || e.year === r && e.month === n && e.day < i);
  return t === -1 ? Yn.length - 1 : t === 0 ? 0 : t - 1;
}
function Vu(e) {
  let t = Co[Rr.indexOf(e.era)];
  if (!t) throw new Error("Unknown era: " + e.era);
  return new tt(e.year + t, e.month, e.day);
}
class G6 extends $t {
  fromJulianDay(t) {
    let r = super.fromJulianDay(t), n = Mh(r);
    return new tt(this, Rr[n], r.year - Co[n], r.month, r.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(Vu(t));
  }
  balanceDate(t) {
    let r = Vu(t), n = Mh(r);
    Rr[n] !== t.era && (t.era = Rr[n], t.year = r.year - Co[n]), this.constrainDate(t);
  }
  constrainDate(t) {
    let r = Rr.indexOf(t.era), n = Q6[r];
    if (n != null) {
      let [i, a, o] = n, s = i - Co[r];
      t.year = Math.max(1, Math.min(s, t.year)), t.year === s && (t.month = Math.min(a, t.month), t.month === a && (t.day = Math.min(o, t.day)));
    }
    if (t.year === 1 && r >= 0) {
      let [, i, a] = Yn[r];
      t.month = Math.max(i, t.month), t.month === i && (t.day = Math.max(a, t.day));
    }
  }
  getEras() {
    return Rr;
  }
  getYearsInEra(t) {
    let r = Rr.indexOf(t.era), n = Yn[r], i = Yn[r + 1];
    if (i == null)
      return 9999 - n[0] + 1;
    let a = i[0] - n[0];
    return (t.month < i[1] || t.month === i[1] && t.day < i[2]) && a++, a;
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(Vu(t));
  }
  getMinimumMonthInYear(t) {
    let r = Nh(t);
    return r ? r[1] : 1;
  }
  getMinimumDayInMonth(t) {
    let r = Nh(t);
    return r && t.month === r[1] ? r[2] : 1;
  }
  constructor(...t) {
    super(...t), this.identifier = "japanese";
  }
}
function Nh(e) {
  if (e.year === 1) {
    let t = Rr.indexOf(e.era);
    return Yn[t];
  }
}
const Ty = -543;
class Z6 extends $t {
  fromJulianDay(t) {
    let r = super.fromJulianDay(t), n = Ra(r.era, r.year);
    return new tt(this, n - Ty, r.month, r.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(Lh(t));
  }
  getEras() {
    return [
      "BE"
    ];
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(Lh(t));
  }
  balanceDate() {
  }
  constructor(...t) {
    super(...t), this.identifier = "buddhist";
  }
}
function Lh(e) {
  let [t, r] = zs(e.year + Ty);
  return new tt(t, r, e.month, e.day);
}
const Go = 1911;
function Ay(e) {
  return e.era === "minguo" ? e.year + Go : 1 - e.year + Go;
}
function Vh(e) {
  let t = e - Go;
  return t > 0 ? [
    "minguo",
    t
  ] : [
    "before_minguo",
    1 - t
  ];
}
class Y6 extends $t {
  fromJulianDay(t) {
    let r = super.fromJulianDay(t), n = Ra(r.era, r.year), [i, a] = Vh(n);
    return new tt(this, i, a, r.month, r.day);
  }
  toJulianDay(t) {
    return super.toJulianDay(jh(t));
  }
  getEras() {
    return [
      "before_minguo",
      "minguo"
    ];
  }
  balanceDate(t) {
    let [r, n] = Vh(Ay(t));
    t.era = r, t.year = n;
  }
  isInverseEra(t) {
    return t.era === "before_minguo";
  }
  getDaysInMonth(t) {
    return super.getDaysInMonth(jh(t));
  }
  getYearsInEra(t) {
    return t.era === "before_minguo" ? 9999 : 9999 - Go;
  }
  constructor(...t) {
    super(...t), this.identifier = "roc";
  }
}
function jh(e) {
  let [t, r] = zs(Ay(e));
  return new tt(t, r, e.month, e.day);
}
const zh = 1948320, Kh = [
  0,
  31,
  62,
  93,
  124,
  155,
  186,
  216,
  246,
  276,
  306,
  336
  // Esfand
];
class J6 {
  fromJulianDay(t) {
    let r = t - zh, n = 1 + Math.floor((33 * r + 3) / 12053), i = 365 * (n - 1) + Math.floor((8 * n + 21) / 33), a = r - i, o = a < 216 ? Math.floor(a / 31) : Math.floor((a - 6) / 30), s = a - Kh[o] + 1;
    return new tt(this, n, o + 1, s);
  }
  toJulianDay(t) {
    let r = zh - 1 + 365 * (t.year - 1) + Math.floor((8 * t.year + 21) / 33);
    return r += Kh[t.month - 1], r += t.day, r;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInMonth(t) {
    return t.month <= 6 ? 31 : t.month <= 11 || Zn(25 * t.year + 11, 33) < 8 ? 30 : 29;
  }
  getEras() {
    return [
      "AP"
    ];
  }
  getYearsInEra() {
    return 9377;
  }
  constructor() {
    this.identifier = "persian";
  }
}
const ju = 78, Uh = 80;
class X6 extends $t {
  fromJulianDay(t) {
    let r = super.fromJulianDay(t), n = r.year - ju, i = t - an(r.era, r.year, 1, 1), a;
    i < Uh ? (n--, a = Mr(r.year - 1) ? 31 : 30, i += a + 155 + 90 + 10) : (a = Mr(r.year) ? 31 : 30, i -= Uh);
    let o, s;
    if (i < a)
      o = 1, s = i + 1;
    else {
      let u = i - a;
      u < 155 ? (o = Math.floor(u / 31) + 2, s = u % 31 + 1) : (u -= 155, o = Math.floor(u / 30) + 7, s = u % 30 + 1);
    }
    return new tt(this, n, o, s);
  }
  toJulianDay(t) {
    let r = t.year + ju, [n, i] = zs(r), a, o;
    return Mr(i) ? (a = 31, o = an(n, i, 3, 21)) : (a = 30, o = an(n, i, 3, 22)), t.month === 1 ? o + t.day - 1 : (o += a + Math.min(t.month - 2, 5) * 31, t.month >= 8 && (o += (t.month - 7) * 30), o += t.day - 1, o);
  }
  getDaysInMonth(t) {
    return t.month === 1 && Mr(t.year + ju) || t.month >= 2 && t.month <= 6 ? 31 : 30;
  }
  getYearsInEra() {
    return 9919;
  }
  getEras() {
    return [
      "saka"
    ];
  }
  balanceDate() {
  }
  constructor(...t) {
    super(...t), this.identifier = "indian";
  }
}
const Zo = 1948440, qh = 1948439, _t = 1300, An = 1600, eC = 460322;
function Yo(e, t, r, n) {
  return n + Math.ceil(29.5 * (r - 1)) + (t - 1) * 354 + Math.floor((3 + 11 * t) / 30) + e - 1;
}
function _y(e, t, r) {
  let n = Math.floor((30 * (r - t) + 10646) / 10631), i = Math.min(12, Math.ceil((r - (29 + Yo(t, n, 1, 1))) / 29.5) + 1), a = r - Yo(t, n, i, 1) + 1;
  return new tt(e, n, i, a);
}
function Hh(e) {
  return (14 + 11 * e) % 30 < 11;
}
class Id {
  fromJulianDay(t) {
    return _y(this, Zo, t);
  }
  toJulianDay(t) {
    return Yo(Zo, t.year, t.month, t.day);
  }
  getDaysInMonth(t) {
    let r = 29 + t.month % 2;
    return t.month === 12 && Hh(t.year) && r++, r;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInYear(t) {
    return Hh(t.year) ? 355 : 354;
  }
  getYearsInEra() {
    return 9665;
  }
  getEras() {
    return [
      "AH"
    ];
  }
  constructor() {
    this.identifier = "islamic-civil";
  }
}
class tC extends Id {
  fromJulianDay(t) {
    return _y(this, qh, t);
  }
  toJulianDay(t) {
    return Yo(qh, t.year, t.month, t.day);
  }
  constructor(...t) {
    super(...t), this.identifier = "islamic-tbla";
  }
}
const rC = "qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=";
let Xl, Jn;
function So(e) {
  return eC + Jn[e - _t];
}
function ji(e, t) {
  let r = e - _t, n = 1 << 11 - (t - 1);
  return Xl[r] & n ? 30 : 29;
}
function Wh(e, t) {
  let r = So(e);
  for (let n = 1; n < t; n++) r += ji(e, n);
  return r;
}
function Qh(e) {
  return Jn[e + 1 - _t] - Jn[e - _t];
}
class nC extends Id {
  fromJulianDay(t) {
    let r = t - Zo, n = So(_t), i = So(An);
    if (r < n || r > i) return super.fromJulianDay(t);
    {
      let a = _t - 1, o = 1, s = 1;
      for (; s > 0; ) {
        a++, s = r - So(a) + 1;
        let u = Qh(a);
        if (s === u) {
          o = 12;
          break;
        } else if (s < u) {
          let l = ji(a, o);
          for (o = 1; s > l; )
            s -= l, o++, l = ji(a, o);
          break;
        }
      }
      return new tt(this, a, o, r - Wh(a, o) + 1);
    }
  }
  toJulianDay(t) {
    return t.year < _t || t.year > An ? super.toJulianDay(t) : Zo + Wh(t.year, t.month) + (t.day - 1);
  }
  getDaysInMonth(t) {
    return t.year < _t || t.year > An ? super.getDaysInMonth(t) : ji(t.year, t.month);
  }
  getDaysInYear(t) {
    return t.year < _t || t.year > An ? super.getDaysInYear(t) : Qh(t.year);
  }
  constructor() {
    if (super(), this.identifier = "islamic-umalqura", Xl || (Xl = new Uint16Array(Uint8Array.from(atob(rC), (t) => t.charCodeAt(0)).buffer)), !Jn) {
      Jn = new Uint32Array(An - _t + 1);
      let t = 0;
      for (let r = _t; r <= An; r++) {
        Jn[r - _t] = t;
        for (let n = 1; n <= 12; n++) t += ji(r, n);
      }
    }
  }
}
const Gh = 347997, Fy = 1080, Oy = 24 * Fy, iC = 29, aC = 12 * Fy + 793, oC = iC * Oy + aC;
function Xr(e) {
  return Zn(e * 7 + 1, 19) < 7;
}
function ko(e) {
  let t = Math.floor((235 * e - 234) / 19), r = 12084 + 13753 * t, n = t * 29 + Math.floor(r / 25920);
  return Zn(3 * (n + 1), 7) < 3 && (n += 1), n;
}
function sC(e) {
  let t = ko(e - 1), r = ko(e);
  return ko(e + 1) - r === 356 ? 2 : r - t === 382 ? 1 : 0;
}
function Ji(e) {
  return ko(e) + sC(e);
}
function Iy(e) {
  return Ji(e + 1) - Ji(e);
}
function uC(e) {
  let t = Iy(e);
  switch (t > 380 && (t -= 30), t) {
    case 353:
      return 0;
    case 354:
      return 1;
    case 355:
      return 2;
  }
}
function oo(e, t) {
  if (t >= 6 && !Xr(e) && t++, t === 4 || t === 7 || t === 9 || t === 11 || t === 13) return 29;
  let r = uC(e);
  return t === 2 ? r === 2 ? 30 : 29 : t === 3 ? r === 0 ? 29 : 30 : t === 6 ? Xr(e) ? 30 : 0 : 30;
}
class lC {
  fromJulianDay(t) {
    let r = t - Gh, n = r * Oy / oC, i = Math.floor((19 * n + 234) / 235) + 1, a = Ji(i), o = Math.floor(r - a);
    for (; o < 1; )
      i--, a = Ji(i), o = Math.floor(r - a);
    let s = 1, u = 0;
    for (; u < o; )
      u += oo(i, s), s++;
    s--, u -= oo(i, s);
    let l = o - u;
    return new tt(this, i, s, l);
  }
  toJulianDay(t) {
    let r = Ji(t.year);
    for (let n = 1; n < t.month; n++) r += oo(t.year, n);
    return r + t.day + Gh;
  }
  getDaysInMonth(t) {
    return oo(t.year, t.month);
  }
  getMonthsInYear(t) {
    return Xr(t.year) ? 13 : 12;
  }
  getDaysInYear(t) {
    return Iy(t.year);
  }
  getYearsInEra() {
    return 9999;
  }
  getEras() {
    return [
      "AM"
    ];
  }
  balanceYearMonth(t, r) {
    r.year !== t.year && (Xr(r.year) && !Xr(t.year) && r.month > 6 ? t.month-- : !Xr(r.year) && Xr(t.year) && r.month > 6 && t.month++);
  }
  constructor() {
    this.identifier = "hebrew";
  }
}
const ec = 1723856, Zh = 1824665, tc = 5500;
function Jo(e, t, r, n) {
  return e + 365 * t + Math.floor(t / 4) + 30 * (r - 1) + n - 1;
}
function Rd(e, t) {
  let r = Math.floor(4 * (t - e) / 1461), n = 1 + Math.floor((t - Jo(e, r, 1, 1)) / 30), i = t + 1 - Jo(e, r, n, 1);
  return [
    r,
    n,
    i
  ];
}
function Ry(e) {
  return Math.floor(e % 4 / 3);
}
function By(e, t) {
  return t % 13 !== 0 ? 30 : Ry(e) + 5;
}
class Bd {
  fromJulianDay(t) {
    let [r, n, i] = Rd(ec, t), a = "AM";
    return r <= 0 && (a = "AA", r += tc), new tt(this, a, r, n, i);
  }
  toJulianDay(t) {
    let r = t.year;
    return t.era === "AA" && (r -= tc), Jo(ec, r, t.month, t.day);
  }
  getDaysInMonth(t) {
    return By(t.year, t.month);
  }
  getMonthsInYear() {
    return 13;
  }
  getDaysInYear(t) {
    return 365 + Ry(t.year);
  }
  getYearsInEra(t) {
    return t.era === "AA" ? 9999 : 9991;
  }
  getEras() {
    return [
      "AA",
      "AM"
    ];
  }
  constructor() {
    this.identifier = "ethiopic";
  }
}
class cC extends Bd {
  fromJulianDay(t) {
    let [r, n, i] = Rd(ec, t);
    return r += tc, new tt(this, "AA", r, n, i);
  }
  getEras() {
    return [
      "AA"
    ];
  }
  getYearsInEra() {
    return 9999;
  }
  constructor(...t) {
    super(...t), this.identifier = "ethioaa";
  }
}
class dC extends Bd {
  fromJulianDay(t) {
    let [r, n, i] = Rd(Zh, t), a = "CE";
    return r <= 0 && (a = "BCE", r = 1 - r), new tt(this, a, r, n, i);
  }
  toJulianDay(t) {
    let r = t.year;
    return t.era === "BCE" && (r = 1 - r), Jo(Zh, r, t.month, t.day);
  }
  getDaysInMonth(t) {
    let r = t.year;
    return t.era === "BCE" && (r = 1 - r), By(r, t.month);
  }
  isInverseEra(t) {
    return t.era === "BCE";
  }
  balanceDate(t) {
    t.year <= 0 && (t.era = t.era === "BCE" ? "CE" : "BCE", t.year = 1 - t.year);
  }
  getEras() {
    return [
      "BCE",
      "CE"
    ];
  }
  getYearsInEra(t) {
    return t.era === "BCE" ? 9999 : 9715;
  }
  constructor(...t) {
    super(...t), this.identifier = "coptic";
  }
}
function My(e) {
  switch (e) {
    case "buddhist":
      return new Z6();
    case "ethiopic":
      return new Bd();
    case "ethioaa":
      return new cC();
    case "coptic":
      return new dC();
    case "hebrew":
      return new lC();
    case "indian":
      return new X6();
    case "islamic-civil":
      return new Id();
    case "islamic-tbla":
      return new tC();
    case "islamic-umalqura":
      return new nC();
    case "japanese":
      return new G6();
    case "persian":
      return new J6();
    case "roc":
      return new Y6();
    case "gregory":
    default:
      return new $t();
  }
}
let zu = /* @__PURE__ */ new Map();
class Yt {
  /** Formats a date as a string according to the locale and format options passed to the constructor. */
  format(t) {
    return this.formatter.format(t);
  }
  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */
  formatToParts(t) {
    return this.formatter.formatToParts(t);
  }
  /** Formats a date range as a string. */
  formatRange(t, r) {
    if (typeof this.formatter.formatRange == "function")
      return this.formatter.formatRange(t, r);
    if (r < t) throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(t)} – ${this.formatter.format(r)}`;
  }
  /** Formats a date range as an array of parts. */
  formatRangeToParts(t, r) {
    if (typeof this.formatter.formatRangeToParts == "function")
      return this.formatter.formatRangeToParts(t, r);
    if (r < t) throw new RangeError("End date must be >= start date");
    let n = this.formatter.formatToParts(t), i = this.formatter.formatToParts(r);
    return [
      ...n.map((a) => ({
        ...a,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...i.map((a) => ({
        ...a,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let t = this.formatter.resolvedOptions();
    return pC() && (this.resolvedHourCycle || (this.resolvedHourCycle = mC(t.locale, this.options)), t.hourCycle = this.resolvedHourCycle, t.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12"), t.calendar === "ethiopic-amete-alem" && (t.calendar = "ethioaa"), t;
  }
  constructor(t, r = {}) {
    this.formatter = Ny(t, r), this.options = r;
  }
}
const fC = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: "h11"
  },
  false: {}
};
function Ny(e, t = {}) {
  if (typeof t.hour12 == "boolean" && hC()) {
    t = {
      ...t
    };
    let i = fC[String(t.hour12)][e.split("-")[0]], a = t.hour12 ? "h12" : "h23";
    t.hourCycle = i ?? a, delete t.hour12;
  }
  let r = e + (t ? Object.entries(t).sort((i, a) => i[0] < a[0] ? -1 : 1).join() : "");
  if (zu.has(r)) return zu.get(r);
  let n = new Intl.DateTimeFormat(e, t);
  return zu.set(r, n), n;
}
let Ku = null;
function hC() {
  return Ku == null && (Ku = new Intl.DateTimeFormat("en-US", {
    hour: "numeric",
    hour12: !1
  }).format(new Date(2020, 2, 3, 0)) === "24"), Ku;
}
let Uu = null;
function pC() {
  return Uu == null && (Uu = new Intl.DateTimeFormat("fr", {
    hour: "numeric",
    hour12: !1
  }).resolvedOptions().hourCycle === "h12"), Uu;
}
function mC(e, t) {
  if (!t.timeStyle && !t.hour) return;
  e = e.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, ""), e += (e.includes("-u-") ? "" : "-u") + "-nu-latn";
  let r = Ny(e, {
    ...t,
    timeZone: void 0
    // use local timezone
  }), n = parseInt(r.formatToParts(new Date(2020, 2, 3, 0)).find((a) => a.type === "hour").value, 10), i = parseInt(r.formatToParts(new Date(2020, 2, 3, 23)).find((a) => a.type === "hour").value, 10);
  if (n === 0 && i === 23) return "h23";
  if (n === 24 && i === 23) return "h24";
  if (n === 0 && i === 11) return "h11";
  if (n === 12 && i === 11) return "h12";
  throw new Error("Unexpected hour cycle result");
}
function Qt(e) {
  e = Qv(e ?? {}, vC);
  let { locale: t } = ct();
  return G(() => new Yt(t, e), [
    t,
    e
  ]);
}
function vC(e, t) {
  if (e === t) return !0;
  let r = Object.keys(e), n = Object.keys(t);
  if (r.length !== n.length) return !1;
  for (let i of r)
    if (t[i] !== e[i]) return !1;
  return !0;
}
let qu = /* @__PURE__ */ new Map(), rc = !1;
try {
  rc = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch {
}
let Xo = !1;
try {
  Xo = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch {
}
const Ly = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
class yC {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(t) {
    let r = "";
    if (!rc && this.options.signDisplay != null ? r = bC(this.numberFormatter, this.options.signDisplay, t) : r = this.numberFormatter.format(t), this.options.style === "unit" && !Xo) {
      var n;
      let { unit: i, unitDisplay: a = "short", locale: o } = this.resolvedOptions();
      if (!i) return r;
      let s = (n = Ly[i]) === null || n === void 0 ? void 0 : n[a];
      r += s[o] || s.default;
    }
    return r;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(t) {
    return this.numberFormatter.formatToParts(t);
  }
  /** Formats a number range as a string. */
  formatRange(t, r) {
    if (typeof this.numberFormatter.formatRange == "function")
      return this.numberFormatter.formatRange(t, r);
    if (r < t) throw new RangeError("End date must be >= start date");
    return `${this.format(t)} – ${this.format(r)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(t, r) {
    if (typeof this.numberFormatter.formatRangeToParts == "function")
      return this.numberFormatter.formatRangeToParts(t, r);
    if (r < t) throw new RangeError("End date must be >= start date");
    let n = this.numberFormatter.formatToParts(t), i = this.numberFormatter.formatToParts(r);
    return [
      ...n.map((a) => ({
        ...a,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...i.map((a) => ({
        ...a,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let t = this.numberFormatter.resolvedOptions();
    return !rc && this.options.signDisplay != null && (t = {
      ...t,
      signDisplay: this.options.signDisplay
    }), !Xo && this.options.style === "unit" && (t = {
      ...t,
      style: "unit",
      unit: this.options.unit,
      unitDisplay: this.options.unitDisplay
    }), t;
  }
  constructor(t, r = {}) {
    this.numberFormatter = gC(t, r), this.options = r;
  }
}
function gC(e, t = {}) {
  let { numberingSystem: r } = t;
  if (r && e.includes("-nu-") && (e.includes("-u-") || (e += "-u-"), e += `-nu-${r}`), t.style === "unit" && !Xo) {
    var n;
    let { unit: o, unitDisplay: s = "short" } = t;
    if (!o) throw new Error('unit option must be provided with style: "unit"');
    if (!(!((n = Ly[o]) === null || n === void 0) && n[s])) throw new Error(`Unsupported unit ${o} with unitDisplay = ${s}`);
    t = {
      ...t,
      style: "decimal"
    };
  }
  let i = e + (t ? Object.entries(t).sort((o, s) => o[0] < s[0] ? -1 : 1).join() : "");
  if (qu.has(i)) return qu.get(i);
  let a = new Intl.NumberFormat(e, t);
  return qu.set(i, a), a;
}
function bC(e, t, r) {
  if (t === "auto") return e.format(r);
  if (t === "never") return e.format(Math.abs(r));
  {
    let n = !1;
    if (t === "always" ? n = r > 0 || Object.is(r, 0) : t === "exceptZero" && (Object.is(r, -0) || Object.is(r, 0) ? r = Math.abs(r) : n = r > 0), n) {
      let i = e.format(-r), a = e.format(r), o = i.replace(a, "").replace(/\u200e|\u061C/, "");
      return [
        ...o
      ].length !== 1 && console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case"), i.replace(a, "!!!").replace(o, "+").replace("!!!", a);
    } else return e.format(r);
  }
}
const $C = new RegExp("^.*\\(.*\\).*$"), xC = [
  "latn",
  "arab",
  "hanidec"
];
class Vy {
  /**
  * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
  */
  parse(t) {
    return Hu(this.locale, this.options, t).parse(t);
  }
  /**
  * Returns whether the given string could potentially be a valid number. This should be used to
  * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
  * of the minus/plus sign characters can be checked.
  */
  isValidPartialNumber(t, r, n) {
    return Hu(this.locale, this.options, t).isValidPartialNumber(t, r, n);
  }
  /**
  * Returns a numbering system for which the given string is valid in the current locale.
  * If no numbering system could be detected, the default numbering system for the current
  * locale is returned.
  */
  getNumberingSystem(t) {
    return Hu(this.locale, this.options, t).options.numberingSystem;
  }
  constructor(t, r = {}) {
    this.locale = t, this.options = r;
  }
}
const Yh = /* @__PURE__ */ new Map();
function Hu(e, t, r) {
  let n = Jh(e, t);
  if (!e.includes("-nu-") && !n.isValidPartialNumber(r)) {
    for (let i of xC) if (i !== n.options.numberingSystem) {
      let a = Jh(e + (e.includes("-u-") ? "-nu-" : "-u-nu-") + i, t);
      if (a.isValidPartialNumber(r)) return a;
    }
  }
  return n;
}
function Jh(e, t) {
  let r = e + (t ? Object.entries(t).sort((i, a) => i[0] < a[0] ? -1 : 1).join() : ""), n = Yh.get(r);
  return n || (n = new DC(e, t), Yh.set(r, n)), n;
}
class DC {
  parse(t) {
    let r = this.sanitize(t);
    if (this.symbols.group && (r = so(r, this.symbols.group, "")), this.symbols.decimal && (r = r.replace(this.symbols.decimal, ".")), this.symbols.minusSign && (r = r.replace(this.symbols.minusSign, "-")), r = r.replace(this.symbols.numeral, this.symbols.index), this.options.style === "percent") {
      let o = r.indexOf("-");
      r = r.replace("-", "");
      let s = r.indexOf(".");
      s === -1 && (s = r.length), r = r.replace(".", ""), s - 2 === 0 ? r = `0.${r}` : s - 2 === -1 ? r = `0.0${r}` : s - 2 === -2 ? r = "0.00" : r = `${r.slice(0, s - 2)}.${r.slice(s - 2)}`, o > -1 && (r = `-${r}`);
    }
    let n = r ? +r : NaN;
    if (isNaN(n)) return NaN;
    if (this.options.style === "percent") {
      var i, a;
      let o = {
        ...this.options,
        style: "decimal",
        minimumFractionDigits: Math.min(((i = this.options.minimumFractionDigits) !== null && i !== void 0 ? i : 0) + 2, 20),
        maximumFractionDigits: Math.min(((a = this.options.maximumFractionDigits) !== null && a !== void 0 ? a : 0) + 2, 20)
      };
      return new Vy(this.locale, o).parse(new yC(this.locale, o).format(n));
    }
    return this.options.currencySign === "accounting" && $C.test(t) && (n = -1 * n), n;
  }
  sanitize(t) {
    return t = t.replace(this.symbols.literals, ""), this.symbols.minusSign && (t = t.replace("-", this.symbols.minusSign)), this.options.numberingSystem === "arab" && (this.symbols.decimal && (t = t.replace(",", this.symbols.decimal), t = t.replace("،", this.symbols.decimal)), this.symbols.group && (t = so(t, ".", this.symbols.group))), this.options.locale === "fr-FR" && (t = so(t, ".", " ")), t;
  }
  isValidPartialNumber(t, r = -1 / 0, n = 1 / 0) {
    return t = this.sanitize(t), this.symbols.minusSign && t.startsWith(this.symbols.minusSign) && r < 0 ? t = t.slice(this.symbols.minusSign.length) : this.symbols.plusSign && t.startsWith(this.symbols.plusSign) && n > 0 && (t = t.slice(this.symbols.plusSign.length)), this.symbols.group && t.startsWith(this.symbols.group) || this.symbols.decimal && t.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0 ? !1 : (this.symbols.group && (t = so(t, this.symbols.group, "")), t = t.replace(this.symbols.numeral, ""), this.symbols.decimal && (t = t.replace(this.symbols.decimal, "")), t.length === 0);
  }
  constructor(t, r = {}) {
    this.locale = t, this.formatter = new Intl.NumberFormat(t, r), this.options = this.formatter.resolvedOptions(), this.symbols = wC(t, this.formatter, this.options, r);
    var n, i;
    this.options.style === "percent" && (((n = this.options.minimumFractionDigits) !== null && n !== void 0 ? n : 0) > 18 || ((i = this.options.maximumFractionDigits) !== null && i !== void 0 ? i : 0) > 18) && console.warn("NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.");
  }
}
const Xh = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]), EC = [
  0,
  4,
  2,
  1,
  11,
  20,
  3,
  7,
  100,
  21,
  0.1,
  1.1
];
function wC(e, t, r, n) {
  var i, a, o, s;
  let u = new Intl.NumberFormat(e, {
    ...r,
    minimumSignificantDigits: 1,
    maximumSignificantDigits: 21
  }), l = u.formatToParts(-10000.111), c = u.formatToParts(10000.111), d = EC.map((w) => u.formatToParts(w));
  var f;
  let h = (f = (i = l.find((w) => w.type === "minusSign")) === null || i === void 0 ? void 0 : i.value) !== null && f !== void 0 ? f : "-", p = (a = c.find((w) => w.type === "plusSign")) === null || a === void 0 ? void 0 : a.value;
  !p && ((n == null ? void 0 : n.signDisplay) === "exceptZero" || (n == null ? void 0 : n.signDisplay) === "always") && (p = "+");
  let g = (o = new Intl.NumberFormat(e, {
    ...r,
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  }).formatToParts(1e-3).find((w) => w.type === "decimal")) === null || o === void 0 ? void 0 : o.value, $ = (s = l.find((w) => w.type === "group")) === null || s === void 0 ? void 0 : s.value, m = l.filter((w) => !Xh.has(w.type)).map((w) => ep(w.value)), b = d.flatMap((w) => w.filter((E) => !Xh.has(E.type)).map((E) => ep(E.value))), D = [
    .../* @__PURE__ */ new Set([
      ...m,
      ...b
    ])
  ].sort((w, E) => E.length - w.length), S = D.length === 0 ? new RegExp("[\\p{White_Space}]", "gu") : new RegExp(`${D.join("|")}|[\\p{White_Space}]`, "gu"), P = [
    ...new Intl.NumberFormat(r.locale, {
      useGrouping: !1
    }).format(9876543210)
  ].reverse(), B = new Map(P.map((w, E) => [
    w,
    E
  ])), y = new RegExp(`[${P.join("")}]`, "g");
  return {
    minusSign: h,
    plusSign: p,
    decimal: g,
    group: $,
    literals: S,
    numeral: y,
    index: (w) => String(B.get(w))
  };
}
function so(e, t, r) {
  return e.replaceAll ? e.replaceAll(t, r) : e.split(t).join(r);
}
function ep(e) {
  return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
let Wu = /* @__PURE__ */ new Map();
function qs(e) {
  let { locale: t } = ct(), r = t + (e ? Object.entries(e).sort((i, a) => i[0] < a[0] ? -1 : 1).join() : "");
  if (Wu.has(r)) return Wu.get(r);
  let n = new Intl.Collator(t, e);
  return Wu.set(r, n), n;
}
function jy(e) {
  let t = qs({
    usage: "search",
    ...e
  }), r = be((a, o) => o.length === 0 ? !0 : (a = a.normalize("NFC"), o = o.normalize("NFC"), t.compare(a.slice(0, o.length), o) === 0), [
    t
  ]), n = be((a, o) => o.length === 0 ? !0 : (a = a.normalize("NFC"), o = o.normalize("NFC"), t.compare(a.slice(-o.length), o) === 0), [
    t
  ]), i = be((a, o) => {
    if (o.length === 0) return !0;
    a = a.normalize("NFC"), o = o.normalize("NFC");
    let s = 0, u = o.length;
    for (; s + u <= a.length; s++) {
      let l = a.slice(s, s + u);
      if (t.compare(o, l) === 0) return !0;
    }
    return !1;
  }, [
    t
  ]);
  return G(() => ({
    startsWith: r,
    endsWith: n,
    contains: i
  }), [
    r,
    n,
    i
  ]);
}
function CC(e, t) {
  let {
    elementType: r = "button",
    isDisabled: n,
    onPress: i,
    onPressStart: a,
    onPressEnd: o,
    onPressUp: s,
    onPressChange: u,
    preventFocusOnPress: l,
    allowFocusWhenDisabled: c,
    // @ts-ignore
    onClick: d,
    href: f,
    target: h,
    rel: p,
    type: v = "button"
  } = e, g;
  r === "button" ? g = {
    type: v,
    disabled: n
  } : g = {
    role: "button",
    tabIndex: n ? void 0 : 0,
    href: r === "a" && n ? void 0 : f,
    target: r === "a" ? h : void 0,
    type: r === "input" ? v : void 0,
    disabled: r === "input" ? n : void 0,
    "aria-disabled": !n || r === "input" ? void 0 : n,
    rel: r === "a" ? p : void 0
  };
  let { pressProps: $, isPressed: m } = Ia({
    onPressStart: a,
    onPressEnd: o,
    onPressChange: u,
    onPress: i,
    onPressUp: s,
    isDisabled: n,
    preventFocusOnPress: l,
    ref: t
  }), { focusableProps: b } = uy(e, t);
  c && (b.tabIndex = n ? -1 : b.tabIndex);
  let D = ye(b, $, Oe(e, {
    labelable: !0
  }));
  return {
    isPressed: m,
    buttonProps: ye(g, D, {
      "aria-haspopup": e["aria-haspopup"],
      "aria-expanded": e["aria-expanded"],
      "aria-controls": e["aria-controls"],
      "aria-pressed": e["aria-pressed"],
      onClick: (S) => {
        d && (d(S), console.warn("onClick is deprecated, please use onPress"));
      }
    })
  };
}
var zy = {};
zy = {
  dateRange: (e) => `${e.startDate} إلى ${e.endDate}`,
  dateSelected: (e) => `${e.date} المحدد`,
  finishRangeSelectionPrompt: "انقر لإنهاء عملية تحديد نطاق التاريخ",
  maximumDate: "آخر تاريخ متاح",
  minimumDate: "أول تاريخ متاح",
  next: "التالي",
  previous: "السابق",
  selectedDateDescription: (e) => `تاريخ محدد: ${e.date}`,
  selectedRangeDescription: (e) => `المدى الزمني المحدد: ${e.dateRange}`,
  startRangeSelectionPrompt: "انقر لبدء عملية تحديد نطاق التاريخ",
  todayDate: (e) => `اليوم، ${e.date}`,
  todayDateSelected: (e) => `اليوم، ${e.date} محدد`
};
var Ky = {};
Ky = {
  dateRange: (e) => `${e.startDate} до ${e.endDate}`,
  dateSelected: (e) => `Избрано е ${e.date}`,
  finishRangeSelectionPrompt: "Натиснете, за да довършите избора на времеви интервал",
  maximumDate: "Последна налична дата",
  minimumDate: "Първа налична дата",
  next: "Напред",
  previous: "Назад",
  selectedDateDescription: (e) => `Избрана дата: ${e.date}`,
  selectedRangeDescription: (e) => `Избран диапазон: ${e.dateRange}`,
  startRangeSelectionPrompt: "Натиснете, за да пристъпите към избора на времеви интервал",
  todayDate: (e) => `Днес, ${e.date}`,
  todayDateSelected: (e) => `Днес, ${e.date} са избрани`
};
var Uy = {};
Uy = {
  dateRange: (e) => `${e.startDate} až ${e.endDate}`,
  dateSelected: (e) => `Vybráno ${e.date}`,
  finishRangeSelectionPrompt: "Kliknutím dokončíte výběr rozsahu dat",
  maximumDate: "Poslední dostupné datum",
  minimumDate: "První dostupné datum",
  next: "Další",
  previous: "Předchozí",
  selectedDateDescription: (e) => `Vybrané datum: ${e.date}`,
  selectedRangeDescription: (e) => `Vybrané období: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknutím zahájíte výběr rozsahu dat",
  todayDate: (e) => `Dnes, ${e.date}`,
  todayDateSelected: (e) => `Dnes, vybráno ${e.date}`
};
var qy = {};
qy = {
  dateRange: (e) => `${e.startDate} til ${e.endDate}`,
  dateSelected: (e) => `${e.date} valgt`,
  finishRangeSelectionPrompt: "Klik for at fuldføre valg af datoområde",
  maximumDate: "Sidste ledige dato",
  minimumDate: "Første ledige dato",
  next: "Næste",
  previous: "Forrige",
  selectedDateDescription: (e) => `Valgt dato: ${e.date}`,
  selectedRangeDescription: (e) => `Valgt interval: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klik for at starte valg af datoområde",
  todayDate: (e) => `I dag, ${e.date}`,
  todayDateSelected: (e) => `I dag, ${e.date} valgt`
};
var Hy = {};
Hy = {
  dateRange: (e) => `${e.startDate} bis ${e.endDate}`,
  dateSelected: (e) => `${e.date} ausgewählt`,
  finishRangeSelectionPrompt: "Klicken, um die Auswahl des Datumsbereichs zu beenden",
  maximumDate: "Letztes verfügbares Datum",
  minimumDate: "Erstes verfügbares Datum",
  next: "Weiter",
  previous: "Zurück",
  selectedDateDescription: (e) => `Ausgewähltes Datum: ${e.date}`,
  selectedRangeDescription: (e) => `Ausgewählter Bereich: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klicken, um die Auswahl des Datumsbereichs zu beginnen",
  todayDate: (e) => `Heute, ${e.date}`,
  todayDateSelected: (e) => `Heute, ${e.date} ausgewählt`
};
var Wy = {};
Wy = {
  dateRange: (e) => `${e.startDate} έως ${e.endDate}`,
  dateSelected: (e) => `Επιλέχθηκε ${e.date}`,
  finishRangeSelectionPrompt: "Κάντε κλικ για να ολοκληρώσετε την επιλογή εύρους ημερομηνιών",
  maximumDate: "Τελευταία διαθέσιμη ημερομηνία",
  minimumDate: "Πρώτη διαθέσιμη ημερομηνία",
  next: "Επόμενο",
  previous: "Προηγούμενο",
  selectedDateDescription: (e) => `Επιλεγμένη ημερομηνία: ${e.date}`,
  selectedRangeDescription: (e) => `Επιλεγμένο εύρος: ${e.dateRange}`,
  startRangeSelectionPrompt: "Κάντε κλικ για να ξεκινήσετε την επιλογή εύρους ημερομηνιών",
  todayDate: (e) => `Σήμερα, ${e.date}`,
  todayDateSelected: (e) => `Σήμερα, επιλέχτηκε ${e.date}`
};
var Qy = {};
Qy = {
  previous: "Previous",
  next: "Next",
  selectedDateDescription: (e) => `Selected Date: ${e.date}`,
  selectedRangeDescription: (e) => `Selected Range: ${e.dateRange}`,
  todayDate: (e) => `Today, ${e.date}`,
  todayDateSelected: (e) => `Today, ${e.date} selected`,
  dateSelected: (e) => `${e.date} selected`,
  startRangeSelectionPrompt: "Click to start selecting date range",
  finishRangeSelectionPrompt: "Click to finish selecting date range",
  minimumDate: "First available date",
  maximumDate: "Last available date",
  dateRange: (e) => `${e.startDate} to ${e.endDate}`
};
var Gy = {};
Gy = {
  dateRange: (e) => `${e.startDate} a ${e.endDate}`,
  dateSelected: (e) => `${e.date} seleccionado`,
  finishRangeSelectionPrompt: "Haga clic para terminar de seleccionar rango de fechas",
  maximumDate: "Última fecha disponible",
  minimumDate: "Primera fecha disponible",
  next: "Siguiente",
  previous: "Anterior",
  selectedDateDescription: (e) => `Fecha seleccionada: ${e.date}`,
  selectedRangeDescription: (e) => `Intervalo seleccionado: ${e.dateRange}`,
  startRangeSelectionPrompt: "Haga clic para comenzar a seleccionar un rango de fechas",
  todayDate: (e) => `Hoy, ${e.date}`,
  todayDateSelected: (e) => `Hoy, ${e.date} seleccionado`
};
var Zy = {};
Zy = {
  dateRange: (e) => `${e.startDate} kuni ${e.endDate}`,
  dateSelected: (e) => `${e.date} valitud`,
  finishRangeSelectionPrompt: "Klõpsake kuupäevavahemiku valimise lõpetamiseks",
  maximumDate: "Viimane saadaolev kuupäev",
  minimumDate: "Esimene saadaolev kuupäev",
  next: "Järgmine",
  previous: "Eelmine",
  selectedDateDescription: (e) => `Valitud kuupäev: ${e.date}`,
  selectedRangeDescription: (e) => `Valitud vahemik: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klõpsake kuupäevavahemiku valimiseks",
  todayDate: (e) => `Täna, ${e.date}`,
  todayDateSelected: (e) => `Täna, ${e.date} valitud`
};
var Yy = {};
Yy = {
  dateRange: (e) => `${e.startDate} – ${e.endDate}`,
  dateSelected: (e) => `${e.date} valittu`,
  finishRangeSelectionPrompt: "Lopeta päivämääräalueen valinta napsauttamalla tätä.",
  maximumDate: "Viimeinen varattavissa oleva päivämäärä",
  minimumDate: "Ensimmäinen varattavissa oleva päivämäärä",
  next: "Seuraava",
  previous: "Edellinen",
  selectedDateDescription: (e) => `Valittu päivämäärä: ${e.date}`,
  selectedRangeDescription: (e) => `Valittu aikaväli: ${e.dateRange}`,
  startRangeSelectionPrompt: "Aloita päivämääräalueen valinta napsauttamalla tätä.",
  todayDate: (e) => `Tänään, ${e.date}`,
  todayDateSelected: (e) => `Tänään, ${e.date} valittu`
};
var Jy = {};
Jy = {
  dateRange: (e) => `${e.startDate} à ${e.endDate}`,
  dateSelected: (e) => `${e.date} sélectionné`,
  finishRangeSelectionPrompt: "Cliquer pour finir de sélectionner la plage de dates",
  maximumDate: "Dernière date disponible",
  minimumDate: "Première date disponible",
  next: "Suivant",
  previous: "Précédent",
  selectedDateDescription: (e) => `Date sélectionnée : ${e.date}`,
  selectedRangeDescription: (e) => `Plage sélectionnée : ${e.dateRange}`,
  startRangeSelectionPrompt: "Cliquer pour commencer à sélectionner la plage de dates",
  todayDate: (e) => `Aujourd'hui, ${e.date}`,
  todayDateSelected: (e) => `Aujourd’hui, ${e.date} sélectionné`
};
var Xy = {};
Xy = {
  dateRange: (e) => `${e.startDate} עד ${e.endDate}`,
  dateSelected: (e) => `${e.date} נבחר`,
  finishRangeSelectionPrompt: "חץ כדי לסיים את בחירת טווח התאריכים",
  maximumDate: "תאריך פנוי אחרון",
  minimumDate: "תאריך פנוי ראשון",
  next: "הבא",
  previous: "הקודם",
  selectedDateDescription: (e) => `תאריך נבחר: ${e.date}`,
  selectedRangeDescription: (e) => `טווח נבחר: ${e.dateRange}`,
  startRangeSelectionPrompt: "לחץ כדי להתחיל בבחירת טווח התאריכים",
  todayDate: (e) => `היום, ${e.date}`,
  todayDateSelected: (e) => `היום, ${e.date} נבחר`
};
var eg = {};
eg = {
  dateRange: (e) => `${e.startDate} do ${e.endDate}`,
  dateSelected: (e) => `${e.date} odabran`,
  finishRangeSelectionPrompt: "Kliknite da dovršite raspon odabranih datuma",
  maximumDate: "Posljednji raspoloživi datum",
  minimumDate: "Prvi raspoloživi datum",
  next: "Sljedeći",
  previous: "Prethodni",
  selectedDateDescription: (e) => `Odabrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Odabrani raspon: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknite da započnete raspon odabranih datuma",
  todayDate: (e) => `Danas, ${e.date}`,
  todayDateSelected: (e) => `Danas, odabran ${e.date}`
};
var tg = {};
tg = {
  dateRange: (e) => `${e.startDate}–${e.endDate}`,
  dateSelected: (e) => `${e.date} kiválasztva`,
  finishRangeSelectionPrompt: "Kattintson a dátumtartomány kijelölésének befejezéséhez",
  maximumDate: "Utolsó elérhető dátum",
  minimumDate: "Az első elérhető dátum",
  next: "Következő",
  previous: "Előző",
  selectedDateDescription: (e) => `Kijelölt dátum: ${e.date}`,
  selectedRangeDescription: (e) => `Kijelölt tartomány: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kattintson a dátumtartomány kijelölésének indításához",
  todayDate: (e) => `Ma, ${e.date}`,
  todayDateSelected: (e) => `Ma, ${e.date} kijelölve`
};
var rg = {};
rg = {
  dateRange: (e) => `Da ${e.startDate} a ${e.endDate}`,
  dateSelected: (e) => `${e.date} selezionata`,
  finishRangeSelectionPrompt: "Fai clic per completare la selezione dell’intervallo di date",
  maximumDate: "Ultima data disponibile",
  minimumDate: "Prima data disponibile",
  next: "Successivo",
  previous: "Precedente",
  selectedDateDescription: (e) => `Data selezionata: ${e.date}`,
  selectedRangeDescription: (e) => `Intervallo selezionato: ${e.dateRange}`,
  startRangeSelectionPrompt: "Fai clic per selezionare l’intervallo di date",
  todayDate: (e) => `Oggi, ${e.date}`,
  todayDateSelected: (e) => `Oggi, ${e.date} selezionata`
};
var ng = {};
ng = {
  dateRange: (e) => `${e.startDate} から ${e.endDate}`,
  dateSelected: (e) => `${e.date} を選択`,
  finishRangeSelectionPrompt: "クリックして日付範囲の選択を終了",
  maximumDate: "最終利用可能日",
  minimumDate: "最初の利用可能日",
  next: "次へ",
  previous: "前へ",
  selectedDateDescription: (e) => `選択した日付 : ${e.date}`,
  selectedRangeDescription: (e) => `選択範囲 : ${e.dateRange}`,
  startRangeSelectionPrompt: "クリックして日付範囲の選択を開始",
  todayDate: (e) => `本日、${e.date}`,
  todayDateSelected: (e) => `本日、${e.date} を選択`
};
var ig = {};
ig = {
  dateRange: (e) => `${e.startDate} ~ ${e.endDate}`,
  dateSelected: (e) => `${e.date} 선택됨`,
  finishRangeSelectionPrompt: "날짜 범위 선택을 완료하려면 클릭하십시오.",
  maximumDate: "마지막으로 사용 가능한 일자",
  minimumDate: "처음으로 사용 가능한 일자",
  next: "다음",
  previous: "이전",
  selectedDateDescription: (e) => `선택 일자: ${e.date}`,
  selectedRangeDescription: (e) => `선택 범위: ${e.dateRange}`,
  startRangeSelectionPrompt: "날짜 범위 선택을 시작하려면 클릭하십시오.",
  todayDate: (e) => `오늘, ${e.date}`,
  todayDateSelected: (e) => `오늘, ${e.date} 선택됨`
};
var ag = {};
ag = {
  dateRange: (e) => `Nuo ${e.startDate} iki ${e.endDate}`,
  dateSelected: (e) => `Pasirinkta ${e.date}`,
  finishRangeSelectionPrompt: "Spustelėkite, kad baigtumėte pasirinkti datų intervalą",
  maximumDate: "Paskutinė galima data",
  minimumDate: "Pirmoji galima data",
  next: "Paskesnis",
  previous: "Ankstesnis",
  selectedDateDescription: (e) => `Pasirinkta data: ${e.date}`,
  selectedRangeDescription: (e) => `Pasirinktas intervalas: ${e.dateRange}`,
  startRangeSelectionPrompt: "Spustelėkite, kad pradėtumėte pasirinkti datų intervalą",
  todayDate: (e) => `Šiandien, ${e.date}`,
  todayDateSelected: (e) => `Šiandien, pasirinkta ${e.date}`
};
var og = {};
og = {
  dateRange: (e) => `No ${e.startDate} līdz ${e.endDate}`,
  dateSelected: (e) => `Atlasīts: ${e.date}`,
  finishRangeSelectionPrompt: "Noklikšķiniet, lai pabeigtu datumu diapazona atlasi",
  maximumDate: "Pēdējais pieejamais datums",
  minimumDate: "Pirmais pieejamais datums",
  next: "Tālāk",
  previous: "Atpakaļ",
  selectedDateDescription: (e) => `Atlasītais datums: ${e.date}`,
  selectedRangeDescription: (e) => `Atlasītais diapazons: ${e.dateRange}`,
  startRangeSelectionPrompt: "Noklikšķiniet, lai sāktu datumu diapazona atlasi",
  todayDate: (e) => `Šodien, ${e.date}`,
  todayDateSelected: (e) => `Atlasīta šodiena, ${e.date}`
};
var sg = {};
sg = {
  dateRange: (e) => `${e.startDate} til ${e.endDate}`,
  dateSelected: (e) => `${e.date} valgt`,
  finishRangeSelectionPrompt: "Klikk for å fullføre valg av datoområde",
  maximumDate: "Siste tilgjengelige dato",
  minimumDate: "Første tilgjengelige dato",
  next: "Neste",
  previous: "Forrige",
  selectedDateDescription: (e) => `Valgt dato: ${e.date}`,
  selectedRangeDescription: (e) => `Valgt område: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klikk for å starte valg av datoområde",
  todayDate: (e) => `I dag, ${e.date}`,
  todayDateSelected: (e) => `I dag, ${e.date} valgt`
};
var ug = {};
ug = {
  dateRange: (e) => `${e.startDate} tot ${e.endDate}`,
  dateSelected: (e) => `${e.date} geselecteerd`,
  finishRangeSelectionPrompt: "Klik om de selectie van het datumbereik te voltooien",
  maximumDate: "Laatste beschikbare datum",
  minimumDate: "Eerste beschikbare datum",
  next: "Volgende",
  previous: "Vorige",
  selectedDateDescription: (e) => `Geselecteerde datum: ${e.date}`,
  selectedRangeDescription: (e) => `Geselecteerd bereik: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klik om het datumbereik te selecteren",
  todayDate: (e) => `Vandaag, ${e.date}`,
  todayDateSelected: (e) => `Vandaag, ${e.date} geselecteerd`
};
var lg = {};
lg = {
  dateRange: (e) => `${e.startDate} do ${e.endDate}`,
  dateSelected: (e) => `Wybrano ${e.date}`,
  finishRangeSelectionPrompt: "Kliknij, aby zakończyć wybór zakresu dat",
  maximumDate: "Ostatnia dostępna data",
  minimumDate: "Pierwsza dostępna data",
  next: "Dalej",
  previous: "Wstecz",
  selectedDateDescription: (e) => `Wybrana data: ${e.date}`,
  selectedRangeDescription: (e) => `Wybrany zakres: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknij, aby rozpocząć wybór zakresu dat",
  todayDate: (e) => `Dzisiaj, ${e.date}`,
  todayDateSelected: (e) => `Dzisiaj wybrano ${e.date}`
};
var cg = {};
cg = {
  dateRange: (e) => `${e.startDate} a ${e.endDate}`,
  dateSelected: (e) => `${e.date} selecionado`,
  finishRangeSelectionPrompt: "Clique para concluir a seleção do intervalo de datas",
  maximumDate: "Última data disponível",
  minimumDate: "Primeira data disponível",
  next: "Próximo",
  previous: "Anterior",
  selectedDateDescription: (e) => `Data selecionada: ${e.date}`,
  selectedRangeDescription: (e) => `Intervalo selecionado: ${e.dateRange}`,
  startRangeSelectionPrompt: "Clique para iniciar a seleção do intervalo de datas",
  todayDate: (e) => `Hoje, ${e.date}`,
  todayDateSelected: (e) => `Hoje, ${e.date} selecionado`
};
var dg = {};
dg = {
  dateRange: (e) => `${e.startDate} a ${e.endDate}`,
  dateSelected: (e) => `${e.date} selecionado`,
  finishRangeSelectionPrompt: "Clique para terminar de selecionar o intervalo de datas",
  maximumDate: "Última data disponível",
  minimumDate: "Primeira data disponível",
  next: "Próximo",
  previous: "Anterior",
  selectedDateDescription: (e) => `Data selecionada: ${e.date}`,
  selectedRangeDescription: (e) => `Intervalo selecionado: ${e.dateRange}`,
  startRangeSelectionPrompt: "Clique para começar a selecionar o intervalo de datas",
  todayDate: (e) => `Hoje, ${e.date}`,
  todayDateSelected: (e) => `Hoje, ${e.date} selecionado`
};
var fg = {};
fg = {
  dateRange: (e) => `De la ${e.startDate} până la ${e.endDate}`,
  dateSelected: (e) => `${e.date} selectată`,
  finishRangeSelectionPrompt: "Apăsaţi pentru a finaliza selecţia razei pentru dată",
  maximumDate: "Ultima dată disponibilă",
  minimumDate: "Prima dată disponibilă",
  next: "Următorul",
  previous: "Înainte",
  selectedDateDescription: (e) => `Dată selectată: ${e.date}`,
  selectedRangeDescription: (e) => `Interval selectat: ${e.dateRange}`,
  startRangeSelectionPrompt: "Apăsaţi pentru a începe selecţia razei pentru dată",
  todayDate: (e) => `Astăzi, ${e.date}`,
  todayDateSelected: (e) => `Azi, ${e.date} selectată`
};
var hg = {};
hg = {
  dateRange: (e) => `С ${e.startDate} по ${e.endDate}`,
  dateSelected: (e) => `Выбрано ${e.date}`,
  finishRangeSelectionPrompt: "Щелкните, чтобы завершить выбор диапазона дат",
  maximumDate: "Последняя доступная дата",
  minimumDate: "Первая доступная дата",
  next: "Далее",
  previous: "Назад",
  selectedDateDescription: (e) => `Выбранная дата: ${e.date}`,
  selectedRangeDescription: (e) => `Выбранный диапазон: ${e.dateRange}`,
  startRangeSelectionPrompt: "Щелкните, чтобы начать выбор диапазона дат",
  todayDate: (e) => `Сегодня, ${e.date}`,
  todayDateSelected: (e) => `Сегодня, выбрано ${e.date}`
};
var pg = {};
pg = {
  dateRange: (e) => `Od ${e.startDate} do ${e.endDate}`,
  dateSelected: (e) => `Vybratý dátum ${e.date}`,
  finishRangeSelectionPrompt: "Kliknutím dokončíte výber rozsahu dátumov",
  maximumDate: "Posledný dostupný dátum",
  minimumDate: "Prvý dostupný dátum",
  next: "Nasledujúce",
  previous: "Predchádzajúce",
  selectedDateDescription: (e) => `Vybratý dátum: ${e.date}`,
  selectedRangeDescription: (e) => `Vybratý rozsah: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknutím spustíte výber rozsahu dátumov",
  todayDate: (e) => `Dnes ${e.date}`,
  todayDateSelected: (e) => `Vybratý dnešný dátum ${e.date}`
};
var mg = {};
mg = {
  dateRange: (e) => `${e.startDate} do ${e.endDate}`,
  dateSelected: (e) => `${e.date} izbrano`,
  finishRangeSelectionPrompt: "Kliknite za dokončanje izbire datumskega obsega",
  maximumDate: "Zadnji razpoložljivi datum",
  minimumDate: "Prvi razpoložljivi datum",
  next: "Naprej",
  previous: "Nazaj",
  selectedDateDescription: (e) => `Izbrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Izbrano območje: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknite za začetek izbire datumskega obsega",
  todayDate: (e) => `Danes, ${e.date}`,
  todayDateSelected: (e) => `Danes, ${e.date} izbrano`
};
var vg = {};
vg = {
  dateRange: (e) => `${e.startDate} do ${e.endDate}`,
  dateSelected: (e) => `${e.date} izabran`,
  finishRangeSelectionPrompt: "Kliknite da dovršite opseg izabranih datuma",
  maximumDate: "Zadnji raspoloživi datum",
  minimumDate: "Prvi raspoloživi datum",
  next: "Sledeći",
  previous: "Prethodni",
  selectedDateDescription: (e) => `Izabrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Izabrani period: ${e.dateRange}`,
  startRangeSelectionPrompt: "Kliknite da započnete opseg izabranih datuma",
  todayDate: (e) => `Danas, ${e.date}`,
  todayDateSelected: (e) => `Danas, izabran ${e.date}`
};
var yg = {};
yg = {
  dateRange: (e) => `${e.startDate} till ${e.endDate}`,
  dateSelected: (e) => `${e.date} har valts`,
  finishRangeSelectionPrompt: "Klicka för att avsluta val av datumintervall",
  maximumDate: "Sista tillgängliga datum",
  minimumDate: "Första tillgängliga datum",
  next: "Nästa",
  previous: "Föregående",
  selectedDateDescription: (e) => `Valt datum: ${e.date}`,
  selectedRangeDescription: (e) => `Valt intervall: ${e.dateRange}`,
  startRangeSelectionPrompt: "Klicka för att välja datumintervall",
  todayDate: (e) => `Idag, ${e.date}`,
  todayDateSelected: (e) => `Idag, ${e.date} har valts`
};
var gg = {};
gg = {
  dateRange: (e) => `${e.startDate} - ${e.endDate}`,
  dateSelected: (e) => `${e.date} seçildi`,
  finishRangeSelectionPrompt: "Tarih aralığı seçimini tamamlamak için tıklayın",
  maximumDate: "Son müsait tarih",
  minimumDate: "İlk müsait tarih",
  next: "Sonraki",
  previous: "Önceki",
  selectedDateDescription: (e) => `Seçilen Tarih: ${e.date}`,
  selectedRangeDescription: (e) => `Seçilen Aralık: ${e.dateRange}`,
  startRangeSelectionPrompt: "Tarih aralığı seçimini başlatmak için tıklayın",
  todayDate: (e) => `Bugün, ${e.date}`,
  todayDateSelected: (e) => `Bugün, ${e.date} seçildi`
};
var bg = {};
bg = {
  dateRange: (e) => `${e.startDate} — ${e.endDate}`,
  dateSelected: (e) => `Вибрано ${e.date}`,
  finishRangeSelectionPrompt: "Натисніть, щоб завершити вибір діапазону дат",
  maximumDate: "Остання доступна дата",
  minimumDate: "Перша доступна дата",
  next: "Наступний",
  previous: "Попередній",
  selectedDateDescription: (e) => `Вибрана дата: ${e.date}`,
  selectedRangeDescription: (e) => `Вибраний діапазон: ${e.dateRange}`,
  startRangeSelectionPrompt: "Натисніть, щоб почати вибір діапазону дат",
  todayDate: (e) => `Сьогодні, ${e.date}`,
  todayDateSelected: (e) => `Сьогодні, вибрано ${e.date}`
};
var $g = {};
$g = {
  dateRange: (e) => `${e.startDate} 至 ${e.endDate}`,
  dateSelected: (e) => `已选择 ${e.date}`,
  finishRangeSelectionPrompt: "单击以完成选择日期范围",
  maximumDate: "最后一个可用日期",
  minimumDate: "第一个可用日期",
  next: "下一页",
  previous: "上一页",
  selectedDateDescription: (e) => `选定的日期：${e.date}`,
  selectedRangeDescription: (e) => `选定的范围：${e.dateRange}`,
  startRangeSelectionPrompt: "单击以开始选择日期范围",
  todayDate: (e) => `今天，即 ${e.date}`,
  todayDateSelected: (e) => `已选择今天，即 ${e.date}`
};
var xg = {};
xg = {
  dateRange: (e) => `${e.startDate} 至 ${e.endDate}`,
  dateSelected: (e) => `已選取 ${e.date}`,
  finishRangeSelectionPrompt: "按一下以完成選取日期範圍",
  maximumDate: "最後一個可用日期",
  minimumDate: "第一個可用日期",
  next: "下一頁",
  previous: "上一頁",
  selectedDateDescription: (e) => `選定的日期：${e.date}`,
  selectedRangeDescription: (e) => `選定的範圍：${e.dateRange}`,
  startRangeSelectionPrompt: "按一下以開始選取日期範圍",
  todayDate: (e) => `今天，${e.date}`,
  todayDateSelected: (e) => `已選取今天，${e.date}`
};
var Ba = {};
Ba = {
  "ar-AE": zy,
  "bg-BG": Ky,
  "cs-CZ": Uy,
  "da-DK": qy,
  "de-DE": Hy,
  "el-GR": Wy,
  "en-US": Qy,
  "es-ES": Gy,
  "et-EE": Zy,
  "fi-FI": Yy,
  "fr-FR": Jy,
  "he-IL": Xy,
  "hr-HR": eg,
  "hu-HU": tg,
  "it-IT": rg,
  "ja-JP": ng,
  "ko-KR": ig,
  "lt-LT": ag,
  "lv-LV": og,
  "nb-NO": sg,
  "nl-NL": ug,
  "pl-PL": lg,
  "pt-BR": cg,
  "pt-PT": dg,
  "ro-RO": fg,
  "ru-RU": hg,
  "sk-SK": pg,
  "sl-SI": mg,
  "sr-SP": vg,
  "sv-SE": yg,
  "tr-TR": gg,
  "uk-UA": bg,
  "zh-CN": $g,
  "zh-TW": xg
};
function Dg(e) {
  return e && e.__esModule ? e.default : e;
}
const Md = /* @__PURE__ */ new WeakMap();
function ga(e) {
  return (e == null ? void 0 : e.calendar.identifier) === "gregory" && e.era === "BC" ? "short" : void 0;
}
function SC(e) {
  let t = qt(Dg(Ba), "@react-aria/calendar"), r, n;
  "highlightedRange" in e ? { start: r, end: n } = e.highlightedRange || {} : r = n = e.value;
  let i = Qt({
    weekday: "long",
    month: "long",
    year: "numeric",
    day: "numeric",
    era: ga(r) || ga(n),
    timeZone: e.timeZone
  }), a = "anchorDate" in e ? e.anchorDate : null;
  return G(() => {
    if (!a && r && n)
      if (et(r, n)) {
        let o = i.format(r.toDate(e.timeZone));
        return t.format("selectedDateDescription", {
          date: o
        });
      } else {
        let o = ic(i, t, r, n, e.timeZone);
        return t.format("selectedRangeDescription", {
          dateRange: o
        });
      }
    return "";
  }, [
    r,
    n,
    a,
    e.timeZone,
    t,
    i
  ]);
}
function nc(e, t, r, n) {
  let i = qt(Dg(Ba), "@react-aria/calendar"), a = ga(e) || ga(t), o = Qt({
    month: "long",
    year: "numeric",
    era: a,
    calendar: e.calendar.identifier,
    timeZone: r
  }), s = Qt({
    month: "long",
    year: "numeric",
    day: "numeric",
    era: a,
    calendar: e.calendar.identifier,
    timeZone: r
  });
  return G(() => {
    if (et(e, br(e))) {
      if (et(t, li(e))) return o.format(e.toDate(r));
      if (et(t, li(t))) return n ? ic(o, i, e, t, r) : o.formatRange(e.toDate(r), t.toDate(r));
    }
    return n ? ic(s, i, e, t, r) : s.formatRange(e.toDate(r), t.toDate(r));
  }, [
    e,
    t,
    o,
    s,
    i,
    r,
    n
  ]);
}
function ic(e, t, r, n, i) {
  let a = e.formatRangeToParts(r.toDate(i), n.toDate(i)), o = -1;
  for (let l = 0; l < a.length; l++) {
    let c = a[l];
    if (c.source === "shared" && c.type === "literal") o = l;
    else if (c.source === "endRange") break;
  }
  let s = "", u = "";
  for (let l = 0; l < a.length; l++)
    l < o ? s += a[l].value : l > o && (u += a[l].value);
  return t.format("dateRange", {
    startDate: s,
    endDate: u
  });
}
const Eg = 7e3;
let Xi = null;
function Xn(e, t = "assertive", r = Eg) {
  Xi || (Xi = new PC()), Xi.announce(e, t, r);
}
function kC(e) {
  Xi && Xi.clear(e);
}
class PC {
  createLog(t) {
    let r = document.createElement("div");
    return r.setAttribute("role", "log"), r.setAttribute("aria-live", t), r.setAttribute("aria-relevant", "additions"), r;
  }
  destroy() {
    this.node && (document.body.removeChild(this.node), this.node = null);
  }
  announce(t, r = "assertive", n = Eg) {
    if (!this.node) return;
    let i = document.createElement("div");
    i.textContent = t, r === "assertive" ? this.assertiveLog.appendChild(i) : this.politeLog.appendChild(i), t !== "" && setTimeout(() => {
      i.remove();
    }, n);
  }
  clear(t) {
    this.node && ((!t || t === "assertive") && (this.assertiveLog.innerHTML = ""), (!t || t === "polite") && (this.politeLog.innerHTML = ""));
  }
  constructor() {
    this.node = document.createElement("div"), this.node.dataset.liveAnnouncer = "true", Object.assign(this.node.style, {
      border: 0,
      clip: "rect(0 0 0 0)",
      clipPath: "inset(50%)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      whiteSpace: "nowrap"
    }), this.assertiveLog = this.createLog("assertive"), this.node.appendChild(this.assertiveLog), this.politeLog = this.createLog("polite"), this.node.appendChild(this.politeLog), document.body.prepend(this.node);
  }
}
function TC(e) {
  return e && e.__esModule ? e.default : e;
}
function AC(e, t) {
  let r = qt(TC(Ba), "@react-aria/calendar"), n = Oe(e), i = nc(t.visibleRange.start, t.visibleRange.end, t.timeZone, !1), a = nc(t.visibleRange.start, t.visibleRange.end, t.timeZone, !0);
  gh(() => {
    t.isFocused || Xn(a);
  }, [
    a
  ]);
  let o = SC(t);
  gh(() => {
    o && Xn(o, "polite", 4e3);
  }, [
    o
  ]);
  let s = ui([
    !!e.errorMessage,
    e.isInvalid,
    e.validationState
  ]);
  Md.set(t, {
    ariaLabel: e["aria-label"],
    ariaLabelledBy: e["aria-labelledby"],
    errorMessageId: s,
    selectedDateDescription: o
  });
  let [u, l] = ee(!1), c = e.isDisabled || t.isNextVisibleRangeInvalid();
  c && u && (l(!1), t.setFocused(!0));
  let [d, f] = ee(!1), h = e.isDisabled || t.isPreviousVisibleRangeInvalid();
  h && d && (f(!1), t.setFocused(!0));
  let p = hn({
    id: e.id,
    "aria-label": [
      e["aria-label"],
      a
    ].filter(Boolean).join(", "),
    "aria-labelledby": e["aria-labelledby"]
  });
  return {
    calendarProps: ye(n, p, {
      role: "application",
      "aria-describedby": e["aria-describedby"] || void 0
    }),
    nextButtonProps: {
      onPress: () => t.focusNextPage(),
      "aria-label": r.format("next"),
      isDisabled: c,
      onFocusChange: l
    },
    prevButtonProps: {
      onPress: () => t.focusPreviousPage(),
      "aria-label": r.format("previous"),
      isDisabled: h,
      onFocusChange: f
    },
    errorMessageProps: {
      id: s
    },
    title: i
  };
}
function _C(e, t, r) {
  let n = AC(e, t), i = q(!1), a = q(typeof window < "u" ? window : null);
  return Gn(a, "pointerdown", (s) => {
    i.current = s.width === 0 && s.height === 0;
  }), Gn(a, "pointerup", (s) => {
    if (i.current) {
      i.current = !1;
      return;
    }
    if (t.setDragging(!1), !t.anchorDate) return;
    let u = s.target;
    r.current && r.current.contains(document.activeElement) && (!r.current.contains(u) || !u.closest('button, [role="button"]')) && t.selectFocusedDate();
  }), n.calendarProps.onBlur = (s) => {
    r.current && (!s.relatedTarget || !r.current.contains(s.relatedTarget)) && t.anchorDate && t.selectFocusedDate();
  }, Gn(r, "touchmove", (s) => {
    t.isDragging && s.preventDefault();
  }, {
    passive: !1,
    capture: !0
  }), n;
}
function FC(e, t) {
  let { startDate: r = t.visibleRange.start, endDate: n = t.visibleRange.end } = e, { direction: i } = ct(), a = (h) => {
    switch (h.key) {
      case "Enter":
      case " ":
        h.preventDefault(), t.selectFocusedDate();
        break;
      case "PageUp":
        h.preventDefault(), h.stopPropagation(), t.focusPreviousSection(h.shiftKey);
        break;
      case "PageDown":
        h.preventDefault(), h.stopPropagation(), t.focusNextSection(h.shiftKey);
        break;
      case "End":
        h.preventDefault(), h.stopPropagation(), t.focusSectionEnd();
        break;
      case "Home":
        h.preventDefault(), h.stopPropagation(), t.focusSectionStart();
        break;
      case "ArrowLeft":
        h.preventDefault(), h.stopPropagation(), i === "rtl" ? t.focusNextDay() : t.focusPreviousDay();
        break;
      case "ArrowUp":
        h.preventDefault(), h.stopPropagation(), t.focusPreviousRow();
        break;
      case "ArrowRight":
        h.preventDefault(), h.stopPropagation(), i === "rtl" ? t.focusPreviousDay() : t.focusNextDay();
        break;
      case "ArrowDown":
        h.preventDefault(), h.stopPropagation(), t.focusNextRow();
        break;
      case "Escape":
        "setAnchorDate" in t && (h.preventDefault(), t.setAnchorDate(null));
        break;
    }
  }, o = nc(r, n, t.timeZone, !0), { ariaLabel: s, ariaLabelledBy: u } = Md.get(t), l = hn({
    "aria-label": [
      s,
      o
    ].filter(Boolean).join(", "),
    "aria-labelledby": u
  }), c = Qt({
    weekday: e.weekdayStyle || "narrow",
    timeZone: t.timeZone
  }), { locale: d } = ct(), f = G(() => {
    let h = yn(Ks(t.timeZone), d);
    return [
      ...new Array(7).keys()
    ].map((p) => {
      let g = h.add({
        days: p
      }).toDate(t.timeZone);
      return c.format(g);
    });
  }, [
    d,
    t.timeZone,
    c
  ]);
  return {
    gridProps: ye(l, {
      role: "grid",
      "aria-readonly": t.isReadOnly || null,
      "aria-disabled": t.isDisabled || null,
      "aria-multiselectable": "highlightedRange" in t || void 0,
      onKeyDown: a,
      onFocus: () => t.setFocused(!0),
      onBlur: () => t.setFocused(!1)
    }),
    headerProps: {
      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.
      // The day names are already included in the label of each cell, so there's no need to announce them twice.
      "aria-hidden": !0
    },
    weekDays: f
  };
}
function OC(e) {
  return e && e.__esModule ? e.default : e;
}
function IC(e, t, r) {
  let { date: n, isDisabled: i } = e, { errorMessageId: a, selectedDateDescription: o } = Md.get(t), s = qt(OC(Ba), "@react-aria/calendar"), u = Qt({
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    era: ga(n),
    timeZone: t.timeZone
  }), l = t.isSelected(n), c = t.isCellFocused(n);
  i = i || t.isCellDisabled(n);
  let d = t.isCellUnavailable(n), f = !i && !d, h = t.isValueInvalid && ("highlightedRange" in t ? !t.anchorDate && t.highlightedRange && n.compare(t.highlightedRange.start) >= 0 && n.compare(t.highlightedRange.end) <= 0 : t.value && et(t.value, n));
  h && (l = !0), n = Qv(n, Ql);
  let p = G(() => n.toDate(t.timeZone), [
    n,
    t.timeZone
  ]), v = w6(n, t.timeZone), g = G(() => {
    let E = "";
    return "highlightedRange" in t && t.value && !t.anchorDate && (et(n, t.value.start) || et(n, t.value.end)) && (E = o + ", "), E += u.format(p), v ? E = s.format(l ? "todayDateSelected" : "todayDate", {
      date: E
    }) : l && (E = s.format("dateSelected", {
      date: E
    })), t.minValue && et(n, t.minValue) ? E += ", " + s.format("minimumDate") : t.maxValue && et(n, t.maxValue) && (E += ", " + s.format("maximumDate")), E;
  }, [
    u,
    p,
    s,
    l,
    v,
    n,
    t,
    o
  ]), $ = "";
  "anchorDate" in t && c && !t.isReadOnly && f && (t.anchorDate ? $ = s.format("finishRangeSelectionPrompt") : $ = s.format("startRangeSelectionPrompt"));
  let m = Vs($), b = q(!1), D = q(!1), S = q(null), { pressProps: P, isPressed: B } = Ia({
    // When dragging to select a range, we don't want dragging over the original anchor
    // again to trigger onPressStart. Cancel presses immediately when the pointer exits.
    shouldCancelOnPointerExit: "anchorDate" in t && !!t.anchorDate,
    preventFocusOnPress: !0,
    isDisabled: !f || t.isReadOnly,
    onPressStart(E) {
      if (t.isReadOnly) {
        t.setFocusedDate(n);
        return;
      }
      if ("highlightedRange" in t && !t.anchorDate && (E.pointerType === "mouse" || E.pointerType === "touch")) {
        if (t.highlightedRange && !h) {
          if (et(n, t.highlightedRange.start)) {
            t.setAnchorDate(t.highlightedRange.end), t.setFocusedDate(n), t.setDragging(!0), D.current = !0;
            return;
          } else if (et(n, t.highlightedRange.end)) {
            t.setAnchorDate(t.highlightedRange.start), t.setFocusedDate(n), t.setDragging(!0), D.current = !0;
            return;
          }
        }
        let k = () => {
          t.setDragging(!0), S.current = null, t.selectDate(n), t.setFocusedDate(n), b.current = !0;
        };
        E.pointerType === "touch" ? S.current = setTimeout(k, 200) : k();
      }
    },
    onPressEnd() {
      D.current = !1, b.current = !1, clearTimeout(S.current), S.current = null;
    },
    onPress() {
      !("anchorDate" in t) && !t.isReadOnly && (t.selectDate(n), t.setFocusedDate(n));
    },
    onPressUp(E) {
      if (!t.isReadOnly && ("anchorDate" in t && S.current && (t.selectDate(n), t.setFocusedDate(n)), "anchorDate" in t))
        if (D.current)
          t.setAnchorDate(n);
        else if (t.anchorDate && !b.current)
          t.selectDate(n), t.setFocusedDate(n);
        else if (E.pointerType === "keyboard" && !t.anchorDate) {
          t.selectDate(n);
          let k = n.add({
            days: 1
          });
          t.isInvalid(k) && (k = n.subtract({
            days: 1
          })), t.isInvalid(k) || t.setFocusedDate(k);
        } else E.pointerType === "virtual" && (t.selectDate(n), t.setFocusedDate(n));
    }
  }), y = null;
  i || (y = et(n, t.focusedDate) ? 0 : -1), oe(() => {
    c && r.current && (Wt(r.current), Ko() !== "pointer" && document.activeElement === r.current && Lo(r.current, {
      containingElement: Ls(r.current)
    }));
  }, [
    c,
    r
  ]);
  let _ = Qt({
    day: "numeric",
    timeZone: t.timeZone,
    calendar: n.calendar.identifier
  }), w = G(() => _.formatToParts(p).find((E) => E.type === "day").value, [
    _,
    p
  ]);
  return {
    cellProps: {
      role: "gridcell",
      "aria-disabled": !f || null,
      "aria-selected": l || null,
      "aria-invalid": h || null
    },
    buttonProps: ye(P, {
      onFocus() {
        i || t.setFocusedDate(n);
      },
      tabIndex: y,
      role: "button",
      "aria-disabled": !f || null,
      "aria-label": g,
      "aria-invalid": h || null,
      "aria-describedby": [
        h ? a : null,
        m["aria-describedby"]
      ].filter(Boolean).join(" ") || void 0,
      onPointerEnter(E) {
        "highlightDate" in t && (E.pointerType !== "touch" || t.isDragging) && f && t.highlightDate(n);
      },
      onPointerDown(E) {
        "releasePointerCapture" in E.target && E.target.releasePointerCapture(E.pointerId);
      },
      onContextMenu(E) {
        E.preventDefault();
      }
    }),
    isPressed: B,
    isFocused: c,
    isSelected: l,
    isDisabled: i,
    isUnavailable: d,
    isOutsideVisibleRange: n.compare(t.visibleRange.start) < 0 || n.compare(t.visibleRange.end) > 0,
    isInvalid: h,
    formattedDate: w
  };
}
function Nd(e, t, r) {
  let { validationBehavior: n, focus: i } = e;
  Re(() => {
    if (n === "native" && (r != null && r.current)) {
      let u = t.realtimeValidation.isInvalid ? t.realtimeValidation.validationErrors.join(" ") || "Invalid value." : "";
      r.current.setCustomValidity(u), r.current.hasAttribute("title") || (r.current.title = ""), t.realtimeValidation.isInvalid || t.updateValidation(BC(r.current));
    }
  });
  let a = ut(() => {
    t.resetValidation();
  }), o = ut((u) => {
    var l;
    t.displayValidation.isInvalid || t.commitValidation();
    let c = r == null || (l = r.current) === null || l === void 0 ? void 0 : l.form;
    if (!u.defaultPrevented && r && c && MC(c) === r.current) {
      var d;
      i ? i() : (d = r.current) === null || d === void 0 || d.focus(), ny("keyboard");
    }
    u.preventDefault();
  }), s = ut(() => {
    t.commitValidation();
  });
  oe(() => {
    let u = r == null ? void 0 : r.current;
    if (!u) return;
    let l = u.form;
    return u.addEventListener("invalid", o), u.addEventListener("change", s), l == null || l.addEventListener("reset", a), () => {
      u.removeEventListener("invalid", o), u.removeEventListener("change", s), l == null || l.removeEventListener("reset", a);
    };
  }, [
    r,
    o,
    s,
    a,
    n
  ]);
}
function RC(e) {
  let t = e.validity;
  return {
    badInput: t.badInput,
    customError: t.customError,
    patternMismatch: t.patternMismatch,
    rangeOverflow: t.rangeOverflow,
    rangeUnderflow: t.rangeUnderflow,
    stepMismatch: t.stepMismatch,
    tooLong: t.tooLong,
    tooShort: t.tooShort,
    typeMismatch: t.typeMismatch,
    valueMissing: t.valueMissing,
    valid: t.valid
  };
}
function BC(e) {
  return {
    isInvalid: !e.validity.valid,
    validationDetails: RC(e),
    validationErrors: e.validationMessage ? [
      e.validationMessage
    ] : []
  };
}
function MC(e) {
  for (let t = 0; t < e.elements.length; t++) {
    let r = e.elements[t];
    if (!r.validity.valid) return r;
  }
  return null;
}
const Hs = {
  badInput: !1,
  customError: !1,
  patternMismatch: !1,
  rangeOverflow: !1,
  rangeUnderflow: !1,
  stepMismatch: !1,
  tooLong: !1,
  tooShort: !1,
  typeMismatch: !1,
  valueMissing: !1,
  valid: !0
}, wg = {
  ...Hs,
  customError: !0,
  valid: !1
}, en = {
  isInvalid: !1,
  validationDetails: Hs,
  validationErrors: []
}, Cg = de({}), ba = "__formValidationState" + Date.now();
function Ma(e) {
  if (e[ba]) {
    let { realtimeValidation: t, displayValidation: r, updateValidation: n, resetValidation: i, commitValidation: a } = e[ba];
    return {
      realtimeValidation: t,
      displayValidation: r,
      updateValidation: n,
      resetValidation: i,
      commitValidation: a
    };
  }
  return NC(e);
}
function NC(e) {
  let { isInvalid: t, validationState: r, name: n, value: i, builtinValidation: a, validate: o, validationBehavior: s = "aria" } = e;
  r && (t || (t = r === "invalid"));
  let u = t !== void 0 ? {
    isInvalid: t,
    validationErrors: [],
    validationDetails: wg
  } : null, l = G(() => tp(LC(o, i)), [
    o,
    i
  ]);
  a != null && a.validationDetails.valid && (a = null);
  let c = le(Cg), d = G(() => n ? Array.isArray(n) ? n.flatMap((w) => ac(c[w])) : ac(c[n]) : [], [
    c,
    n
  ]), [f, h] = ee(c), [p, v] = ee(!1);
  c !== f && (h(c), v(!1));
  let g = G(() => tp(p ? [] : d), [
    p,
    d
  ]), $ = q(en), [m, b] = ee(en), D = q(en), S = () => {
    if (!P) return;
    B(!1);
    let w = l || a || $.current;
    Qu(w, D.current) || (D.current = w, b(w));
  }, [P, B] = ee(!1);
  return oe(S), {
    realtimeValidation: u || g || l || a || en,
    displayValidation: s === "native" ? u || g || m : u || g || l || a || m,
    updateValidation(w) {
      s === "aria" && !Qu(m, w) ? b(w) : $.current = w;
    },
    resetValidation() {
      let w = en;
      Qu(w, D.current) || (D.current = w, b(w)), s === "native" && B(!1), v(!0);
    },
    commitValidation() {
      s === "native" && B(!0), v(!0);
    }
  };
}
function ac(e) {
  return e ? Array.isArray(e) ? e : [
    e
  ] : [];
}
function LC(e, t) {
  if (typeof e == "function") {
    let r = e(t);
    if (r && typeof r != "boolean") return ac(r);
  }
  return [];
}
function tp(e) {
  return e.length ? {
    isInvalid: !0,
    validationErrors: e,
    validationDetails: wg
  } : null;
}
function Qu(e, t) {
  return e === t ? !0 : e && t && e.isInvalid === t.isInvalid && e.validationErrors.length === t.validationErrors.length && e.validationErrors.every((r, n) => r === t.validationErrors[n]) && Object.entries(e.validationDetails).every(([r, n]) => t.validationDetails[r] === n);
}
function es(...e) {
  let t = /* @__PURE__ */ new Set(), r = !1, n = {
    ...Hs
  };
  for (let o of e) {
    var i, a;
    for (let s of o.validationErrors) t.add(s);
    r || (r = o.isInvalid);
    for (let s in n) (i = n)[a = s] || (i[a] = o.validationDetails[s]);
  }
  return n.valid = !r, {
    isInvalid: r,
    validationErrors: [
      ...t
    ],
    validationDetails: n
  };
}
function Sg(e) {
  let { id: t, label: r, "aria-labelledby": n, "aria-label": i, labelElementType: a = "label" } = e;
  t = St(t);
  let o = St(), s = {};
  r ? (n = n ? `${o} ${n}` : o, s = {
    id: o,
    htmlFor: a === "label" ? t : void 0
  }) : !n && !i && console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let u = hn({
    id: t,
    "aria-label": i,
    "aria-labelledby": n
  });
  return {
    labelProps: s,
    fieldProps: u
  };
}
function Ws(e) {
  let { description: t, errorMessage: r, isInvalid: n, validationState: i } = e, { labelProps: a, fieldProps: o } = Sg(e), s = ui([
    !!t,
    !!r,
    n,
    i
  ]), u = ui([
    !!t,
    !!r,
    n,
    i
  ]);
  return o = ye(o, {
    "aria-describedby": [
      s,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      u,
      e["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  }), {
    labelProps: a,
    fieldProps: o,
    descriptionProps: {
      id: s
    },
    errorMessageProps: {
      id: u
    }
  };
}
var kg = {};
kg = {
  buttonLabel: "عرض المقترحات",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} خيار`,
    other: () => `${t.number(e.optionCount)} خيارات`
  })} متاحة.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `المجموعة المدخلة ${e.groupTitle}, مع ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} خيار`,
      other: () => `${t.number(e.groupCount)} خيارات`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", محدد",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "مقترحات",
  selectedAnnouncement: (e) => `${e.optionText}، محدد`
};
var Pg = {};
Pg = {
  buttonLabel: "Покажи предложения",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} опция`,
    other: () => `${t.number(e.optionCount)} опции`
  })} на разположение.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Въведена група ${e.groupTitle}, с ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} опция`,
      other: () => `${t.number(e.groupCount)} опции`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", избрани",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Предложения",
  selectedAnnouncement: (e) => `${e.optionText}, избрани`
};
var Tg = {};
Tg = {
  buttonLabel: "Zobrazit doporučení",
  countAnnouncement: (e, t) => `K dispozici ${t.plural(e.optionCount, {
    one: () => `je ${t.number(e.optionCount)} možnost`,
    other: () => `jsou/je ${t.number(e.optionCount)} možnosti/-í`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Zadaná skupina „${e.groupTitle}“ ${t.plural(e.groupCount, {
      one: () => `s ${t.number(e.groupCount)} možností`,
      other: () => `se ${t.number(e.groupCount)} možnostmi`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: " (vybráno)",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Návrhy",
  selectedAnnouncement: (e) => `${e.optionText}, vybráno`
};
var Ag = {};
Ag = {
  buttonLabel: "Vis forslag",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} mulighed tilgængelig`,
    other: () => `${t.number(e.optionCount)} muligheder tilgængelige`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Angivet gruppe ${e.groupTitle}, med ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} mulighed`,
      other: () => `${t.number(e.groupCount)} muligheder`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", valgt",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Forslag",
  selectedAnnouncement: (e) => `${e.optionText}, valgt`
};
var _g = {};
_g = {
  buttonLabel: "Empfehlungen anzeigen",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} Option`,
    other: () => `${t.number(e.optionCount)} Optionen`
  })} verfügbar.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Eingetretene Gruppe ${e.groupTitle}, mit ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} Option`,
      other: () => `${t.number(e.groupCount)} Optionen`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", ausgewählt",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Empfehlungen",
  selectedAnnouncement: (e) => `${e.optionText}, ausgewählt`
};
var Fg = {};
Fg = {
  buttonLabel: "Προβολή προτάσεων",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} επιλογή`,
    other: () => `${t.number(e.optionCount)} επιλογές `
  })} διαθέσιμες.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Εισαγμένη ομάδα ${e.groupTitle}, με ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} επιλογή`,
      other: () => `${t.number(e.groupCount)} επιλογές`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", επιλεγμένο",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Προτάσεις",
  selectedAnnouncement: (e) => `${e.optionText}, επιλέχθηκε`
};
var Og = {};
Og = {
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Entered group ${e.groupTitle}, with ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} option`,
      other: () => `${t.number(e.groupCount)} options`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", selected",
    other: ""
  }, e.isSelected)}`,
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} option`,
    other: () => `${t.number(e.optionCount)} options`
  })} available.`,
  selectedAnnouncement: (e) => `${e.optionText}, selected`,
  buttonLabel: "Show suggestions",
  listboxLabel: "Suggestions"
};
var Ig = {};
Ig = {
  buttonLabel: "Mostrar sugerencias",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opción`,
    other: () => `${t.number(e.optionCount)} opciones`
  })} disponible(s).`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Se ha unido al grupo ${e.groupTitle}, con ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opción`,
      other: () => `${t.number(e.groupCount)} opciones`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", seleccionado",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Sugerencias",
  selectedAnnouncement: (e) => `${e.optionText}, seleccionado`
};
var Rg = {};
Rg = {
  buttonLabel: "Kuva soovitused",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} valik`,
    other: () => `${t.number(e.optionCount)} valikud`
  })} saadaval.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Sisestatud rühm ${e.groupTitle}, valikuga ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} valik`,
      other: () => `${t.number(e.groupCount)} valikud`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", valitud",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Soovitused",
  selectedAnnouncement: (e) => `${e.optionText}, valitud`
};
var Bg = {};
Bg = {
  buttonLabel: "Näytä ehdotukset",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} vaihtoehto`,
    other: () => `${t.number(e.optionCount)} vaihtoehdot`
  })} saatavilla.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Mentiin ryhmään ${e.groupTitle}, ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} vaihtoehdon`,
      other: () => `${t.number(e.groupCount)} vaihtoehdon`
    })} kanssa.`,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", valittu",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Ehdotukset",
  selectedAnnouncement: (e) => `${e.optionText}, valittu`
};
var Mg = {};
Mg = {
  buttonLabel: "Afficher les suggestions",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} option`,
    other: () => `${t.number(e.optionCount)} options`
  })} disponible(s).`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Groupe ${e.groupTitle} rejoint, avec ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} option`,
      other: () => `${t.number(e.groupCount)} options`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", sélectionné(s)",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Suggestions",
  selectedAnnouncement: (e) => `${e.optionText}, sélectionné`
};
var Ng = {};
Ng = {
  buttonLabel: "הצג הצעות",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `אפשרות ${t.number(e.optionCount)}`,
    other: () => `${t.number(e.optionCount)} אפשרויות`
  })} במצב זמין.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `נכנס לקבוצה ${e.groupTitle}, עם ${t.plural(e.groupCount, {
      one: () => `אפשרות ${t.number(e.groupCount)}`,
      other: () => `${t.number(e.groupCount)} אפשרויות`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", נבחר",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "הצעות",
  selectedAnnouncement: (e) => `${e.optionText}, נבחר`
};
var Lg = {};
Lg = {
  buttonLabel: "Prikaži prijedloge",
  countAnnouncement: (e, t) => `Dostupno još: ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opcija`,
    other: () => `${t.number(e.optionCount)} opcije/a`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Unesena skupina ${e.groupTitle}, s ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opcijom`,
      other: () => `${t.number(e.groupCount)} opcije/a`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", odabranih",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Prijedlozi",
  selectedAnnouncement: (e) => `${e.optionText}, odabrano`
};
var Vg = {};
Vg = {
  buttonLabel: "Javaslatok megjelenítése",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} lehetőség`,
    other: () => `${t.number(e.optionCount)} lehetőség`
  })} áll rendelkezésre.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Belépett a(z) ${e.groupTitle} csoportba, amely ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} lehetőséget`,
      other: () => `${t.number(e.groupCount)} lehetőséget`
    })} tartalmaz. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", kijelölve",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Javaslatok",
  selectedAnnouncement: (e) => `${e.optionText}, kijelölve`
};
var jg = {};
jg = {
  buttonLabel: "Mostra suggerimenti",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opzione disponibile`,
    other: () => `${t.number(e.optionCount)} opzioni disponibili`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Ingresso nel gruppo ${e.groupTitle}, con ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opzione`,
      other: () => `${t.number(e.groupCount)} opzioni`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", selezionato",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Suggerimenti",
  selectedAnnouncement: (e) => `${e.optionText}, selezionato`
};
var zg = {};
zg = {
  buttonLabel: "候補を表示",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} 個のオプション`,
    other: () => `${t.number(e.optionCount)} 個のオプション`
  })}を利用できます。`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `入力されたグループ ${e.groupTitle}、${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} 個のオプション`,
      other: () => `${t.number(e.groupCount)} 個のオプション`
    })}を含む。`,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: "、選択済み",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "候補",
  selectedAnnouncement: (e) => `${e.optionText}、選択済み`
};
var Kg = {};
Kg = {
  buttonLabel: "제안 사항 표시",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)}개 옵션`,
    other: () => `${t.number(e.optionCount)}개 옵션`
  })}을 사용할 수 있습니다.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `입력한 그룹 ${e.groupTitle}, ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)}개 옵션`,
      other: () => `${t.number(e.groupCount)}개 옵션`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", 선택됨",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "제안",
  selectedAnnouncement: (e) => `${e.optionText}, 선택됨`
};
var Ug = {};
Ug = {
  buttonLabel: "Rodyti pasiūlymus",
  countAnnouncement: (e, t) => `Yra ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} parinktis`,
    other: () => `${t.number(e.optionCount)} parinktys (-ių)`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Įvesta grupė ${e.groupTitle}, su ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} parinktimi`,
      other: () => `${t.number(e.groupCount)} parinktimis (-ių)`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", pasirinkta",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Pasiūlymai",
  selectedAnnouncement: (e) => `${e.optionText}, pasirinkta`
};
var qg = {};
qg = {
  buttonLabel: "Rādīt ieteikumus",
  countAnnouncement: (e, t) => `Pieejamo opciju skaits: ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opcija`,
    other: () => `${t.number(e.optionCount)} opcijas`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Ievadīta grupa ${e.groupTitle}, ar ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opciju`,
      other: () => `${t.number(e.groupCount)} opcijām`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", atlasīta",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Ieteikumi",
  selectedAnnouncement: (e) => `${e.optionText}, atlasīta`
};
var Hg = {};
Hg = {
  buttonLabel: "Vis forslag",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} alternativ`,
    other: () => `${t.number(e.optionCount)} alternativer`
  })} finnes.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Angitt gruppe ${e.groupTitle}, med ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} alternativ`,
      other: () => `${t.number(e.groupCount)} alternativer`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", valgt",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Forslag",
  selectedAnnouncement: (e) => `${e.optionText}, valgt`
};
var Wg = {};
Wg = {
  buttonLabel: "Suggesties weergeven",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} optie`,
    other: () => `${t.number(e.optionCount)} opties`
  })} beschikbaar.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Groep ${e.groupTitle} ingevoerd met ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} optie`,
      other: () => `${t.number(e.groupCount)} opties`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", geselecteerd",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Suggesties",
  selectedAnnouncement: (e) => `${e.optionText}, geselecteerd`
};
var Qg = {};
Qg = {
  buttonLabel: "Wyświetlaj sugestie",
  countAnnouncement: (e, t) => `dostępna/dostępne(-nych) ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opcja`,
    other: () => `${t.number(e.optionCount)} opcje(-i)`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Dołączono do grupy ${e.groupTitle}, z ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opcją`,
      other: () => `${t.number(e.groupCount)} opcjami`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", wybrano",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Sugestie",
  selectedAnnouncement: (e) => `${e.optionText}, wybrano`
};
var Gg = {};
Gg = {
  buttonLabel: "Mostrar sugestões",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opção`,
    other: () => `${t.number(e.optionCount)} opções`
  })} disponível.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Grupo inserido ${e.groupTitle}, com ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opção`,
      other: () => `${t.number(e.groupCount)} opções`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", selecionado",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Sugestões",
  selectedAnnouncement: (e) => `${e.optionText}, selecionado`
};
var Zg = {};
Zg = {
  buttonLabel: "Apresentar sugestões",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opção`,
    other: () => `${t.number(e.optionCount)} opções`
  })} disponível.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Grupo introduzido ${e.groupTitle}, com ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opção`,
      other: () => `${t.number(e.groupCount)} opções`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", selecionado",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Sugestões",
  selectedAnnouncement: (e) => `${e.optionText}, selecionado`
};
var Yg = {};
Yg = {
  buttonLabel: "Afișare sugestii",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opțiune`,
    other: () => `${t.number(e.optionCount)} opțiuni`
  })} disponibile.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Grup ${e.groupTitle} introdus, cu ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opțiune`,
      other: () => `${t.number(e.groupCount)} opțiuni`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", selectat",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Sugestii",
  selectedAnnouncement: (e) => `${e.optionText}, selectat`
};
var Jg = {};
Jg = {
  buttonLabel: "Показать предложения",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} параметр`,
    other: () => `${t.number(e.optionCount)} параметров`
  })} доступно.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Введенная группа ${e.groupTitle}, с ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} параметром`,
      other: () => `${t.number(e.groupCount)} параметрами`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", выбранными",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Предложения",
  selectedAnnouncement: (e) => `${e.optionText}, выбрано`
};
var Xg = {};
Xg = {
  buttonLabel: "Zobraziť návrhy",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} možnosť`,
    other: () => `${t.number(e.optionCount)} možnosti/-í`
  })} k dispozícii.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Zadaná skupina ${e.groupTitle}, s ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} možnosťou`,
      other: () => `${t.number(e.groupCount)} možnosťami`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", vybraté",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Návrhy",
  selectedAnnouncement: (e) => `${e.optionText}, vybraté`
};
var e0 = {};
e0 = {
  buttonLabel: "Prikaži predloge",
  countAnnouncement: (e, t) => `Na voljo je ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opcija`,
    other: () => `${t.number(e.optionCount)} opcije`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Vnesena skupina ${e.groupTitle}, z ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opcija`,
      other: () => `${t.number(e.groupCount)} opcije`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", izbrano",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Predlogi",
  selectedAnnouncement: (e) => `${e.optionText}, izbrano`
};
var t0 = {};
t0 = {
  buttonLabel: "Prikaži predloge",
  countAnnouncement: (e, t) => `Dostupno još: ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} opcija`,
    other: () => `${t.number(e.optionCount)} opcije/a`
  })}.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Unesena grupa ${e.groupTitle}, s ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} opcijom`,
      other: () => `${t.number(e.groupCount)} optione/a`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", izabranih",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Predlozi",
  selectedAnnouncement: (e) => `${e.optionText}, izabrano`
};
var r0 = {};
r0 = {
  buttonLabel: "Visa förslag",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} alternativ`,
    other: () => `${t.number(e.optionCount)} alternativ`
  })} tillgängliga.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Ingick i gruppen ${e.groupTitle} med ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} alternativ`,
      other: () => `${t.number(e.groupCount)} alternativ`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", valda",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Förslag",
  selectedAnnouncement: (e) => `${e.optionText}, valda`
};
var n0 = {};
n0 = {
  buttonLabel: "Önerileri göster",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} seçenek`,
    other: () => `${t.number(e.optionCount)} seçenekler`
  })} kullanılabilir.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Girilen grup ${e.groupTitle}, ile ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} seçenek`,
      other: () => `${t.number(e.groupCount)} seçenekler`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", seçildi",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Öneriler",
  selectedAnnouncement: (e) => `${e.optionText}, seçildi`
};
var i0 = {};
i0 = {
  buttonLabel: "Показати пропозиції",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} параметр`,
    other: () => `${t.number(e.optionCount)} параметри(-ів)`
  })} доступно.`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `Введена група ${e.groupTitle}, з ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} параметр`,
      other: () => `${t.number(e.groupCount)} параметри(-ів)`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", вибрано",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "Пропозиції",
  selectedAnnouncement: (e) => `${e.optionText}, вибрано`
};
var a0 = {};
a0 = {
  buttonLabel: "显示建议",
  countAnnouncement: (e, t) => `有 ${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} 个选项`,
    other: () => `${t.number(e.optionCount)} 个选项`
  })}可用。`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `进入了 ${e.groupTitle} 组，其中有 ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} 个选项`,
      other: () => `${t.number(e.groupCount)} 个选项`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", 已选择",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "建议",
  selectedAnnouncement: (e) => `${e.optionText}, 已选择`
};
var o0 = {};
o0 = {
  buttonLabel: "顯示建議",
  countAnnouncement: (e, t) => `${t.plural(e.optionCount, {
    one: () => `${t.number(e.optionCount)} 選項`,
    other: () => `${t.number(e.optionCount)} 選項`
  })} 可用。`,
  focusAnnouncement: (e, t) => `${t.select({
    true: () => `輸入的群組 ${e.groupTitle}, 有 ${t.plural(e.groupCount, {
      one: () => `${t.number(e.groupCount)} 選項`,
      other: () => `${t.number(e.groupCount)} 選項`
    })}. `,
    other: ""
  }, e.isGroupChange)}${e.optionText}${t.select({
    true: ", 已選取",
    other: ""
  }, e.isSelected)}`,
  listboxLabel: "建議",
  selectedAnnouncement: (e) => `${e.optionText}, 已選取`
};
var s0 = {};
s0 = {
  "ar-AE": kg,
  "bg-BG": Pg,
  "cs-CZ": Tg,
  "da-DK": Ag,
  "de-DE": _g,
  "el-GR": Fg,
  "en-US": Og,
  "es-ES": Ig,
  "et-EE": Rg,
  "fi-FI": Bg,
  "fr-FR": Mg,
  "he-IL": Ng,
  "hr-HR": Lg,
  "hu-HU": Vg,
  "it-IT": jg,
  "ja-JP": zg,
  "ko-KR": Kg,
  "lt-LT": Ug,
  "lv-LV": qg,
  "nb-NO": Hg,
  "nl-NL": Wg,
  "pl-PL": Qg,
  "pt-BR": Gg,
  "pt-PT": Zg,
  "ro-RO": Yg,
  "ru-RU": Jg,
  "sk-SK": Xg,
  "sl-SI": e0,
  "sr-SP": t0,
  "sv-SE": r0,
  "tr-TR": n0,
  "uk-UA": i0,
  "zh-CN": a0,
  "zh-TW": o0
};
const zn = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
}, ts = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
}, VC = {
  top: "left",
  left: "top"
}, oc = {
  top: "height",
  left: "width"
}, u0 = {
  width: "totalWidth",
  height: "totalHeight"
}, uo = {};
let mt = typeof document < "u" && window.visualViewport;
function rp(e) {
  let t = 0, r = 0, n = 0, i = 0, a = 0, o = 0, s = {}, u = (mt == null ? void 0 : mt.scale) > 1;
  if (e.tagName === "BODY") {
    let d = document.documentElement;
    n = d.clientWidth, i = d.clientHeight;
    var l;
    t = (l = mt == null ? void 0 : mt.width) !== null && l !== void 0 ? l : n;
    var c;
    r = (c = mt == null ? void 0 : mt.height) !== null && c !== void 0 ? c : i, s.top = d.scrollTop || e.scrollTop, s.left = d.scrollLeft || e.scrollLeft, mt && (a = mt.offsetTop, o = mt.offsetLeft);
  } else
    ({ width: t, height: r, top: a, left: o } = ei(e)), s.top = e.scrollTop, s.left = e.scrollLeft, n = t, i = r;
  return yd() && (e.tagName === "BODY" || e.tagName === "HTML") && u && (s.top = 0, s.left = 0, a = mt.pageTop, o = mt.pageLeft), {
    width: t,
    height: r,
    totalWidth: n,
    totalHeight: i,
    scroll: s,
    top: a,
    left: o
  };
}
function jC(e) {
  return {
    top: e.scrollTop,
    left: e.scrollLeft,
    width: e.scrollWidth,
    height: e.scrollHeight
  };
}
function np(e, t, r, n, i, a, o) {
  let s = i.scroll[e], u = n[oc[e]], l = n.scroll[zn[e]] + a, c = u + n.scroll[zn[e]] - a, d = t - s + o[e] - n[zn[e]], f = t - s + r + o[e] - n[zn[e]];
  return d < l ? l - d : f > c ? Math.max(c - f, l - d) : 0;
}
function zC(e) {
  let t = window.getComputedStyle(e);
  return {
    top: parseInt(t.marginTop, 10) || 0,
    bottom: parseInt(t.marginBottom, 10) || 0,
    left: parseInt(t.marginLeft, 10) || 0,
    right: parseInt(t.marginRight, 10) || 0
  };
}
function ip(e) {
  if (uo[e]) return uo[e];
  let [t, r] = e.split(" "), n = zn[t] || "right", i = VC[n];
  zn[r] || (r = "center");
  let a = oc[n], o = oc[i];
  return uo[e] = {
    placement: t,
    crossPlacement: r,
    axis: n,
    crossAxis: i,
    size: a,
    crossSize: o
  }, uo[e];
}
function Gu(e, t, r, n, i, a, o, s, u, l) {
  let { placement: c, crossPlacement: d, axis: f, crossAxis: h, size: p, crossSize: v } = n, g = {};
  g[h] = e[h], d === "center" ? g[h] += (e[v] - r[v]) / 2 : d !== h && (g[h] += e[v] - r[v]), g[h] += a;
  const $ = e[h] - r[v] + u + l, m = e[h] + e[v] - u - l;
  if (g[h] = zl(g[h], $, m), c === f) {
    const b = s ? o[p] : t[u0[p]];
    g[ts[f]] = Math.floor(b - e[f] + i);
  } else g[f] = Math.floor(e[f] + e[p] + i);
  return g;
}
function KC(e, t, r, n, i, a, o, s) {
  const u = n ? r.height : t[u0.height];
  let l = e.top != null ? r.top + e.top : r.top + (u - e.bottom - o), c = s !== "top" ? (
    // We want the distance between the top of the overlay to the bottom of the boundary
    Math.max(0, t.height + t.top + t.scroll.top - l - (i.top + i.bottom + a))
  ) : Math.max(0, l + o - (t.top + t.scroll.top) - (i.top + i.bottom + a));
  return Math.min(t.height - a * 2, c);
}
function ap(e, t, r, n, i, a) {
  let { placement: o, axis: s, size: u } = a;
  return o === s ? Math.max(0, r[s] - e[s] - e.scroll[s] + t[s] - n[s] - n[ts[s]] - i) : Math.max(0, e[u] + e[s] + e.scroll[s] - t[s] - r[s] - r[u] - n[s] - n[ts[s]] - i);
}
function UC(e, t, r, n, i, a, o, s, u, l, c, d, f, h, p, v) {
  let g = ip(e), { size: $, crossAxis: m, crossSize: b, placement: D, crossPlacement: S } = g, P = Gu(t, s, r, g, c, d, l, f, p, v), B = c, y = ap(s, l, t, i, a + c, g);
  if (o && n[$] > y) {
    let K = ip(`${ts[D]} ${S}`), j = Gu(t, s, r, K, c, d, l, f, p, v);
    ap(s, l, t, i, a + c, K) > y && (g = K, P = j, B = c);
  }
  let _ = "bottom";
  g.axis === "top" ? g.placement === "top" ? _ = "top" : g.placement === "bottom" && (_ = "bottom") : g.crossAxis === "top" && (g.crossPlacement === "top" ? _ = "bottom" : g.crossPlacement === "bottom" && (_ = "top"));
  let w = np(m, P[m], r[b], s, u, a, l);
  P[m] += w;
  let E = KC(P, s, l, f, i, a, r.height, _);
  h && h < E && (E = h), r.height = Math.min(r.height, E), P = Gu(t, s, r, g, B, d, l, f, p, v), w = np(m, P[m], r[b], s, u, a, l), P[m] += w;
  let k = {}, C = t[m] + 0.5 * t[b] - P[m];
  const T = p / 2 + v, L = r[b] - p / 2 - v, O = t[m] - P[m] + p / 2, x = t[m] + t[b] - P[m] - p / 2, U = zl(C, O, x);
  return k[m] = zl(U, T, L), {
    position: P,
    maxHeight: E,
    arrowOffsetLeft: k.left,
    arrowOffsetTop: k.top,
    placement: g.placement
  };
}
function qC(e) {
  let { placement: t, targetNode: r, overlayNode: n, scrollNode: i, padding: a, shouldFlip: o, boundaryElement: s, offset: u, crossOffset: l, maxHeight: c, arrowSize: d = 0, arrowBoundaryOffset: f = 0 } = e, h = n instanceof HTMLElement ? HC(n) : document.documentElement, p = h === document.documentElement;
  const v = window.getComputedStyle(h).position;
  let g = !!v && v !== "static", $ = p ? ei(r) : op(r, h);
  if (!p) {
    let { marginTop: y, marginLeft: _ } = window.getComputedStyle(r);
    $.top += parseInt(y, 10) || 0, $.left += parseInt(_, 10) || 0;
  }
  let m = ei(n), b = zC(n);
  m.width += b.left + b.right, m.height += b.top + b.bottom;
  let D = jC(i), S = rp(s), P = rp(h), B = s.tagName === "BODY" ? ei(h) : op(h, s);
  return h.tagName === "HTML" && s.tagName === "BODY" && (P.scroll.top = 0, P.scroll.left = 0), UC(t, $, m, D, b, a, o, S, P, B, u, l, g, c, d, f);
}
function ei(e) {
  let { top: t, left: r, width: n, height: i } = e.getBoundingClientRect(), { scrollTop: a, scrollLeft: o, clientTop: s, clientLeft: u } = document.documentElement;
  return {
    top: t + a - s,
    left: r + o - u,
    width: n,
    height: i
  };
}
function op(e, t) {
  let r = window.getComputedStyle(e), n;
  if (r.position === "fixed") {
    let { top: i, left: a, width: o, height: s } = e.getBoundingClientRect();
    n = {
      top: i,
      left: a,
      width: o,
      height: s
    };
  } else {
    n = ei(e);
    let i = ei(t), a = window.getComputedStyle(t);
    i.top += (parseInt(a.borderTopWidth, 10) || 0) - t.scrollTop, i.left += (parseInt(a.borderLeftWidth, 10) || 0) - t.scrollLeft, n.top -= i.top, n.left -= i.left;
  }
  return n.top -= parseInt(r.marginTop, 10) || 0, n.left -= parseInt(r.marginLeft, 10) || 0, n;
}
function HC(e) {
  let t = e.offsetParent;
  if (t && t === document.body && window.getComputedStyle(t).position === "static" && !sp(t) && (t = document.documentElement), t == null)
    for (t = e.parentElement; t && !sp(t); ) t = t.parentElement;
  return t || document.documentElement;
}
function sp(e) {
  let t = window.getComputedStyle(e);
  return t.transform !== "none" || /transform|perspective/.test(t.willChange) || t.filter !== "none" || t.contain === "paint" || // @ts-ignore
  "backdropFilter" in t && t.backdropFilter !== "none" || // @ts-ignore
  "WebkitBackdropFilter" in t && t.WebkitBackdropFilter !== "none";
}
const l0 = /* @__PURE__ */ new WeakMap();
function WC(e) {
  let { triggerRef: t, isOpen: r, onClose: n } = e;
  oe(() => {
    if (!r || n === null) return;
    let i = (a) => {
      let o = a.target;
      if (!t.current || o instanceof Node && !o.contains(t.current)) return;
      let s = n || l0.get(t.current);
      s && s();
    };
    return window.addEventListener("scroll", i, !0), () => {
      window.removeEventListener("scroll", i, !0);
    };
  }, [
    r,
    n,
    t
  ]);
}
let We = typeof document < "u" && window.visualViewport;
function QC(e) {
  let { direction: t } = ct(), { arrowSize: r = 0, targetRef: n, overlayRef: i, scrollRef: a = i, placement: o = "bottom", containerPadding: s = 12, shouldFlip: u = !0, boundaryElement: l = typeof document < "u" ? document.body : null, offset: c = 0, crossOffset: d = 0, shouldUpdatePosition: f = !0, isOpen: h = !0, onClose: p, maxHeight: v, arrowBoundaryOffset: g = 0 } = e, [$, m] = ee({
    position: {},
    arrowOffsetLeft: void 0,
    arrowOffsetTop: void 0,
    maxHeight: void 0,
    placement: void 0
  }), b = [
    f,
    o,
    i.current,
    n.current,
    a.current,
    s,
    u,
    l,
    c,
    d,
    h,
    t,
    v,
    g,
    r
  ], D = q(We == null ? void 0 : We.scale);
  oe(() => {
    h && (D.current = We == null ? void 0 : We.scale);
  }, [
    h
  ]);
  let S = be(() => {
    if (f === !1 || !h || !i.current || !n.current || !a.current || !l || (We == null ? void 0 : We.scale) !== D.current) return;
    let y = i.current;
    if (!v && i.current) {
      var _;
      y.style.top = "0px", y.style.bottom = "";
      var w;
      y.style.maxHeight = ((w = (_ = window.visualViewport) === null || _ === void 0 ? void 0 : _.height) !== null && w !== void 0 ? w : window.innerHeight) + "px";
    }
    let E = qC({
      placement: ZC(o, t),
      overlayNode: i.current,
      targetNode: n.current,
      scrollNode: a.current,
      padding: s,
      shouldFlip: u,
      boundaryElement: l,
      offset: c,
      crossOffset: d,
      maxHeight: v,
      arrowSize: r,
      arrowBoundaryOffset: g
    });
    y.style.top = "", y.style.bottom = "", Object.keys(E.position).forEach((k) => y.style[k] = E.position[k] + "px"), y.style.maxHeight = E.maxHeight != null ? E.maxHeight + "px" : void 0, m(E);
  }, b);
  Re(S, b), GC(S), Ns({
    ref: i,
    onResize: S
  });
  let P = q(!1);
  Re(() => {
    let y, _ = () => {
      P.current = !0, clearTimeout(y), y = setTimeout(() => {
        P.current = !1;
      }, 500), S();
    }, w = () => {
      P.current && _();
    };
    return We == null || We.addEventListener("resize", _), We == null || We.addEventListener("scroll", w), () => {
      We == null || We.removeEventListener("resize", _), We == null || We.removeEventListener("scroll", w);
    };
  }, [
    S
  ]);
  let B = be(() => {
    P.current || p();
  }, [
    p,
    P
  ]);
  return WC({
    triggerRef: n,
    isOpen: h,
    onClose: p && B
  }), {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...$.position,
        maxHeight: $.maxHeight
      }
    },
    placement: $.placement,
    arrowProps: {
      "aria-hidden": "true",
      role: "presentation",
      style: {
        left: $.arrowOffsetLeft,
        top: $.arrowOffsetTop
      }
    },
    updatePosition: S
  };
}
function GC(e) {
  Re(() => (window.addEventListener("resize", e, !1), () => {
    window.removeEventListener("resize", e, !1);
  }), [
    e
  ]);
}
function ZC(e, t) {
  return t === "rtl" ? e.replace("start", "right").replace("end", "left") : e.replace("start", "left").replace("end", "right");
}
const ir = [];
function c0(e, t) {
  let { onClose: r, shouldCloseOnBlur: n, isOpen: i, isDismissable: a = !1, isKeyboardDismissDisabled: o = !1, shouldCloseOnInteractOutside: s } = e;
  oe(() => (i && ir.push(t), () => {
    let p = ir.indexOf(t);
    p >= 0 && ir.splice(p, 1);
  }), [
    i,
    t
  ]);
  let u = () => {
    ir[ir.length - 1] === t && r && r();
  }, l = (p) => {
    (!s || s(p.target)) && ir[ir.length - 1] === t && (p.stopPropagation(), p.preventDefault());
  }, c = (p) => {
    (!s || s(p.target)) && (ir[ir.length - 1] === t && (p.stopPropagation(), p.preventDefault()), u());
  }, d = (p) => {
    p.key === "Escape" && !o && !p.nativeEvent.isComposing && (p.stopPropagation(), p.preventDefault(), u());
  };
  Qw({
    ref: t,
    onInteractOutside: a && i ? c : null,
    onInteractOutsideStart: l
  });
  let { focusWithinProps: f } = yi({
    isDisabled: !n,
    onBlurWithin: (p) => {
      !p.relatedTarget || n6(p.relatedTarget) || (!s || s(p.relatedTarget)) && r();
    }
  }), h = (p) => {
    p.target === p.currentTarget && p.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown: d,
      ...f
    },
    underlayProps: {
      onPointerDown: h
    }
  };
}
function d0(e, t, r) {
  let { type: n } = e, { isOpen: i } = t;
  oe(() => {
    r && r.current && l0.set(r.current, t.close);
  });
  let a;
  n === "menu" ? a = !0 : n === "listbox" && (a = "listbox");
  let o = St();
  return {
    triggerProps: {
      "aria-haspopup": a,
      "aria-expanded": i,
      "aria-controls": i ? o : null,
      onPress: t.toggle
    },
    overlayProps: {
      id: o
    }
  };
}
const Zu = typeof document < "u" && window.visualViewport, YC = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
let lo = 0, Yu;
function f0(e = {}) {
  let { isDisabled: t } = e;
  Re(() => {
    if (!t)
      return lo++, lo === 1 && (Fa() ? Yu = XC() : Yu = JC()), () => {
        lo--, lo === 0 && Yu();
      };
  }, [
    t
  ]);
}
function JC() {
  return qr(Kn(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`), Kn(document.documentElement, "overflow", "hidden"));
}
function XC() {
  let e, t, r = (l) => {
    e = Ls(l.target, !0), !(e === document.documentElement && e === document.body) && e instanceof HTMLElement && window.getComputedStyle(e).overscrollBehavior === "auto" && (t = Kn(e, "overscrollBehavior", "contain"));
  }, n = (l) => {
    if (!e || e === document.documentElement || e === document.body) {
      l.preventDefault();
      return;
    }
    e.scrollHeight === e.clientHeight && e.scrollWidth === e.clientWidth && l.preventDefault();
  }, i = (l) => {
    let c = l.target;
    lp(c) && c !== document.activeElement && (l.preventDefault(), s(), c.style.transform = "translateY(-2000px)", c.focus(), requestAnimationFrame(() => {
      c.style.transform = "";
    })), t && t();
  }, a = (l) => {
    let c = l.target;
    lp(c) && (s(), c.style.transform = "translateY(-2000px)", requestAnimationFrame(() => {
      c.style.transform = "", Zu && (Zu.height < window.innerHeight ? requestAnimationFrame(() => {
        up(c);
      }) : Zu.addEventListener("resize", () => up(c), {
        once: !0
      }));
    }));
  }, o = null, s = () => {
    if (o) return;
    let l = () => {
      window.scrollTo(0, 0);
    }, c = window.pageXOffset, d = window.pageYOffset;
    o = qr(_i(window, "scroll", l), Kn(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`), Kn(document.documentElement, "overflow", "hidden"), Kn(document.body, "marginTop", `-${d}px`), () => {
      window.scrollTo(c, d);
    }), window.scrollTo(0, 0);
  }, u = qr(_i(document, "touchstart", r, {
    passive: !1,
    capture: !0
  }), _i(document, "touchmove", n, {
    passive: !1,
    capture: !0
  }), _i(document, "touchend", i, {
    passive: !1,
    capture: !0
  }), _i(document, "focus", a, !0));
  return () => {
    t == null || t(), o == null || o(), u();
  };
}
function Kn(e, t, r) {
  let n = e.style[t];
  return e.style[t] = r, () => {
    e.style[t] = n;
  };
}
function _i(e, t, r, n) {
  return e.addEventListener(t, r, n), () => {
    e.removeEventListener(t, r, n);
  };
}
function up(e) {
  let t = document.scrollingElement || document.documentElement;
  for (; e && e !== t; ) {
    let r = Ls(e);
    if (r !== document.documentElement && r !== document.body && r !== e) {
      let n = r.getBoundingClientRect().top, i = e.getBoundingClientRect().top;
      i > n + e.clientHeight && (r.scrollTop += i - n);
    }
    e = r.parentElement;
  }
}
function lp(e) {
  return e instanceof HTMLInputElement && !YC.has(e.type) || e instanceof HTMLTextAreaElement || e instanceof HTMLElement && e.isContentEditable;
}
var h0 = {};
h0 = {
  dismiss: "تجاهل"
};
var p0 = {};
p0 = {
  dismiss: "Отхвърляне"
};
var m0 = {};
m0 = {
  dismiss: "Odstranit"
};
var v0 = {};
v0 = {
  dismiss: "Luk"
};
var y0 = {};
y0 = {
  dismiss: "Schließen"
};
var g0 = {};
g0 = {
  dismiss: "Απόρριψη"
};
var b0 = {};
b0 = {
  dismiss: "Dismiss"
};
var $0 = {};
$0 = {
  dismiss: "Descartar"
};
var x0 = {};
x0 = {
  dismiss: "Lõpeta"
};
var D0 = {};
D0 = {
  dismiss: "Hylkää"
};
var E0 = {};
E0 = {
  dismiss: "Rejeter"
};
var w0 = {};
w0 = {
  dismiss: "התעלם"
};
var C0 = {};
C0 = {
  dismiss: "Odbaci"
};
var S0 = {};
S0 = {
  dismiss: "Elutasítás"
};
var k0 = {};
k0 = {
  dismiss: "Ignora"
};
var P0 = {};
P0 = {
  dismiss: "閉じる"
};
var T0 = {};
T0 = {
  dismiss: "무시"
};
var A0 = {};
A0 = {
  dismiss: "Atmesti"
};
var _0 = {};
_0 = {
  dismiss: "Nerādīt"
};
var F0 = {};
F0 = {
  dismiss: "Lukk"
};
var O0 = {};
O0 = {
  dismiss: "Negeren"
};
var I0 = {};
I0 = {
  dismiss: "Zignoruj"
};
var R0 = {};
R0 = {
  dismiss: "Descartar"
};
var B0 = {};
B0 = {
  dismiss: "Dispensar"
};
var M0 = {};
M0 = {
  dismiss: "Revocare"
};
var N0 = {};
N0 = {
  dismiss: "Пропустить"
};
var L0 = {};
L0 = {
  dismiss: "Zrušiť"
};
var V0 = {};
V0 = {
  dismiss: "Opusti"
};
var j0 = {};
j0 = {
  dismiss: "Odbaci"
};
var z0 = {};
z0 = {
  dismiss: "Avvisa"
};
var K0 = {};
K0 = {
  dismiss: "Kapat"
};
var U0 = {};
U0 = {
  dismiss: "Скасувати"
};
var q0 = {};
q0 = {
  dismiss: "取消"
};
var H0 = {};
H0 = {
  dismiss: "關閉"
};
var W0 = {};
W0 = {
  "ar-AE": h0,
  "bg-BG": p0,
  "cs-CZ": m0,
  "da-DK": v0,
  "de-DE": y0,
  "el-GR": g0,
  "en-US": b0,
  "es-ES": $0,
  "et-EE": x0,
  "fi-FI": D0,
  "fr-FR": E0,
  "he-IL": w0,
  "hr-HR": C0,
  "hu-HU": S0,
  "it-IT": k0,
  "ja-JP": P0,
  "ko-KR": T0,
  "lt-LT": A0,
  "lv-LV": _0,
  "nb-NO": F0,
  "nl-NL": O0,
  "pl-PL": I0,
  "pt-BR": R0,
  "pt-PT": B0,
  "ro-RO": M0,
  "ru-RU": N0,
  "sk-SK": L0,
  "sl-SI": V0,
  "sr-SP": j0,
  "sv-SE": z0,
  "tr-TR": K0,
  "uk-UA": U0,
  "zh-CN": q0,
  "zh-TW": H0
};
const cp = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: "1px",
  whiteSpace: "nowrap"
};
function Q0(e = {}) {
  let { style: t, isFocusable: r } = e, [n, i] = ee(!1), { focusWithinProps: a } = yi({
    isDisabled: !r,
    onFocusWithinChange: (s) => i(s)
  }), o = G(() => n ? t : t ? {
    ...cp,
    ...t
  } : cp, [
    n
  ]);
  return {
    visuallyHiddenProps: {
      ...a,
      style: o
    }
  };
}
function sc(e) {
  let { children: t, elementType: r = "div", isFocusable: n, style: i, ...a } = e, { visuallyHiddenProps: o } = Q0(e);
  return /* @__PURE__ */ A.createElement(r, ye(a, o), t);
}
function eS(e) {
  return e && e.__esModule ? e.default : e;
}
function uc(e) {
  let { onDismiss: t, ...r } = e, n = qt(eS(W0), "@react-aria/overlays"), i = hn(r, n.format("dismiss")), a = () => {
    t && t();
  };
  return /* @__PURE__ */ A.createElement(sc, null, /* @__PURE__ */ A.createElement("button", {
    ...i,
    tabIndex: -1,
    onClick: a,
    style: {
      width: 1,
      height: 1
    }
  }));
}
let Fi = /* @__PURE__ */ new WeakMap(), Pt = [];
function Ld(e, t = document.body) {
  let r = new Set(e), n = /* @__PURE__ */ new Set(), i = (u) => {
    for (let f of u.querySelectorAll("[data-live-announcer], [data-react-aria-top-layer]")) r.add(f);
    let l = (f) => {
      if (r.has(f) || n.has(f.parentElement) && f.parentElement.getAttribute("role") !== "row") return NodeFilter.FILTER_REJECT;
      for (let h of r)
        if (f.contains(h)) return NodeFilter.FILTER_SKIP;
      return NodeFilter.FILTER_ACCEPT;
    }, c = document.createTreeWalker(u, NodeFilter.SHOW_ELEMENT, {
      acceptNode: l
    }), d = l(u);
    if (d === NodeFilter.FILTER_ACCEPT && a(u), d !== NodeFilter.FILTER_REJECT) {
      let f = c.nextNode();
      for (; f != null; )
        a(f), f = c.nextNode();
    }
  }, a = (u) => {
    var l;
    let c = (l = Fi.get(u)) !== null && l !== void 0 ? l : 0;
    u.getAttribute("aria-hidden") === "true" && c === 0 || (c === 0 && u.setAttribute("aria-hidden", "true"), n.add(u), Fi.set(u, c + 1));
  };
  Pt.length && Pt[Pt.length - 1].disconnect(), i(t);
  let o = new MutationObserver((u) => {
    for (let l of u)
      if (!(l.type !== "childList" || l.addedNodes.length === 0) && ![
        ...r,
        ...n
      ].some((c) => c.contains(l.target))) {
        for (let c of l.removedNodes) c instanceof Element && (r.delete(c), n.delete(c));
        for (let c of l.addedNodes)
          (c instanceof HTMLElement || c instanceof SVGElement) && (c.dataset.liveAnnouncer === "true" || c.dataset.reactAriaTopLayer === "true") ? r.add(c) : c instanceof Element && i(c);
      }
  });
  o.observe(t, {
    childList: !0,
    subtree: !0
  });
  let s = {
    observe() {
      o.observe(t, {
        childList: !0,
        subtree: !0
      });
    },
    disconnect() {
      o.disconnect();
    }
  };
  return Pt.push(s), () => {
    o.disconnect();
    for (let u of n) {
      let l = Fi.get(u);
      l === 1 ? (u.removeAttribute("aria-hidden"), Fi.delete(u)) : Fi.set(u, l - 1);
    }
    s === Pt[Pt.length - 1] ? (Pt.pop(), Pt.length && Pt[Pt.length - 1].observe()) : Pt.splice(Pt.indexOf(s), 1);
  };
}
function tS(e, t) {
  let { triggerRef: r, popoverRef: n, isNonModal: i, isKeyboardDismissDisabled: a, shouldCloseOnInteractOutside: o, ...s } = e, { overlayProps: u, underlayProps: l } = c0({
    isOpen: t.isOpen,
    onClose: t.close,
    shouldCloseOnBlur: !0,
    isDismissable: !i,
    isKeyboardDismissDisabled: a,
    shouldCloseOnInteractOutside: o
  }, n), { overlayProps: c, arrowProps: d, placement: f } = QC({
    ...s,
    targetRef: r,
    overlayRef: n,
    isOpen: t.isOpen,
    onClose: i ? t.close : null
  });
  return f0({
    isDisabled: i || !t.isOpen
  }), Re(() => {
    if (t.isOpen && !i && n.current) return Ld([
      n.current
    ]);
  }, [
    i,
    t.isOpen,
    n
  ]), {
    popoverProps: ye(u, c),
    arrowProps: d,
    underlayProps: l,
    placement: f
  };
}
const rS = /* @__PURE__ */ de({});
function nS() {
  var e;
  return (e = le(rS)) !== null && e !== void 0 ? e : {};
}
const G0 = /* @__PURE__ */ A.createContext(null);
function Z0(e) {
  let t = Er(), { portalContainer: r = t ? null : document.body, isExiting: n } = e, [i, a] = ee(!1), o = G(() => ({
    contain: i,
    setContain: a
  }), [
    i,
    a
  ]), { getContainer: s } = nS();
  if (!e.portalContainer && s && (r = s()), !r) return null;
  let u = e.children;
  return e.disableFocusManagement || (u = /* @__PURE__ */ A.createElement(oy, {
    restoreFocus: !0,
    contain: i && !n
  }, u)), u = /* @__PURE__ */ A.createElement(G0.Provider, {
    value: o
  }, /* @__PURE__ */ A.createElement(Nw, null, u)), /* @__PURE__ */ Oc.createPortal(u, r);
}
function Y0() {
  let e = le(G0), t = e == null ? void 0 : e.setContain;
  Re(() => {
    t == null || t(!0);
  }, [
    t
  ]);
}
function iS(e, t, r) {
  let { overlayProps: n, underlayProps: i } = c0({
    ...e,
    isOpen: t.isOpen,
    onClose: t.close
  }, r);
  return f0({
    isDisabled: !t.isOpen
  }), Y0(), oe(() => {
    if (t.isOpen) return Ld([
      r.current
    ]);
  }, [
    t.isOpen,
    r
  ]), {
    modalProps: ye(n),
    underlayProps: i
  };
}
const Qs = /* @__PURE__ */ new WeakMap();
function aS(e) {
  return typeof e == "string" ? e.replace(/\s*/g, "") : "" + e;
}
function J0(e, t) {
  let r = Qs.get(e);
  if (!r) throw new Error("Unknown list");
  return `${r.id}-option-${aS(t)}`;
}
function lc(e) {
  return Eo() ? e.altKey : e.ctrlKey;
}
function Rn(e) {
  return yr() ? e.metaKey : e.ctrlKey;
}
const oS = 1e3;
function X0(e) {
  let { keyboardDelegate: t, selectionManager: r, onTypeSelect: n } = e, i = q({
    search: "",
    timeout: null
  }).current, a = (o) => {
    let s = sS(o.key);
    if (!s || o.ctrlKey || o.metaKey || !o.currentTarget.contains(o.target)) return;
    s === " " && i.search.trim().length > 0 && (o.preventDefault(), "continuePropagation" in o || o.stopPropagation()), i.search += s;
    let u = t.getKeyForSearch(i.search, r.focusedKey);
    u == null && (u = t.getKeyForSearch(i.search)), u != null && (r.setFocusedKey(u), n && n(u)), clearTimeout(i.timeout), i.timeout = setTimeout(() => {
      i.search = "";
    }, oS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: t.getKeyForSearch ? a : null
    }
  };
}
function sS(e) {
  return e.length === 1 || !/^[A-Z]/i.test(e) ? e : "";
}
function eb(e) {
  let { selectionManager: t, keyboardDelegate: r, ref: n, autoFocus: i = !1, shouldFocusWrap: a = !1, disallowEmptySelection: o = !1, disallowSelectAll: s = !1, selectOnFocus: u = t.selectionBehavior === "replace", disallowTypeAhead: l = !1, shouldUseVirtualFocus: c, allowsTabNavigation: d = !1, isVirtualized: f, scrollRef: h = n, linkBehavior: p = "action" } = e, { direction: v } = ct(), g = Ms(), $ = (w) => {
    if (w.altKey && w.key === "Tab" && w.preventDefault(), !n.current.contains(w.target)) return;
    const E = (j, ae) => {
      if (j != null) {
        if (t.isLink(j) && p === "selection" && u && !lc(w)) {
          z$(() => {
            t.setFocusedKey(j, ae);
          });
          let ne = h.current.querySelector(`[data-key="${CSS.escape(j.toString())}"]`), me = t.getItemProps(j);
          g.open(ne, w, me.href, me.routerOptions);
          return;
        }
        if (t.setFocusedKey(j, ae), t.isLink(j) && p === "override") return;
        w.shiftKey && t.selectionMode === "multiple" ? t.extendSelection(j) : u && !lc(w) && t.replaceSelection(j);
      }
    };
    switch (w.key) {
      case "ArrowDown":
        if (r.getKeyBelow) {
          var k, C;
          w.preventDefault();
          let j = t.focusedKey != null ? r.getKeyBelow(t.focusedKey) : (k = r.getFirstKey) === null || k === void 0 ? void 0 : k.call(r);
          j == null && a && (j = (C = r.getFirstKey) === null || C === void 0 ? void 0 : C.call(r, t.focusedKey)), E(j);
        }
        break;
      case "ArrowUp":
        if (r.getKeyAbove) {
          var T, L;
          w.preventDefault();
          let j = t.focusedKey != null ? r.getKeyAbove(t.focusedKey) : (T = r.getLastKey) === null || T === void 0 ? void 0 : T.call(r);
          j == null && a && (j = (L = r.getLastKey) === null || L === void 0 ? void 0 : L.call(r, t.focusedKey)), E(j);
        }
        break;
      case "ArrowLeft":
        if (r.getKeyLeftOf) {
          var O, x;
          w.preventDefault();
          let j = r.getKeyLeftOf(t.focusedKey);
          j == null && a && (j = v === "rtl" ? (O = r.getFirstKey) === null || O === void 0 ? void 0 : O.call(r, t.focusedKey) : (x = r.getLastKey) === null || x === void 0 ? void 0 : x.call(r, t.focusedKey)), E(j, v === "rtl" ? "first" : "last");
        }
        break;
      case "ArrowRight":
        if (r.getKeyRightOf) {
          var U, K;
          w.preventDefault();
          let j = r.getKeyRightOf(t.focusedKey);
          j == null && a && (j = v === "rtl" ? (U = r.getLastKey) === null || U === void 0 ? void 0 : U.call(r, t.focusedKey) : (K = r.getFirstKey) === null || K === void 0 ? void 0 : K.call(r, t.focusedKey)), E(j, v === "rtl" ? "last" : "first");
        }
        break;
      case "Home":
        if (r.getFirstKey) {
          w.preventDefault();
          let j = r.getFirstKey(t.focusedKey, Rn(w));
          t.setFocusedKey(j), Rn(w) && w.shiftKey && t.selectionMode === "multiple" ? t.extendSelection(j) : u && t.replaceSelection(j);
        }
        break;
      case "End":
        if (r.getLastKey) {
          w.preventDefault();
          let j = r.getLastKey(t.focusedKey, Rn(w));
          t.setFocusedKey(j), Rn(w) && w.shiftKey && t.selectionMode === "multiple" ? t.extendSelection(j) : u && t.replaceSelection(j);
        }
        break;
      case "PageDown":
        if (r.getKeyPageBelow) {
          w.preventDefault();
          let j = r.getKeyPageBelow(t.focusedKey);
          E(j);
        }
        break;
      case "PageUp":
        if (r.getKeyPageAbove) {
          w.preventDefault();
          let j = r.getKeyPageAbove(t.focusedKey);
          E(j);
        }
        break;
      case "a":
        Rn(w) && t.selectionMode === "multiple" && s !== !0 && (w.preventDefault(), t.selectAll());
        break;
      case "Escape":
        !o && t.selectedKeys.size !== 0 && (w.stopPropagation(), w.preventDefault(), t.clearSelection());
        break;
      case "Tab":
        if (!d) {
          if (w.shiftKey) n.current.focus();
          else {
            let j = gt(n.current, {
              tabbable: !0
            }), ae, ne;
            do
              ne = j.lastChild(), ne && (ae = ne);
            while (ne);
            ae && !ae.contains(document.activeElement) && Wt(ae);
          }
          break;
        }
    }
  }, m = q({
    top: 0,
    left: 0
  });
  Gn(h, "scroll", f ? null : () => {
    m.current = {
      top: h.current.scrollTop,
      left: h.current.scrollLeft
    };
  });
  let b = (w) => {
    if (t.isFocused) {
      w.currentTarget.contains(w.target) || t.setFocused(!1);
      return;
    }
    if (w.currentTarget.contains(w.target)) {
      if (t.setFocused(!0), t.focusedKey == null) {
        let C = (L) => {
          L != null && (t.setFocusedKey(L), u && t.replaceSelection(L));
        }, T = w.relatedTarget;
        var E, k;
        T && w.currentTarget.compareDocumentPosition(T) & Node.DOCUMENT_POSITION_FOLLOWING ? C((E = t.lastSelectedKey) !== null && E !== void 0 ? E : r.getLastKey()) : C((k = t.firstSelectedKey) !== null && k !== void 0 ? k : r.getFirstKey());
      } else f || (h.current.scrollTop = m.current.top, h.current.scrollLeft = m.current.left);
      if (!f && t.focusedKey != null) {
        let C = h.current.querySelector(`[data-key="${CSS.escape(t.focusedKey.toString())}"]`);
        C && (C.contains(document.activeElement) || Wt(C), Ko() === "keyboard" && Lo(C, {
          containingElement: n.current
        }));
      }
    }
  }, D = (w) => {
    w.currentTarget.contains(w.relatedTarget) || t.setFocused(!1);
  };
  const S = q(i);
  oe(() => {
    if (S.current) {
      let w = null;
      i === "first" && (w = r.getFirstKey()), i === "last" && (w = r.getLastKey());
      let E = t.selectedKeys;
      if (E.size) {
        for (let k of E) if (t.canSelectItem(k)) {
          w = k;
          break;
        }
      }
      t.setFocused(!0), t.setFocusedKey(w), w == null && !c && mn(n.current);
    }
  }, []);
  let P = q(t.focusedKey);
  oe(() => {
    let w = Ko();
    if (t.isFocused && t.focusedKey != null && (h != null && h.current)) {
      let E = h.current.querySelector(`[data-key="${CSS.escape(t.focusedKey.toString())}"]`);
      E && (w === "keyboard" || S.current) && (f || Wv(h.current, E), w !== "virtual" && Lo(E, {
        containingElement: n.current
      }));
    }
    t.isFocused && t.focusedKey == null && P.current != null && mn(n.current), P.current = t.focusedKey, S.current = !1;
  }, [
    f,
    h,
    t.focusedKey,
    t.isFocused,
    n
  ]);
  let B = {
    onKeyDown: $,
    onFocus: b,
    onBlur: D,
    onMouseDown(w) {
      h.current === w.target && w.preventDefault();
    }
  }, { typeSelectProps: y } = X0({
    keyboardDelegate: r,
    selectionManager: t
  });
  l || (B = ye(y, B));
  let _;
  return c || (_ = t.focusedKey == null ? 0 : -1), {
    collectionProps: {
      ...B,
      tabIndex: _
    }
  };
}
function uS(e) {
  let { selectionManager: t, key: r, ref: n, shouldSelectOnPressUp: i, shouldUseVirtualFocus: a, focus: o, isDisabled: s, onAction: u, allowsDifferentPressOrigin: l, linkBehavior: c = "action" } = e, d = Ms(), f = (x) => {
    if (x.pointerType === "keyboard" && lc(x)) t.toggleSelection(r);
    else {
      if (t.selectionMode === "none") return;
      if (t.isLink(r)) {
        if (c === "selection") {
          let U = t.getItemProps(r);
          d.open(n.current, x, U.href, U.routerOptions), t.setSelectedKeys(t.selectedKeys);
          return;
        } else if (c === "override" || c === "none") return;
      }
      t.selectionMode === "single" ? t.isSelected(r) && !t.disallowEmptySelection ? t.toggleSelection(r) : t.replaceSelection(r) : x && x.shiftKey ? t.extendSelection(r) : t.selectionBehavior === "toggle" || x && (Rn(x) || x.pointerType === "touch" || x.pointerType === "virtual") ? t.toggleSelection(r) : t.replaceSelection(r);
    }
  };
  oe(() => {
    r === t.focusedKey && t.isFocused && !a && (o ? o() : document.activeElement !== n.current && mn(n.current));
  }, [
    n,
    r,
    t.focusedKey,
    t.childFocusStrategy,
    t.isFocused,
    a
  ]), s = s || t.isDisabled(r);
  let h = {};
  !a && !s ? h = {
    tabIndex: r === t.focusedKey ? 0 : -1,
    onFocus(x) {
      x.target === n.current && t.setFocusedKey(r);
    }
  } : s && (h.onMouseDown = (x) => {
    x.preventDefault();
  });
  let p = t.isLink(r) && c === "override", v = t.isLink(r) && c !== "selection" && c !== "none", g = !s && t.canSelectItem(r) && !p, $ = (u || v) && !s, m = $ && (t.selectionBehavior === "replace" ? !g : !g || t.isEmpty), b = $ && g && t.selectionBehavior === "replace", D = m || b, S = q(null), P = D && g, B = q(!1), y = q(!1), _ = (x) => {
    if (u && u(), v) {
      let U = t.getItemProps(r);
      d.open(n.current, x, U.href, U.routerOptions);
    }
  }, w = {};
  i ? (w.onPressStart = (x) => {
    S.current = x.pointerType, B.current = P, x.pointerType === "keyboard" && (!D || fp()) && f(x);
  }, l ? (w.onPressUp = m ? null : (x) => {
    x.pointerType !== "keyboard" && g && f(x);
  }, w.onPress = m ? _ : null) : w.onPress = (x) => {
    if (m || b && x.pointerType !== "mouse") {
      if (x.pointerType === "keyboard" && !dp()) return;
      _(x);
    } else x.pointerType !== "keyboard" && g && f(x);
  }) : (w.onPressStart = (x) => {
    S.current = x.pointerType, B.current = P, y.current = m, g && (x.pointerType === "mouse" && !m || x.pointerType === "keyboard" && (!$ || fp())) && f(x);
  }, w.onPress = (x) => {
    (x.pointerType === "touch" || x.pointerType === "pen" || x.pointerType === "virtual" || x.pointerType === "keyboard" && D && dp() || x.pointerType === "mouse" && y.current) && (D ? _(x) : g && f(x));
  }), h["data-key"] = r, w.preventFocusOnPress = a;
  let { pressProps: E, isPressed: k } = Ia(w), C = b ? (x) => {
    S.current === "mouse" && (x.stopPropagation(), x.preventDefault(), _(x));
  } : void 0, { longPressProps: T } = iy({
    isDisabled: !P,
    onLongPress(x) {
      x.pointerType === "touch" && (f(x), t.setSelectionBehavior("toggle"));
    }
  }), L = (x) => {
    S.current === "touch" && B.current && x.preventDefault();
  }, O = t.isLink(r) ? (x) => {
    fn.isOpening || x.preventDefault();
  } : void 0;
  return {
    itemProps: ye(h, g || m ? E : {}, P ? T : {}, {
      onDoubleClick: C,
      onDragStartCapture: L,
      onClick: O
    }),
    isPressed: k,
    isSelected: t.isSelected(r),
    isFocused: t.isFocused && t.focusedKey === r,
    isDisabled: s,
    allowsSelection: g,
    hasAction: D
  };
}
function dp() {
  let e = window.event;
  return (e == null ? void 0 : e.key) === "Enter";
}
function fp() {
  let e = window.event;
  return (e == null ? void 0 : e.key) === " " || (e == null ? void 0 : e.code) === "Space";
}
class Gs {
  isDisabled(t) {
    var r;
    return this.disabledBehavior === "all" && (((r = t.props) === null || r === void 0 ? void 0 : r.isDisabled) || this.disabledKeys.has(t.key));
  }
  getNextKey(t) {
    for (t = this.collection.getKeyAfter(t); t != null; ) {
      let r = this.collection.getItem(t);
      if (r.type === "item" && !this.isDisabled(r)) return t;
      t = this.collection.getKeyAfter(t);
    }
    return null;
  }
  getPreviousKey(t) {
    for (t = this.collection.getKeyBefore(t); t != null; ) {
      let r = this.collection.getItem(t);
      if (r.type === "item" && !this.isDisabled(r)) return t;
      t = this.collection.getKeyBefore(t);
    }
    return null;
  }
  findKey(t, r, n) {
    let i = this.getItem(t);
    if (!i) return null;
    let a = i.getBoundingClientRect();
    do
      t = r(t), i = this.getItem(t);
    while (i && n(a, i.getBoundingClientRect()));
    return t;
  }
  isSameRow(t, r) {
    return t.top === r.top || t.left !== r.left;
  }
  isSameColumn(t, r) {
    return t.left === r.left || t.top !== r.top;
  }
  getKeyBelow(t) {
    return this.layout === "grid" && this.orientation === "vertical" ? this.findKey(t, (r) => this.getNextKey(r), this.isSameRow) : this.getNextKey(t);
  }
  getKeyAbove(t) {
    return this.layout === "grid" && this.orientation === "vertical" ? this.findKey(t, (r) => this.getPreviousKey(r), this.isSameRow) : this.getPreviousKey(t);
  }
  getNextColumn(t, r) {
    return r ? this.getPreviousKey(t) : this.getNextKey(t);
  }
  getKeyRightOf(t) {
    return this.layout === "grid" ? this.orientation === "vertical" ? this.getNextColumn(t, this.direction === "rtl") : this.findKey(t, (r) => this.getNextColumn(r, this.direction === "rtl"), this.isSameColumn) : this.orientation === "horizontal" ? this.getNextColumn(t, this.direction === "rtl") : null;
  }
  getKeyLeftOf(t) {
    return this.layout === "grid" ? this.orientation === "vertical" ? this.getNextColumn(t, this.direction === "ltr") : this.findKey(t, (r) => this.getNextColumn(r, this.direction === "ltr"), this.isSameColumn) : this.orientation === "horizontal" ? this.getNextColumn(t, this.direction === "ltr") : null;
  }
  getFirstKey() {
    let t = this.collection.getFirstKey();
    for (; t != null; ) {
      let r = this.collection.getItem(t);
      if ((r == null ? void 0 : r.type) === "item" && !this.isDisabled(r)) return t;
      t = this.collection.getKeyAfter(t);
    }
    return null;
  }
  getLastKey() {
    let t = this.collection.getLastKey();
    for (; t != null; ) {
      let r = this.collection.getItem(t);
      if (r.type === "item" && !this.isDisabled(r)) return t;
      t = this.collection.getKeyBefore(t);
    }
    return null;
  }
  getItem(t) {
    return t !== null ? this.ref.current.querySelector(`[data-key="${CSS.escape(t.toString())}"]`) : null;
  }
  getKeyPageAbove(t) {
    let r = this.ref.current, n = this.getItem(t);
    if (!n) return null;
    if (!ha(r)) return this.getFirstKey();
    let i = r.getBoundingClientRect(), a = n.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let o = i.x - r.scrollLeft, s = Math.max(0, a.x - o + a.width - i.width);
      for (; n && a.x - o > s; )
        t = this.getKeyAbove(t), n = t == null ? null : this.getItem(t), a = n == null ? void 0 : n.getBoundingClientRect();
    } else {
      let o = i.y - r.scrollTop, s = Math.max(0, a.y - o + a.height - i.height);
      for (; n && a.y - o > s; )
        t = this.getKeyAbove(t), n = t == null ? null : this.getItem(t), a = n == null ? void 0 : n.getBoundingClientRect();
    }
    return t ?? this.getFirstKey();
  }
  getKeyPageBelow(t) {
    let r = this.ref.current, n = this.getItem(t);
    if (!n) return null;
    if (!ha(r)) return this.getLastKey();
    let i = r.getBoundingClientRect(), a = n.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let o = i.x - r.scrollLeft, s = Math.min(r.scrollWidth, a.x - o - a.width + i.width);
      for (; n && a.x - o < s; )
        t = this.getKeyBelow(t), n = t == null ? null : this.getItem(t), a = n == null ? void 0 : n.getBoundingClientRect();
    } else {
      let o = i.y - r.scrollTop, s = Math.min(r.scrollHeight, a.y - o - a.height + i.height);
      for (; n && a.y - o < s; )
        t = this.getKeyBelow(t), n = t == null ? null : this.getItem(t), a = n == null ? void 0 : n.getBoundingClientRect();
    }
    return t ?? this.getLastKey();
  }
  getKeyForSearch(t, r) {
    if (!this.collator) return null;
    let n = this.collection, i = r || this.getFirstKey();
    for (; i != null; ) {
      let a = n.getItem(i), o = a.textValue.slice(0, t.length);
      if (a.textValue && this.collator.compare(o, t) === 0) return i;
      i = this.getKeyBelow(i);
    }
    return null;
  }
  constructor(...t) {
    if (t.length === 1) {
      let r = t[0];
      this.collection = r.collection, this.ref = r.ref, this.collator = r.collator, this.disabledKeys = r.disabledKeys || /* @__PURE__ */ new Set(), this.disabledBehavior = r.disabledBehavior || "all", this.orientation = r.orientation, this.direction = r.direction, this.layout = r.layout || "stack";
    } else
      this.collection = t[0], this.disabledKeys = t[1], this.ref = t[2], this.collator = t[3], this.layout = "stack", this.orientation = "vertical", this.disabledBehavior = "all";
    this.layout === "stack" && this.orientation === "vertical" && (this.getKeyLeftOf = void 0, this.getKeyRightOf = void 0);
  }
}
function lS(e) {
  let { selectionManager: t, collection: r, disabledKeys: n, ref: i, keyboardDelegate: a } = e, o = qs({
    usage: "search",
    sensitivity: "base"
  }), s = t.disabledBehavior, u = G(() => a || new Gs({
    collection: r,
    disabledKeys: n,
    disabledBehavior: s,
    ref: i,
    collator: o
  }), [
    a,
    r,
    n,
    i,
    o,
    s
  ]), { collectionProps: l } = eb({
    ...e,
    ref: i,
    selectionManager: t,
    keyboardDelegate: u
  });
  return {
    listProps: l
  };
}
function cS(e, t, r) {
  let n = Oe(e, {
    labelable: !0
  }), i = e.selectionBehavior || "toggle", a = e.linkBehavior || (i === "replace" ? "action" : "override");
  i === "toggle" && a === "action" && (a = "override");
  let { listProps: o } = lS({
    ...e,
    ref: r,
    selectionManager: t.selectionManager,
    collection: t.collection,
    disabledKeys: t.disabledKeys,
    linkBehavior: a
  }), { focusWithinProps: s } = yi({
    onFocusWithin: e.onFocus,
    onBlurWithin: e.onBlur,
    onFocusWithinChange: e.onFocusChange
  }), u = St(e.id);
  Qs.set(t, {
    id: u,
    shouldUseVirtualFocus: e.shouldUseVirtualFocus,
    shouldSelectOnPressUp: e.shouldSelectOnPressUp,
    shouldFocusOnHover: e.shouldFocusOnHover,
    isVirtualized: e.isVirtualized,
    onAction: e.onAction,
    linkBehavior: a
  });
  let { labelProps: l, fieldProps: c } = Sg({
    ...e,
    id: u,
    // listbox is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  return {
    labelProps: l,
    listBoxProps: ye(n, s, t.selectionManager.selectionMode === "multiple" ? {
      "aria-multiselectable": "true"
    } : {}, {
      role: "listbox",
      ...ye(c, o)
    })
  };
}
class dS {
  build(t, r) {
    return this.context = r, hp(() => this.iterateCollection(t));
  }
  *iterateCollection(t) {
    let { children: r, items: n } = t;
    if (typeof r == "function") {
      if (!n) throw new Error("props.children was a function but props.items is missing");
      for (let i of t.items) yield* this.getFullNode({
        value: i
      }, {
        renderer: r
      });
    } else {
      let i = [];
      A.Children.forEach(r, (o) => {
        i.push(o);
      });
      let a = 0;
      for (let o of i) {
        let s = this.getFullNode({
          element: o,
          index: a
        }, {});
        for (let u of s)
          a++, yield u;
      }
    }
  }
  getKey(t, r, n, i) {
    if (t.key != null) return t.key;
    if (r.type === "cell" && r.key != null) return `${i}${r.key}`;
    let a = r.value;
    if (a != null) {
      var o;
      let s = (o = a.key) !== null && o !== void 0 ? o : a.id;
      if (s == null) throw new Error("No key found for item");
      return s;
    }
    return i ? `${i}.${r.index}` : `$.${r.index}`;
  }
  getChildState(t, r) {
    return {
      renderer: r.renderer || t.renderer
    };
  }
  *getFullNode(t, r, n, i) {
    let a = t.element;
    if (!a && t.value && r && r.renderer) {
      let u = this.cache.get(t.value);
      if (u && (!u.shouldInvalidate || !u.shouldInvalidate(this.context))) {
        u.index = t.index, u.parentKey = i ? i.key : null, yield u;
        return;
      }
      a = r.renderer(t.value);
    }
    if (A.isValidElement(a)) {
      let u = a.type;
      if (typeof u != "function" && typeof u.getCollectionNode != "function") {
        let f = typeof a.type == "function" ? a.type.name : a.type;
        throw new Error(`Unknown element <${f}> in collection.`);
      }
      let l = u.getCollectionNode(a.props, this.context), c = t.index, d = l.next();
      for (; !d.done && d.value; ) {
        let f = d.value;
        t.index = c;
        let h = f.key;
        h || (h = f.element ? null : this.getKey(a, t, r, n));
        let v = [
          ...this.getFullNode({
            ...f,
            key: h,
            index: c,
            wrapper: fS(t.wrapper, f.wrapper)
          }, this.getChildState(r, f), n ? `${n}${a.key}` : a.key, i)
        ];
        for (let g of v) {
          if (g.value = f.value || t.value, g.value && this.cache.set(g.value, g), t.type && g.type !== t.type) throw new Error(`Unsupported type <${Ju(g.type)}> in <${Ju(i.type)}>. Only <${Ju(t.type)}> is supported.`);
          c++, yield g;
        }
        d = l.next(v);
      }
      return;
    }
    if (t.key == null) return;
    let o = this, s = {
      type: t.type,
      props: t.props,
      key: t.key,
      parentKey: i ? i.key : null,
      value: t.value,
      level: i ? i.level + 1 : 0,
      index: t.index,
      rendered: t.rendered,
      textValue: t.textValue,
      "aria-label": t["aria-label"],
      wrapper: t.wrapper,
      shouldInvalidate: t.shouldInvalidate,
      hasChildNodes: t.hasChildNodes,
      childNodes: hp(function* () {
        if (!t.hasChildNodes) return;
        let u = 0;
        for (let l of t.childNodes()) {
          l.key != null && (l.key = `${s.key}${l.key}`), l.index = u;
          let c = o.getFullNode(l, o.getChildState(r, l), s.key, s);
          for (let d of c)
            u++, yield d;
        }
      })
    };
    yield s;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
}
function hp(e) {
  let t = [], r = null;
  return {
    *[Symbol.iterator]() {
      for (let n of t) yield n;
      r || (r = e());
      for (let n of r)
        t.push(n), yield n;
    }
  };
}
function fS(e, t) {
  if (e && t) return (r) => e(t(r));
  if (e) return e;
  if (t) return t;
}
function Ju(e) {
  return e[0].toUpperCase() + e.slice(1);
}
function hS(e, t, r) {
  let n = G(() => new dS(), []), { children: i, items: a, collection: o } = e;
  return G(() => {
    if (o) return o;
    let u = n.build({
      children: i,
      items: a
    }, r);
    return t(u);
  }, [
    n,
    i,
    a,
    o,
    r,
    t
  ]);
}
function Zs(e, t) {
  return typeof t.getChildren == "function" ? t.getChildren(e.key) : e.childNodes;
}
function pS(e) {
  return mS(e);
}
function mS(e, t) {
  for (let r of e)
    return r;
}
function Xu(e, t, r) {
  if (t.parentKey === r.parentKey) return t.index - r.index;
  let n = [
    ...pp(e, t),
    t
  ], i = [
    ...pp(e, r),
    r
  ], a = n.slice(0, i.length).findIndex((o, s) => o !== i[s]);
  return a !== -1 ? (t = n[a], r = i[a], t.index - r.index) : n.findIndex((o) => o === r) >= 0 ? 1 : (i.findIndex((o) => o === t) >= 0, -1);
}
function pp(e, t) {
  let r = [];
  for (; (t == null ? void 0 : t.parentKey) != null; )
    t = e.getItem(t.parentKey), r.unshift(t);
  return r;
}
const mp = /* @__PURE__ */ new WeakMap();
function tb(e) {
  let t = mp.get(e);
  if (t != null) return t;
  t = 0;
  let r = (n) => {
    for (let i of n) i.type === "section" ? r(Zs(i, e)) : t++;
  };
  return r(e), mp.set(e, t), t;
}
function vS(e, t, r) {
  var n, i;
  let { key: a } = e, o = Qs.get(t);
  var s;
  let u = (s = e.isDisabled) !== null && s !== void 0 ? s : t.selectionManager.isDisabled(a);
  var l;
  let c = (l = e.isSelected) !== null && l !== void 0 ? l : t.selectionManager.isSelected(a);
  var d;
  let f = (d = e.shouldSelectOnPressUp) !== null && d !== void 0 ? d : o == null ? void 0 : o.shouldSelectOnPressUp;
  var h;
  let p = (h = e.shouldFocusOnHover) !== null && h !== void 0 ? h : o == null ? void 0 : o.shouldFocusOnHover;
  var v;
  let g = (v = e.shouldUseVirtualFocus) !== null && v !== void 0 ? v : o == null ? void 0 : o.shouldUseVirtualFocus;
  var $;
  let m = ($ = e.isVirtualized) !== null && $ !== void 0 ? $ : o == null ? void 0 : o.isVirtualized, b = ui(), D = ui(), S = {
    role: "option",
    "aria-disabled": u || void 0,
    "aria-selected": t.selectionManager.selectionMode !== "none" ? c : void 0
  };
  yr() && yd() || (S["aria-label"] = e["aria-label"], S["aria-labelledby"] = b, S["aria-describedby"] = D);
  let P = t.collection.getItem(a);
  if (m) {
    let O = Number(P == null ? void 0 : P.index);
    S["aria-posinset"] = Number.isNaN(O) ? void 0 : O + 1, S["aria-setsize"] = tb(t.collection);
  }
  let B = o != null && o.onAction ? () => {
    var O;
    return o == null || (O = o.onAction) === null || O === void 0 ? void 0 : O.call(o, a);
  } : void 0, { itemProps: y, isPressed: _, isFocused: w, hasAction: E, allowsSelection: k } = uS({
    selectionManager: t.selectionManager,
    key: a,
    ref: r,
    shouldSelectOnPressUp: f,
    allowsDifferentPressOrigin: f && p,
    isVirtualized: m,
    shouldUseVirtualFocus: g,
    isDisabled: u,
    onAction: B || !(P == null || (n = P.props) === null || n === void 0) && n.onAction ? qr(P == null || (i = P.props) === null || i === void 0 ? void 0 : i.onAction, B) : void 0,
    linkBehavior: o == null ? void 0 : o.linkBehavior
  }), { hoverProps: C } = En({
    isDisabled: u || !p,
    onHoverStart() {
      zo() || (t.selectionManager.setFocused(!0), t.selectionManager.setFocusedKey(a));
    }
  }), T = Oe(P == null ? void 0 : P.props);
  delete T.id;
  let L = Dw(P == null ? void 0 : P.props);
  return {
    optionProps: {
      ...S,
      ...ye(T, y, C, L),
      id: J0(t, a)
    },
    labelProps: {
      id: b
    },
    descriptionProps: {
      id: D
    },
    isFocused: w,
    isFocusVisible: w && zo(),
    isSelected: c,
    isDisabled: u,
    isPressed: _,
    allowsSelection: k,
    hasAction: E
  };
}
function yS(e) {
  let { heading: t, "aria-label": r } = e, n = St();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: t ? {
      // Techincally, listbox cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a visual label for the nested group.
      id: n,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": r,
      "aria-labelledby": t ? n : void 0
    }
  };
}
var rb = {};
rb = {
  longPressMessage: "اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة"
};
var nb = {};
nb = {
  longPressMessage: "Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто"
};
var ib = {};
ib = {
  longPressMessage: "Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku"
};
var ab = {};
ab = {
  longPressMessage: "Langt tryk eller tryk på Alt + pil ned for at åbne menuen"
};
var ob = {};
ob = {
  longPressMessage: "Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen"
};
var sb = {};
sb = {
  longPressMessage: "Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού"
};
var ub = {};
ub = {
  longPressMessage: "Long press or press Alt + ArrowDown to open menu"
};
var lb = {};
lb = {
  longPressMessage: "Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú"
};
var cb = {};
cb = {
  longPressMessage: "Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool"
};
var db = {};
db = {
  longPressMessage: "Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli"
};
var fb = {};
fb = {
  longPressMessage: "Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu."
};
var hb = {};
hb = {
  longPressMessage: "לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט"
};
var pb = {};
pb = {
  longPressMessage: "Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika"
};
var mb = {};
mb = {
  longPressMessage: "Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához"
};
var vb = {};
vb = {
  longPressMessage: "Premere a lungo o premere Alt + Freccia giù per aprire il menu"
};
var yb = {};
yb = {
  longPressMessage: "長押しまたは Alt+下矢印キーでメニューを開く"
};
var gb = {};
gb = {
  longPressMessage: "길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기"
};
var bb = {};
bb = {
  longPressMessage: "Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“."
};
var $b = {};
$b = {
  longPressMessage: "Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa"
};
var xb = {};
xb = {
  longPressMessage: "Langt trykk eller trykk Alt + PilNed for å åpne menyen"
};
var Db = {};
Db = {
  longPressMessage: "Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen"
};
var Eb = {};
Eb = {
  longPressMessage: "Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu"
};
var wb = {};
wb = {
  longPressMessage: "Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu"
};
var Cb = {};
Cb = {
  longPressMessage: "Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu"
};
var Sb = {};
Sb = {
  longPressMessage: "Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul"
};
var kb = {};
kb = {
  longPressMessage: "Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню"
};
var Pb = {};
Pb = {
  longPressMessage: "Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol"
};
var Tb = {};
Tb = {
  longPressMessage: "Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol"
};
var Ab = {};
Ab = {
  longPressMessage: "Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni"
};
var _b = {};
_b = {
  longPressMessage: "Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn"
};
var Fb = {};
Fb = {
  longPressMessage: "Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın"
};
var Ob = {};
Ob = {
  longPressMessage: "Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню"
};
var Ib = {};
Ib = {
  longPressMessage: "长按或按 Alt + 向下方向键以打开菜单"
};
var Rb = {};
Rb = {
  longPressMessage: "長按或按 Alt+向下鍵以開啟功能表"
};
var Bb = {};
Bb = {
  "ar-AE": rb,
  "bg-BG": nb,
  "cs-CZ": ib,
  "da-DK": ab,
  "de-DE": ob,
  "el-GR": sb,
  "en-US": ub,
  "es-ES": lb,
  "et-EE": cb,
  "fi-FI": db,
  "fr-FR": fb,
  "he-IL": hb,
  "hr-HR": pb,
  "hu-HU": mb,
  "it-IT": vb,
  "ja-JP": yb,
  "ko-KR": gb,
  "lt-LT": bb,
  "lv-LV": $b,
  "nb-NO": xb,
  "nl-NL": Db,
  "pl-PL": Eb,
  "pt-BR": wb,
  "pt-PT": Cb,
  "ro-RO": Sb,
  "ru-RU": kb,
  "sk-SK": Pb,
  "sl-SI": Tb,
  "sr-SP": Ab,
  "sv-SE": _b,
  "tr-TR": Fb,
  "uk-UA": Ob,
  "zh-CN": Ib,
  "zh-TW": Rb
};
function gS(e) {
  return e && e.__esModule ? e.default : e;
}
function Mb(e, t, r) {
  let { type: n = "menu", isDisabled: i, trigger: a = "press" } = e, o = St(), { triggerProps: s, overlayProps: u } = d0({
    type: n
  }, t, r), l = (h) => {
    if (!i && !(a === "longPress" && !h.altKey) && r && r.current)
      switch (h.key) {
        case "Enter":
        case " ":
          if (a === "longPress") return;
        case "ArrowDown":
          "continuePropagation" in h || h.stopPropagation(), h.preventDefault(), t.toggle("first");
          break;
        case "ArrowUp":
          "continuePropagation" in h || h.stopPropagation(), h.preventDefault(), t.toggle("last");
          break;
        default:
          "continuePropagation" in h && h.continuePropagation();
      }
  }, c = qt(gS(Bb), "@react-aria/menu"), { longPressProps: d } = iy({
    isDisabled: i || a !== "longPress",
    accessibilityDescription: c.format("longPressMessage"),
    onLongPressStart() {
      t.close();
    },
    onLongPress() {
      t.open("first");
    }
  }), f = {
    onPressStart(h) {
      h.pointerType !== "touch" && h.pointerType !== "keyboard" && !i && t.open(h.pointerType === "virtual" ? "first" : null);
    },
    onPress(h) {
      h.pointerType === "touch" && !i && t.toggle();
    }
  };
  return delete s.onPress, {
    menuTriggerProps: {
      ...s,
      ...a === "press" ? f : d,
      id: o,
      onKeyDown: l
    },
    menuProps: {
      ...u,
      "aria-labelledby": o,
      autoFocus: t.focusStrategy || !0,
      onClose: t.close
    }
  };
}
function Nb(e, t) {
  let { inputElementType: r = "input", isDisabled: n = !1, isRequired: i = !1, isReadOnly: a = !1, type: o = "text", validationBehavior: s = "aria" } = e, [u, l] = tr(e.value, e.defaultValue || "", e.onChange), { focusableProps: c } = uy(e, t), d = Ma({
    ...e,
    value: u
  }), { isInvalid: f, validationErrors: h, validationDetails: p } = d.displayValidation, { labelProps: v, fieldProps: g, descriptionProps: $, errorMessageProps: m } = Ws({
    ...e,
    isInvalid: f,
    errorMessage: e.errorMessage || h
  }), b = Oe(e, {
    labelable: !0
  });
  const D = {
    type: o,
    pattern: e.pattern
  };
  return $d(t, u, l), Nd(e, d, t), oe(() => {
    if (t.current instanceof Ot(t.current).HTMLTextAreaElement) {
      let S = t.current;
      Object.defineProperty(S, "defaultValue", {
        get: () => S.value,
        set: () => {
        },
        configurable: !0
      });
    }
  }, [
    t
  ]), {
    labelProps: v,
    inputProps: ye(b, r === "input" && D, {
      disabled: n,
      readOnly: a,
      required: i && s === "native",
      "aria-required": i && s === "aria" || void 0,
      "aria-invalid": f || void 0,
      "aria-errormessage": e["aria-errormessage"],
      "aria-activedescendant": e["aria-activedescendant"],
      "aria-autocomplete": e["aria-autocomplete"],
      "aria-haspopup": e["aria-haspopup"],
      value: u,
      onChange: (S) => l(S.target.value),
      autoComplete: e.autoComplete,
      autoCapitalize: e.autoCapitalize,
      maxLength: e.maxLength,
      minLength: e.minLength,
      name: e.name,
      placeholder: e.placeholder,
      inputMode: e.inputMode,
      // Clipboard events
      onCopy: e.onCopy,
      onCut: e.onCut,
      onPaste: e.onPaste,
      // Composition events
      onCompositionEnd: e.onCompositionEnd,
      onCompositionStart: e.onCompositionStart,
      onCompositionUpdate: e.onCompositionUpdate,
      // Selection events
      onSelect: e.onSelect,
      // Input events
      onBeforeInput: e.onBeforeInput,
      onInput: e.onInput,
      ...c,
      ...g
    }),
    descriptionProps: $,
    errorMessageProps: m,
    isInvalid: f,
    validationErrors: h,
    validationDetails: p
  };
}
function bS(e) {
  return e && e.__esModule ? e.default : e;
}
function $S(e, t) {
  let { buttonRef: r, popoverRef: n, inputRef: i, listBoxRef: a, keyboardDelegate: o, shouldFocusWrap: s, isReadOnly: u, isDisabled: l } = e, c = qt(bS(s0), "@react-aria/combobox"), { menuTriggerProps: d, menuProps: f } = Mb({
    type: "listbox",
    isDisabled: l || u
  }, t, r);
  Qs.set(t, {
    id: f.id
  });
  let h = G(() => o || new Gs(t.collection, t.disabledKeys, a), [
    o,
    t.collection,
    t.disabledKeys,
    a
  ]), { collectionProps: p } = eb({
    selectionManager: t.selectionManager,
    keyboardDelegate: h,
    disallowTypeAhead: !0,
    disallowEmptySelection: !0,
    shouldFocusWrap: s,
    ref: i,
    // Prevent item scroll behavior from being applied here, should be handled in the user's Popover + ListBox component
    isVirtualized: !0
  }), v = Ms(), g = (V) => {
    switch (V.key) {
      case "Enter":
      case "Tab":
        if (t.isOpen && V.key === "Enter" && V.preventDefault(), t.isOpen && t.selectionManager.focusedKey != null && t.selectionManager.isLink(t.selectionManager.focusedKey)) {
          if (V.key === "Enter") {
            let ie = a.current.querySelector(`[data-key="${CSS.escape(t.selectionManager.focusedKey.toString())}"]`);
            if (ie instanceof HTMLAnchorElement) {
              let we = t.collection.getItem(t.selectionManager.focusedKey);
              v.open(ie, V, we.props.href, we.props.routerOptions);
            }
          }
          t.close();
        } else t.commit();
        break;
      case "Escape":
        (t.selectedKey !== null || t.inputValue === "" || e.allowsCustomValue) && V.continuePropagation(), t.revert();
        break;
      case "ArrowDown":
        t.open("first", "manual");
        break;
      case "ArrowUp":
        t.open("last", "manual");
        break;
      case "ArrowLeft":
      case "ArrowRight":
        t.selectionManager.setFocusedKey(null);
        break;
    }
  }, $ = (V) => {
    var ie;
    let we = (r == null ? void 0 : r.current) && r.current === V.relatedTarget, ze = (ie = n.current) === null || ie === void 0 ? void 0 : ie.contains(V.relatedTarget);
    we || ze || (e.onBlur && e.onBlur(V), t.setFocused(!1));
  }, m = (V) => {
    t.isFocused || (e.onFocus && e.onFocus(V), t.setFocused(!0));
  }, { isInvalid: b, validationErrors: D, validationDetails: S } = t.displayValidation, { labelProps: P, inputProps: B, descriptionProps: y, errorMessageProps: _ } = Nb({
    ...e,
    onChange: t.setInputValue,
    onKeyDown: u ? e.onKeyDown : qr(t.isOpen && p.onKeyDown, g, e.onKeyDown),
    onBlur: $,
    value: t.inputValue,
    onFocus: m,
    autoComplete: "off",
    validate: void 0,
    [ba]: t
  }, i), w = (V) => {
    V.pointerType === "touch" && (i.current.focus(), t.toggle(null, "manual"));
  }, E = (V) => {
    V.pointerType !== "touch" && (i.current.focus(), t.toggle(V.pointerType === "keyboard" || V.pointerType === "virtual" ? "first" : null, "manual"));
  }, k = hn({
    id: d.id,
    "aria-label": c.format("buttonLabel"),
    "aria-labelledby": e["aria-labelledby"] || P.id
  }), C = hn({
    id: f.id,
    "aria-label": c.format("listboxLabel"),
    "aria-labelledby": e["aria-labelledby"] || P.id
  }), T = q(0), L = (V) => {
    if (l || u) return;
    if (V.timeStamp - T.current < 500) {
      V.preventDefault(), i.current.focus();
      return;
    }
    let ie = V.target.getBoundingClientRect(), we = V.changedTouches[0], ze = Math.ceil(ie.left + 0.5 * ie.width), He = Math.ceil(ie.top + 0.5 * ie.height);
    we.clientX === ze && we.clientY === He && (V.preventDefault(), i.current.focus(), t.toggle(null, "manual"), T.current = V.timeStamp);
  }, O = t.selectionManager.focusedKey != null && t.isOpen ? t.collection.getItem(t.selectionManager.focusedKey) : void 0;
  var x;
  let U = (x = O == null ? void 0 : O.parentKey) !== null && x !== void 0 ? x : null;
  var K;
  let j = (K = t.selectionManager.focusedKey) !== null && K !== void 0 ? K : null, ae = q(U), ne = q(j);
  oe(() => {
    if (Eo() && O != null && j !== ne.current) {
      let V = t.selectionManager.isSelected(j), ie = U != null ? t.collection.getItem(U) : null, we = (ie == null ? void 0 : ie["aria-label"]) || (typeof (ie == null ? void 0 : ie.rendered) == "string" ? ie.rendered : "") || "", ze = c.format("focusAnnouncement", {
        isGroupChange: ie && U !== ae.current,
        groupTitle: we,
        groupCount: ie ? [
          ...Zs(ie, t.collection)
        ].length : 0,
        optionText: O["aria-label"] || O.textValue || "",
        isSelected: V
      });
      Xn(ze);
    }
    ae.current = U, ne.current = j;
  });
  let me = tb(t.collection), xe = q(me), _e = q(t.isOpen);
  oe(() => {
    let V = t.isOpen !== _e.current && (t.selectionManager.focusedKey == null || Eo());
    if (t.isOpen && (V || me !== xe.current)) {
      let ie = c.format("countAnnouncement", {
        optionCount: me
      });
      Xn(ie);
    }
    xe.current = me, _e.current = t.isOpen;
  });
  let Fe = q(t.selectedKey);
  return oe(() => {
    if (Eo() && t.isFocused && t.selectedItem && t.selectedKey !== Fe.current) {
      let V = t.selectedItem["aria-label"] || t.selectedItem.textValue || "", ie = c.format("selectedAnnouncement", {
        optionText: V
      });
      Xn(ie);
    }
    Fe.current = t.selectedKey;
  }), oe(() => {
    if (t.isOpen) return Ld([
      i.current,
      n.current
    ]);
  }, [
    t.isOpen,
    i,
    n
  ]), {
    labelProps: P,
    buttonProps: {
      ...d,
      ...k,
      excludeFromTabOrder: !0,
      onPress: w,
      onPressStart: E,
      isDisabled: l || u
    },
    inputProps: ye(B, {
      role: "combobox",
      "aria-expanded": d["aria-expanded"],
      "aria-controls": t.isOpen ? f.id : void 0,
      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)
      "aria-autocomplete": "list",
      "aria-activedescendant": O ? J0(t, O.key) : void 0,
      onTouchEnd: L,
      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.
      autoCorrect: "off",
      // This disable's the macOS Safari spell check auto corrections.
      spellCheck: "false"
    }),
    listBoxProps: ye(f, C, {
      autoFocus: t.focusStrategy,
      shouldUseVirtualFocus: !0,
      shouldSelectOnPressUp: !0,
      shouldFocusOnHover: !0,
      linkBehavior: "selection"
    }),
    descriptionProps: y,
    errorMessageProps: _,
    isInvalid: b,
    validationErrors: D,
    validationDetails: S
  };
}
var Lb = {};
Lb = {
  calendar: "التقويم",
  day: "يوم",
  dayPeriod: "ص/م",
  endDate: "تاريخ الانتهاء",
  era: "العصر",
  hour: "الساعات",
  minute: "الدقائق",
  month: "الشهر",
  second: "الثواني",
  selectedDateDescription: (e) => `تاريخ محدد: ${e.date}`,
  selectedRangeDescription: (e) => `المدى الزمني المحدد: ${e.startDate} إلى ${e.endDate}`,
  selectedTimeDescription: (e) => `الوقت المحدد: ${e.time}`,
  startDate: "تاريخ البدء",
  timeZoneName: "التوقيت",
  weekday: "اليوم",
  year: "السنة"
};
var Vb = {};
Vb = {
  calendar: "Календар",
  day: "ден",
  dayPeriod: "пр.об./сл.об.",
  endDate: "Крайна дата",
  era: "ера",
  hour: "час",
  minute: "минута",
  month: "месец",
  second: "секунда",
  selectedDateDescription: (e) => `Избрана дата: ${e.date}`,
  selectedRangeDescription: (e) => `Избран диапазон: ${e.startDate} до ${e.endDate}`,
  selectedTimeDescription: (e) => `Избрано време: ${e.time}`,
  startDate: "Начална дата",
  timeZoneName: "часова зона",
  weekday: "ден от седмицата",
  year: "година"
};
var jb = {};
jb = {
  calendar: "Kalendář",
  day: "den",
  dayPeriod: "část dne",
  endDate: "Konečné datum",
  era: "letopočet",
  hour: "hodina",
  minute: "minuta",
  month: "měsíc",
  second: "sekunda",
  selectedDateDescription: (e) => `Vybrané datum: ${e.date}`,
  selectedRangeDescription: (e) => `Vybrané období: ${e.startDate} až ${e.endDate}`,
  selectedTimeDescription: (e) => `Vybraný čas: ${e.time}`,
  startDate: "Počáteční datum",
  timeZoneName: "časové pásmo",
  weekday: "den v týdnu",
  year: "rok"
};
var zb = {};
zb = {
  calendar: "Kalender",
  day: "dag",
  dayPeriod: "AM/PM",
  endDate: "Slutdato",
  era: "æra",
  hour: "time",
  minute: "minut",
  month: "måned",
  second: "sekund",
  selectedDateDescription: (e) => `Valgt dato: ${e.date}`,
  selectedRangeDescription: (e) => `Valgt interval: ${e.startDate} til ${e.endDate}`,
  selectedTimeDescription: (e) => `Valgt tidspunkt: ${e.time}`,
  startDate: "Startdato",
  timeZoneName: "tidszone",
  weekday: "ugedag",
  year: "år"
};
var Kb = {};
Kb = {
  calendar: "Kalender",
  day: "Tag",
  dayPeriod: "Tageshälfte",
  endDate: "Enddatum",
  era: "Epoche",
  hour: "Stunde",
  minute: "Minute",
  month: "Monat",
  second: "Sekunde",
  selectedDateDescription: (e) => `Ausgewähltes Datum: ${e.date}`,
  selectedRangeDescription: (e) => `Ausgewählter Bereich: ${e.startDate} bis ${e.endDate}`,
  selectedTimeDescription: (e) => `Ausgewählte Zeit: ${e.time}`,
  startDate: "Anfangsdatum",
  timeZoneName: "Zeitzone",
  weekday: "Wochentag",
  year: "Jahr"
};
var Ub = {};
Ub = {
  calendar: "Ημερολόγιο",
  day: "ημέρα",
  dayPeriod: "π.μ./μ.μ.",
  endDate: "Ημερομηνία λήξης",
  era: "περίοδος",
  hour: "ώρα",
  minute: "λεπτό",
  month: "μήνας",
  second: "δευτερόλεπτο",
  selectedDateDescription: (e) => `Επιλεγμένη ημερομηνία: ${e.date}`,
  selectedRangeDescription: (e) => `Επιλεγμένο εύρος: ${e.startDate} έως ${e.endDate}`,
  selectedTimeDescription: (e) => `Επιλεγμένη ώρα: ${e.time}`,
  startDate: "Ημερομηνία έναρξης",
  timeZoneName: "ζώνη ώρας",
  weekday: "καθημερινή",
  year: "έτος"
};
var qb = {};
qb = {
  era: "era",
  year: "year",
  month: "month",
  day: "day",
  hour: "hour",
  minute: "minute",
  second: "second",
  dayPeriod: "AM/PM",
  calendar: "Calendar",
  startDate: "Start Date",
  endDate: "End Date",
  weekday: "day of the week",
  timeZoneName: "time zone",
  selectedDateDescription: (e) => `Selected Date: ${e.date}`,
  selectedRangeDescription: (e) => `Selected Range: ${e.startDate} to ${e.endDate}`,
  selectedTimeDescription: (e) => `Selected Time: ${e.time}`
};
var Hb = {};
Hb = {
  calendar: "Calendario",
  day: "día",
  dayPeriod: "a. m./p. m.",
  endDate: "Fecha final",
  era: "era",
  hour: "hora",
  minute: "minuto",
  month: "mes",
  second: "segundo",
  selectedDateDescription: (e) => `Fecha seleccionada: ${e.date}`,
  selectedRangeDescription: (e) => `Rango seleccionado: ${e.startDate} a ${e.endDate}`,
  selectedTimeDescription: (e) => `Hora seleccionada: ${e.time}`,
  startDate: "Fecha de inicio",
  timeZoneName: "zona horaria",
  weekday: "día de la semana",
  year: "año"
};
var Wb = {};
Wb = {
  calendar: "Kalender",
  day: "päev",
  dayPeriod: "enne/pärast lõunat",
  endDate: "Lõppkuupäev",
  era: "ajastu",
  hour: "tund",
  minute: "minut",
  month: "kuu",
  second: "sekund",
  selectedDateDescription: (e) => `Valitud kuupäev: ${e.date}`,
  selectedRangeDescription: (e) => `Valitud vahemik: ${e.startDate} kuni ${e.endDate}`,
  selectedTimeDescription: (e) => `Valitud aeg: ${e.time}`,
  startDate: "Alguskuupäev",
  timeZoneName: "ajavöönd",
  weekday: "nädalapäev",
  year: "aasta"
};
var Qb = {};
Qb = {
  calendar: "Kalenteri",
  day: "päivä",
  dayPeriod: "vuorokaudenaika",
  endDate: "Päättymispäivä",
  era: "aikakausi",
  hour: "tunti",
  minute: "minuutti",
  month: "kuukausi",
  second: "sekunti",
  selectedDateDescription: (e) => `Valittu päivämäärä: ${e.date}`,
  selectedRangeDescription: (e) => `Valittu aikaväli: ${e.startDate} – ${e.endDate}`,
  selectedTimeDescription: (e) => `Valittu aika: ${e.time}`,
  startDate: "Alkamispäivä",
  timeZoneName: "aikavyöhyke",
  weekday: "viikonpäivä",
  year: "vuosi"
};
var Gb = {};
Gb = {
  calendar: "Calendrier",
  day: "jour",
  dayPeriod: "cadran",
  endDate: "Date de fin",
  era: "ère",
  hour: "heure",
  minute: "minute",
  month: "mois",
  second: "seconde",
  selectedDateDescription: (e) => `Date sélectionnée : ${e.date}`,
  selectedRangeDescription: (e) => `Plage sélectionnée : ${e.startDate} au ${e.endDate}`,
  selectedTimeDescription: (e) => `Heure choisie : ${e.time}`,
  startDate: "Date de début",
  timeZoneName: "fuseau horaire",
  weekday: "jour de la semaine",
  year: "année"
};
var Zb = {};
Zb = {
  calendar: "לוח שנה",
  day: "יום",
  dayPeriod: "לפנה״צ/אחה״צ",
  endDate: "תאריך סיום",
  era: "תקופה",
  hour: "שעה",
  minute: "דקה",
  month: "חודש",
  second: "שנייה",
  selectedDateDescription: (e) => `תאריך נבחר: ${e.date}`,
  selectedRangeDescription: (e) => `טווח נבחר: ${e.startDate} עד ${e.endDate}`,
  selectedTimeDescription: (e) => `זמן נבחר: ${e.time}`,
  startDate: "תאריך התחלה",
  timeZoneName: "אזור זמן",
  weekday: "יום בשבוע",
  year: "שנה"
};
var Yb = {};
Yb = {
  calendar: "Kalendar",
  day: "dan",
  dayPeriod: "AM/PM",
  endDate: "Datum završetka",
  era: "era",
  hour: "sat",
  minute: "minuta",
  month: "mjesec",
  second: "sekunda",
  selectedDateDescription: (e) => `Odabrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Odabrani raspon: ${e.startDate} do ${e.endDate}`,
  selectedTimeDescription: (e) => `Odabrano vrijeme: ${e.time}`,
  startDate: "Datum početka",
  timeZoneName: "vremenska zona",
  weekday: "dan u tjednu",
  year: "godina"
};
var Jb = {};
Jb = {
  calendar: "Naptár",
  day: "nap",
  dayPeriod: "napszak",
  endDate: "Befejező dátum",
  era: "éra",
  hour: "óra",
  minute: "perc",
  month: "hónap",
  second: "másodperc",
  selectedDateDescription: (e) => `Kijelölt dátum: ${e.date}`,
  selectedRangeDescription: (e) => `Kijelölt tartomány: ${e.startDate}–${e.endDate}`,
  selectedTimeDescription: (e) => `Kijelölt idő: ${e.time}`,
  startDate: "Kezdő dátum",
  timeZoneName: "időzóna",
  weekday: "hét napja",
  year: "év"
};
var Xb = {};
Xb = {
  calendar: "Calendario",
  day: "giorno",
  dayPeriod: "AM/PM",
  endDate: "Data finale",
  era: "era",
  hour: "ora",
  minute: "minuto",
  month: "mese",
  second: "secondo",
  selectedDateDescription: (e) => `Data selezionata: ${e.date}`,
  selectedRangeDescription: (e) => `Intervallo selezionato: da ${e.startDate} a ${e.endDate}`,
  selectedTimeDescription: (e) => `Ora selezionata: ${e.time}`,
  startDate: "Data iniziale",
  timeZoneName: "fuso orario",
  weekday: "giorno della settimana",
  year: "anno"
};
var e4 = {};
e4 = {
  calendar: "カレンダー",
  day: "日",
  dayPeriod: "午前/午後",
  endDate: "終了日",
  era: "時代",
  hour: "時",
  minute: "分",
  month: "月",
  second: "秒",
  selectedDateDescription: (e) => `選択した日付 : ${e.date}`,
  selectedRangeDescription: (e) => `選択範囲 : ${e.startDate} から ${e.endDate}`,
  selectedTimeDescription: (e) => `選択した時間 : ${e.time}`,
  startDate: "開始日",
  timeZoneName: "タイムゾーン",
  weekday: "曜日",
  year: "年"
};
var t4 = {};
t4 = {
  calendar: "달력",
  day: "일",
  dayPeriod: "오전/오후",
  endDate: "종료일",
  era: "연호",
  hour: "시",
  minute: "분",
  month: "월",
  second: "초",
  selectedDateDescription: (e) => `선택 일자: ${e.date}`,
  selectedRangeDescription: (e) => `선택 범위: ${e.startDate} ~ ${e.endDate}`,
  selectedTimeDescription: (e) => `선택 시간: ${e.time}`,
  startDate: "시작일",
  timeZoneName: "시간대",
  weekday: "요일",
  year: "년"
};
var r4 = {};
r4 = {
  calendar: "Kalendorius",
  day: "diena",
  dayPeriod: "iki pietų / po pietų",
  endDate: "Pabaigos data",
  era: "era",
  hour: "valanda",
  minute: "minutė",
  month: "mėnuo",
  second: "sekundė",
  selectedDateDescription: (e) => `Pasirinkta data: ${e.date}`,
  selectedRangeDescription: (e) => `Pasirinktas intervalas: nuo ${e.startDate} iki ${e.endDate}`,
  selectedTimeDescription: (e) => `Pasirinktas laikas: ${e.time}`,
  startDate: "Pradžios data",
  timeZoneName: "laiko juosta",
  weekday: "savaitės diena",
  year: "metai"
};
var n4 = {};
n4 = {
  calendar: "Kalendārs",
  day: "diena",
  dayPeriod: "priekšpusdienā/pēcpusdienā",
  endDate: "Beigu datums",
  era: "ēra",
  hour: "stundas",
  minute: "minūtes",
  month: "mēnesis",
  second: "sekundes",
  selectedDateDescription: (e) => `Atlasītais datums: ${e.date}`,
  selectedRangeDescription: (e) => `Atlasītais diapazons: no ${e.startDate} līdz ${e.endDate}`,
  selectedTimeDescription: (e) => `Atlasītais laiks: ${e.time}`,
  startDate: "Sākuma datums",
  timeZoneName: "laika josla",
  weekday: "nedēļas diena",
  year: "gads"
};
var i4 = {};
i4 = {
  calendar: "Kalender",
  day: "dag",
  dayPeriod: "a.m./p.m.",
  endDate: "Sluttdato",
  era: "tidsalder",
  hour: "time",
  minute: "minutt",
  month: "måned",
  second: "sekund",
  selectedDateDescription: (e) => `Valgt dato: ${e.date}`,
  selectedRangeDescription: (e) => `Valgt område: ${e.startDate} til ${e.endDate}`,
  selectedTimeDescription: (e) => `Valgt tid: ${e.time}`,
  startDate: "Startdato",
  timeZoneName: "tidssone",
  weekday: "ukedag",
  year: "år"
};
var a4 = {};
a4 = {
  calendar: "Kalender",
  day: "dag",
  dayPeriod: "a.m./p.m.",
  endDate: "Einddatum",
  era: "tijdperk",
  hour: "uur",
  minute: "minuut",
  month: "maand",
  second: "seconde",
  selectedDateDescription: (e) => `Geselecteerde datum: ${e.date}`,
  selectedRangeDescription: (e) => `Geselecteerd bereik: ${e.startDate} tot ${e.endDate}`,
  selectedTimeDescription: (e) => `Geselecteerde tijd: ${e.time}`,
  startDate: "Startdatum",
  timeZoneName: "tijdzone",
  weekday: "dag van de week",
  year: "jaar"
};
var o4 = {};
o4 = {
  calendar: "Kalendarz",
  day: "dzień",
  dayPeriod: "rano / po południu / wieczorem",
  endDate: "Data końcowa",
  era: "era",
  hour: "godzina",
  minute: "minuta",
  month: "miesiąc",
  second: "sekunda",
  selectedDateDescription: (e) => `Wybrana data: ${e.date}`,
  selectedRangeDescription: (e) => `Wybrany zakres: ${e.startDate} do ${e.endDate}`,
  selectedTimeDescription: (e) => `Wybrany czas: ${e.time}`,
  startDate: "Data początkowa",
  timeZoneName: "strefa czasowa",
  weekday: "dzień tygodnia",
  year: "rok"
};
var s4 = {};
s4 = {
  calendar: "Calendário",
  day: "dia",
  dayPeriod: "AM/PM",
  endDate: "Data final",
  era: "era",
  hour: "hora",
  minute: "minuto",
  month: "mês",
  second: "segundo",
  selectedDateDescription: (e) => `Data selecionada: ${e.date}`,
  selectedRangeDescription: (e) => `Intervalo selecionado: ${e.startDate} a ${e.endDate}`,
  selectedTimeDescription: (e) => `Hora selecionada: ${e.time}`,
  startDate: "Data inicial",
  timeZoneName: "fuso horário",
  weekday: "dia da semana",
  year: "ano"
};
var u4 = {};
u4 = {
  calendar: "Calendário",
  day: "dia",
  dayPeriod: "am/pm",
  endDate: "Data de Término",
  era: "era",
  hour: "hora",
  minute: "minuto",
  month: "mês",
  second: "segundo",
  selectedDateDescription: (e) => `Data selecionada: ${e.date}`,
  selectedRangeDescription: (e) => `Intervalo selecionado: ${e.startDate} a ${e.endDate}`,
  selectedTimeDescription: (e) => `Hora selecionada: ${e.time}`,
  startDate: "Data de Início",
  timeZoneName: "fuso horário",
  weekday: "dia da semana",
  year: "ano"
};
var l4 = {};
l4 = {
  calendar: "Calendar",
  day: "zi",
  dayPeriod: "a.m/p.m.",
  endDate: "Dată final",
  era: "eră",
  hour: "oră",
  minute: "minut",
  month: "lună",
  second: "secundă",
  selectedDateDescription: (e) => `Dată selectată: ${e.date}`,
  selectedRangeDescription: (e) => `Interval selectat: de la ${e.startDate} până la ${e.endDate}`,
  selectedTimeDescription: (e) => `Ora selectată: ${e.time}`,
  startDate: "Dată început",
  timeZoneName: "fus orar",
  weekday: "ziua din săptămână",
  year: "an"
};
var c4 = {};
c4 = {
  calendar: "Календарь",
  day: "день",
  dayPeriod: "AM/PM",
  endDate: "Дата окончания",
  era: "эра",
  hour: "час",
  minute: "минута",
  month: "месяц",
  second: "секунда",
  selectedDateDescription: (e) => `Выбранная дата: ${e.date}`,
  selectedRangeDescription: (e) => `Выбранный диапазон: с ${e.startDate} по ${e.endDate}`,
  selectedTimeDescription: (e) => `Выбранное время: ${e.time}`,
  startDate: "Дата начала",
  timeZoneName: "часовой пояс",
  weekday: "день недели",
  year: "год"
};
var d4 = {};
d4 = {
  calendar: "Kalendár",
  day: "deň",
  dayPeriod: "AM/PM",
  endDate: "Dátum ukončenia",
  era: "letopočet",
  hour: "hodina",
  minute: "minúta",
  month: "mesiac",
  second: "sekunda",
  selectedDateDescription: (e) => `Vybratý dátum: ${e.date}`,
  selectedRangeDescription: (e) => `Vybratý rozsah: od ${e.startDate} do ${e.endDate}`,
  selectedTimeDescription: (e) => `Vybratý čas: ${e.time}`,
  startDate: "Dátum začatia",
  timeZoneName: "časové pásmo",
  weekday: "deň týždňa",
  year: "rok"
};
var f4 = {};
f4 = {
  calendar: "Koledar",
  day: "dan",
  dayPeriod: "dop/pop",
  endDate: "Datum konca",
  era: "doba",
  hour: "ura",
  minute: "minuta",
  month: "mesec",
  second: "sekunda",
  selectedDateDescription: (e) => `Izbrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Izbrano območje: ${e.startDate} do ${e.endDate}`,
  selectedTimeDescription: (e) => `Izbrani čas: ${e.time}`,
  startDate: "Datum začetka",
  timeZoneName: "časovni pas",
  weekday: "dan v tednu",
  year: "leto"
};
var h4 = {};
h4 = {
  calendar: "Kalendar",
  day: "дан",
  dayPeriod: "пре подне/по подне",
  endDate: "Datum završetka",
  era: "ера",
  hour: "сат",
  minute: "минут",
  month: "месец",
  second: "секунд",
  selectedDateDescription: (e) => `Izabrani datum: ${e.date}`,
  selectedRangeDescription: (e) => `Izabrani opseg: od ${e.startDate} do ${e.endDate}`,
  selectedTimeDescription: (e) => `Izabrano vreme: ${e.time}`,
  startDate: "Datum početka",
  timeZoneName: "временска зона",
  weekday: "дан у недељи",
  year: "година"
};
var p4 = {};
p4 = {
  calendar: "Kalender",
  day: "dag",
  dayPeriod: "fm/em",
  endDate: "Slutdatum",
  era: "era",
  hour: "timme",
  minute: "minut",
  month: "månad",
  second: "sekund",
  selectedDateDescription: (e) => `Valt datum: ${e.date}`,
  selectedRangeDescription: (e) => `Valt intervall: ${e.startDate} till ${e.endDate}`,
  selectedTimeDescription: (e) => `Vald tid: ${e.time}`,
  startDate: "Startdatum",
  timeZoneName: "tidszon",
  weekday: "veckodag",
  year: "år"
};
var m4 = {};
m4 = {
  calendar: "Takvim",
  day: "gün",
  dayPeriod: "ÖÖ/ÖS",
  endDate: "Bitiş Tarihi",
  era: "çağ",
  hour: "saat",
  minute: "dakika",
  month: "ay",
  second: "saniye",
  selectedDateDescription: (e) => `Seçilen Tarih: ${e.date}`,
  selectedRangeDescription: (e) => `Seçilen Aralık: ${e.startDate} - ${e.endDate}`,
  selectedTimeDescription: (e) => `Seçilen Zaman: ${e.time}`,
  startDate: "Başlangıç Tarihi",
  timeZoneName: "saat dilimi",
  weekday: "haftanın günü",
  year: "yıl"
};
var v4 = {};
v4 = {
  calendar: "Календар",
  day: "день",
  dayPeriod: "дп/пп",
  endDate: "Дата завершення",
  era: "ера",
  hour: "година",
  minute: "хвилина",
  month: "місяць",
  second: "секунда",
  selectedDateDescription: (e) => `Вибрана дата: ${e.date}`,
  selectedRangeDescription: (e) => `Вибраний діапазон: ${e.startDate} — ${e.endDate}`,
  selectedTimeDescription: (e) => `Вибраний час: ${e.time}`,
  startDate: "Дата початку",
  timeZoneName: "часовий пояс",
  weekday: "день тижня",
  year: "рік"
};
var y4 = {};
y4 = {
  calendar: "日历",
  day: "日",
  dayPeriod: "上午/下午",
  endDate: "结束日期",
  era: "纪元",
  hour: "小时",
  minute: "分钟",
  month: "月",
  second: "秒",
  selectedDateDescription: (e) => `选定的日期：${e.date}`,
  selectedRangeDescription: (e) => `选定的范围：${e.startDate} 至 ${e.endDate}`,
  selectedTimeDescription: (e) => `选定的时间：${e.time}`,
  startDate: "开始日期",
  timeZoneName: "时区",
  weekday: "工作日",
  year: "年"
};
var g4 = {};
g4 = {
  calendar: "日曆",
  day: "日",
  dayPeriod: "上午/下午",
  endDate: "結束日期",
  era: "纪元",
  hour: "小时",
  minute: "分钟",
  month: "月",
  second: "秒",
  selectedDateDescription: (e) => `選定的日期：${e.date}`,
  selectedRangeDescription: (e) => `選定的範圍：${e.startDate} 至 ${e.endDate}`,
  selectedTimeDescription: (e) => `選定的時間：${e.time}`,
  startDate: "開始日期",
  timeZoneName: "时区",
  weekday: "工作日",
  year: "年"
};
var Ys = {};
Ys = {
  "ar-AE": Lb,
  "bg-BG": Vb,
  "cs-CZ": jb,
  "da-DK": zb,
  "de-DE": Kb,
  "el-GR": Ub,
  "en-US": qb,
  "es-ES": Hb,
  "et-EE": Wb,
  "fi-FI": Qb,
  "fr-FR": Gb,
  "he-IL": Zb,
  "hr-HR": Yb,
  "hu-HU": Jb,
  "it-IT": Xb,
  "ja-JP": e4,
  "ko-KR": t4,
  "lt-LT": r4,
  "lv-LV": n4,
  "nb-NO": i4,
  "nl-NL": a4,
  "pl-PL": o4,
  "pt-BR": s4,
  "pt-PT": u4,
  "ro-RO": l4,
  "ru-RU": c4,
  "sk-SK": d4,
  "sl-SI": f4,
  "sr-SP": h4,
  "sv-SE": p4,
  "tr-TR": m4,
  "uk-UA": v4,
  "zh-CN": y4,
  "zh-TW": g4
};
function b4(e, t, r) {
  let { direction: n } = ct(), i = G(() => Ed(t), [
    t
  ]), a = (u) => {
    if (u.currentTarget.contains(u.target) && (u.altKey && (u.key === "ArrowDown" || u.key === "ArrowUp") && "setOpen" in e && (u.preventDefault(), u.stopPropagation(), e.setOpen(!0)), !r))
      switch (u.key) {
        case "ArrowLeft":
          u.preventDefault(), u.stopPropagation(), n === "rtl" ? i.focusNext() : i.focusPrevious();
          break;
        case "ArrowRight":
          u.preventDefault(), u.stopPropagation(), n === "rtl" ? i.focusPrevious() : i.focusNext();
          break;
      }
  }, o = () => {
    var u;
    let l = (u = window.event) === null || u === void 0 ? void 0 : u.target, c = gt(t.current, {
      tabbable: !0
    });
    if (l && (c.currentNode = l, l = c.previousNode()), !l) {
      let d;
      do
        d = c.lastChild(), d && (l = d);
      while (d);
    }
    for (; l != null && l.hasAttribute("data-placeholder"); ) {
      let d = c.previousNode();
      if (d && d.hasAttribute("data-placeholder")) l = d;
      else break;
    }
    l && l.focus();
  }, { pressProps: s } = Ia({
    preventFocusOnPress: !0,
    allowTextSelectionOnPress: !0,
    onPressStart(u) {
      u.pointerType === "mouse" && o();
    },
    onPress(u) {
      u.pointerType !== "mouse" && o();
    }
  });
  return ye(s, {
    onKeyDown: a
  });
}
function xS(e) {
  return e && e.__esModule ? e.default : e;
}
const $4 = /* @__PURE__ */ new WeakMap(), Po = "__role_" + Date.now(), x4 = "__focusManager_" + Date.now();
function DS(e, t, r) {
  var n;
  let { isInvalid: i, validationErrors: a, validationDetails: o } = t.displayValidation, { labelProps: s, fieldProps: u, descriptionProps: l, errorMessageProps: c } = Ws({
    ...e,
    labelElementType: "span",
    isInvalid: i,
    errorMessage: e.errorMessage || a
  }), d = q(null), { focusWithinProps: f } = yi({
    ...e,
    onFocusWithin(w) {
      var E;
      d.current = t.value, (E = e.onFocus) === null || E === void 0 || E.call(e, w);
    },
    onBlurWithin: (w) => {
      var E;
      t.confirmPlaceholder(), t.value !== d.current && t.commitValidation(), (E = e.onBlur) === null || E === void 0 || E.call(e, w);
    },
    onFocusWithinChange: e.onFocusChange
  }), h = qt(xS(Ys), "@react-aria/datepicker"), p = t.maxGranularity === "hour" ? "selectedTimeDescription" : "selectedDateDescription", v = t.maxGranularity === "hour" ? "time" : "date", g = t.value ? h.format(p, {
    [v]: t.formatValue({
      month: "long"
    })
  }) : "", $ = Vs(g), m = e[Po] === "presentation" ? u["aria-describedby"] : [
    $["aria-describedby"],
    u["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0, b = e[x4], D = G(() => b || Ed(r), [
    b,
    r
  ]), S = b4(t, r, e[Po] === "presentation");
  $4.set(t, {
    ariaLabel: e["aria-label"],
    ariaLabelledBy: [
      s.id,
      e["aria-labelledby"]
    ].filter(Boolean).join(" ") || void 0,
    ariaDescribedBy: m,
    focusManager: D
  });
  let P = q(e.autoFocus), B;
  e[Po] === "presentation" ? B = {
    role: "presentation"
  } : B = ye(u, {
    role: "group",
    "aria-disabled": e.isDisabled || void 0,
    "aria-describedby": m
  }), oe(() => {
    P.current && D.focusFirst(), P.current = !1;
  }, [
    D
  ]), $d(e.inputRef, t.value, t.setValue), Nd({
    ...e,
    focus() {
      D.focusFirst();
    }
  }, t, e.inputRef);
  let y = {
    type: "hidden",
    name: e.name,
    value: ((n = t.value) === null || n === void 0 ? void 0 : n.toString()) || ""
  };
  e.validationBehavior === "native" && (y.type = "text", y.hidden = !0, y.required = e.isRequired, y.onChange = () => {
  });
  let _ = Oe(e);
  return {
    labelProps: {
      ...s,
      onClick: () => {
        D.focusFirst();
      }
    },
    fieldProps: ye(_, B, S, f, {
      onKeyDown(w) {
        e.onKeyDown && e.onKeyDown(w);
      },
      onKeyUp(w) {
        e.onKeyUp && e.onKeyUp(w);
      }
    }),
    inputProps: y,
    descriptionProps: l,
    errorMessageProps: c,
    isInvalid: i,
    validationErrors: a,
    validationDetails: o
  };
}
function ES(e) {
  return e && e.__esModule ? e.default : e;
}
function wS() {
  let { locale: e } = ct(), t = dy(ES(Ys), "@react-aria/datepicker");
  return G(() => {
    try {
      return new Intl.DisplayNames(e, {
        type: "dateTimeField"
      });
    } catch {
      return new CS(e, t);
    }
  }, [
    e,
    t
  ]);
}
class CS {
  of(t) {
    return this.dictionary.getStringForLocale(t, this.locale);
  }
  constructor(t, r) {
    this.locale = t, this.dictionary = r;
  }
}
var D4 = {};
D4 = {
  Empty: "فارغ"
};
var E4 = {};
E4 = {
  Empty: "Изпразни"
};
var w4 = {};
w4 = {
  Empty: "Prázdné"
};
var C4 = {};
C4 = {
  Empty: "Tom"
};
var S4 = {};
S4 = {
  Empty: "Leer"
};
var k4 = {};
k4 = {
  Empty: "Άδειο"
};
var P4 = {};
P4 = {
  Empty: "Empty"
};
var T4 = {};
T4 = {
  Empty: "Vacío"
};
var A4 = {};
A4 = {
  Empty: "Tühjenda"
};
var _4 = {};
_4 = {
  Empty: "Tyhjä"
};
var F4 = {};
F4 = {
  Empty: "Vide"
};
var O4 = {};
O4 = {
  Empty: "ריק"
};
var I4 = {};
I4 = {
  Empty: "Prazno"
};
var R4 = {};
R4 = {
  Empty: "Üres"
};
var B4 = {};
B4 = {
  Empty: "Vuoto"
};
var M4 = {};
M4 = {
  Empty: "空"
};
var N4 = {};
N4 = {
  Empty: "비어 있음"
};
var L4 = {};
L4 = {
  Empty: "Tuščias"
};
var V4 = {};
V4 = {
  Empty: "Tukšs"
};
var j4 = {};
j4 = {
  Empty: "Tom"
};
var z4 = {};
z4 = {
  Empty: "Leeg"
};
var K4 = {};
K4 = {
  Empty: "Pusty"
};
var U4 = {};
U4 = {
  Empty: "Vazio"
};
var q4 = {};
q4 = {
  Empty: "Vazio"
};
var H4 = {};
H4 = {
  Empty: "Gol"
};
var W4 = {};
W4 = {
  Empty: "Не заполнено"
};
var Q4 = {};
Q4 = {
  Empty: "Prázdne"
};
var G4 = {};
G4 = {
  Empty: "Prazen"
};
var Z4 = {};
Z4 = {
  Empty: "Prazno"
};
var Y4 = {};
Y4 = {
  Empty: "Tomt"
};
var J4 = {};
J4 = {
  Empty: "Boş"
};
var X4 = {};
X4 = {
  Empty: "Пусто"
};
var e3 = {};
e3 = {
  Empty: "空"
};
var t3 = {};
t3 = {
  Empty: "空白"
};
var r3 = {};
r3 = {
  "ar-AE": D4,
  "bg-BG": E4,
  "cs-CZ": w4,
  "da-DK": C4,
  "de-DE": S4,
  "el-GR": k4,
  "en-US": P4,
  "es-ES": T4,
  "et-EE": A4,
  "fi-FI": _4,
  "fr-FR": F4,
  "he-IL": O4,
  "hr-HR": I4,
  "hu-HU": R4,
  "it-IT": B4,
  "ja-JP": M4,
  "ko-KR": N4,
  "lt-LT": L4,
  "lv-LV": V4,
  "nb-NO": j4,
  "nl-NL": z4,
  "pl-PL": K4,
  "pt-BR": U4,
  "pt-PT": q4,
  "ro-RO": H4,
  "ru-RU": W4,
  "sk-SK": Q4,
  "sl-SI": G4,
  "sr-SP": Z4,
  "sv-SE": Y4,
  "tr-TR": J4,
  "uk-UA": X4,
  "zh-CN": e3,
  "zh-TW": t3
};
function SS(e) {
  return e && e.__esModule ? e.default : e;
}
function kS(e) {
  const t = q();
  let { value: r, textValue: n, minValue: i, maxValue: a, isDisabled: o, isReadOnly: s, isRequired: u, onIncrement: l, onIncrementPage: c, onDecrement: d, onDecrementPage: f, onDecrementToMin: h, onIncrementToMax: p } = e;
  const v = qt(SS(r3), "@react-aria/spinbutton"), g = () => clearTimeout(t.current);
  oe(() => () => g(), []);
  let $ = (E) => {
    if (!(E.ctrlKey || E.metaKey || E.shiftKey || E.altKey || s))
      switch (E.key) {
        case "PageUp":
          if (c) {
            E.preventDefault(), c == null || c();
            break;
          }
        case "ArrowUp":
        case "Up":
          l && (E.preventDefault(), l == null || l());
          break;
        case "PageDown":
          if (f) {
            E.preventDefault(), f == null || f();
            break;
          }
        case "ArrowDown":
        case "Down":
          d && (E.preventDefault(), d == null || d());
          break;
        case "Home":
          h && (E.preventDefault(), h == null || h());
          break;
        case "End":
          p && (E.preventDefault(), p == null || p());
          break;
      }
  }, m = q(!1), b = () => {
    m.current = !0;
  }, D = () => {
    m.current = !1;
  }, S = n === "" ? v.format("Empty") : (n || `${r}`).replace("-", "−");
  oe(() => {
    m.current && (kC("assertive"), Xn(S, "assertive"));
  }, [
    S
  ]);
  const P = ut((E) => {
    g(), l == null || l(), t.current = window.setTimeout(() => {
      (a === void 0 || isNaN(a) || r === void 0 || isNaN(r) || r < a) && P(60);
    }, E);
  }), B = ut((E) => {
    g(), d == null || d(), t.current = window.setTimeout(() => {
      (i === void 0 || isNaN(i) || r === void 0 || isNaN(r) || r > i) && B(60);
    }, E);
  });
  let y = (E) => {
    E.preventDefault();
  }, { addGlobalListener: _, removeAllGlobalListeners: w } = gd();
  return {
    spinButtonProps: {
      role: "spinbutton",
      "aria-valuenow": r !== void 0 && !isNaN(r) ? r : void 0,
      "aria-valuetext": S,
      "aria-valuemin": i,
      "aria-valuemax": a,
      "aria-disabled": o || void 0,
      "aria-readonly": s || void 0,
      "aria-required": u || void 0,
      onKeyDown: $,
      onFocus: b,
      onBlur: D
    },
    incrementButtonProps: {
      onPressStart: () => {
        P(400), _(window, "contextmenu", y);
      },
      onPressEnd: () => {
        g(), w();
      },
      onFocus: b,
      onBlur: D
    },
    decrementButtonProps: {
      onPressStart: () => {
        B(400), _(window, "contextmenu", y);
      },
      onPressEnd: () => {
        g(), w();
      },
      onFocus: b,
      onBlur: D
    }
  };
}
function PS(e, t, r) {
  let n = q(""), { locale: i } = ct(), a = wS(), { ariaLabel: o, ariaLabelledBy: s, ariaDescribedBy: u, focusManager: l } = $4.get(t), c = e.isPlaceholder ? "" : e.text, d = G(() => t.dateFormatter.resolvedOptions(), [
    t.dateFormatter
  ]), f = Qt({
    month: "long",
    timeZone: d.timeZone
  }), h = Qt({
    hour: "numeric",
    hour12: d.hour12,
    timeZone: d.timeZone
  });
  if (e.type === "month" && !e.isPlaceholder) {
    let x = f.format(t.dateValue);
    c = x !== c ? `${c} – ${x}` : x;
  } else e.type === "hour" && !e.isPlaceholder && (c = h.format(t.dateValue));
  let { spinButtonProps: p } = kS({
    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.
    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.
    // https://github.com/dequelabs/axe-core/issues/3505
    value: e.value,
    textValue: c,
    minValue: e.minValue,
    maxValue: e.maxValue,
    isDisabled: t.isDisabled,
    isReadOnly: t.isReadOnly || !e.isEditable,
    isRequired: t.isRequired,
    onIncrement: () => {
      n.current = "", t.increment(e.type);
    },
    onDecrement: () => {
      n.current = "", t.decrement(e.type);
    },
    onIncrementPage: () => {
      n.current = "", t.incrementPage(e.type);
    },
    onDecrementPage: () => {
      n.current = "", t.decrementPage(e.type);
    },
    onIncrementToMax: () => {
      n.current = "", t.setSegment(e.type, e.maxValue);
    },
    onDecrementToMin: () => {
      n.current = "", t.setSegment(e.type, e.minValue);
    }
  }), v = G(() => new Vy(i, {
    maximumFractionDigits: 0
  }), [
    i
  ]), g = () => {
    if (e.text === e.placeholder && l.focusPrevious(), v.isValidPartialNumber(e.text) && !t.isReadOnly && !e.isPlaceholder) {
      let x = e.text.slice(0, -1), U = v.parse(x);
      x = U === 0 ? "" : x, x.length === 0 || U === 0 ? t.clearSegment(e.type) : t.setSegment(e.type, U), n.current = x;
    } else e.type === "dayPeriod" && t.clearSegment(e.type);
  }, $ = (x) => {
    if (x.key === "a" && (yr() ? x.metaKey : x.ctrlKey) && x.preventDefault(), !(x.ctrlKey || x.metaKey || x.shiftKey || x.altKey))
      switch (x.key) {
        case "Backspace":
        case "Delete":
          x.preventDefault(), x.stopPropagation(), g();
          break;
      }
  }, { startsWith: m } = jy({
    sensitivity: "base"
  }), b = Qt({
    hour: "numeric",
    hour12: !0
  }), D = G(() => {
    let x = /* @__PURE__ */ new Date();
    return x.setHours(0), b.formatToParts(x).find((U) => U.type === "dayPeriod").value;
  }, [
    b
  ]), S = G(() => {
    let x = /* @__PURE__ */ new Date();
    return x.setHours(12), b.formatToParts(x).find((U) => U.type === "dayPeriod").value;
  }, [
    b
  ]), P = Qt({
    year: "numeric",
    era: "narrow",
    timeZone: "UTC"
  }), B = G(() => {
    if (e.type !== "era") return [];
    let x = Ve(new tt(1, 1, 1), t.calendar), U = t.calendar.getEras().map((j) => {
      let ae = x.set({
        year: 1,
        month: 1,
        day: 1,
        era: j
      }).toDate("UTC"), me = P.formatToParts(ae).find((xe) => xe.type === "era").value;
      return {
        era: j,
        formatted: me
      };
    }), K = TS(U.map((j) => j.formatted));
    if (K) for (let j of U) j.formatted = j.formatted.slice(K);
    return U;
  }, [
    P,
    t.calendar,
    e.type
  ]), y = (x) => {
    if (t.isDisabled || t.isReadOnly) return;
    let U = n.current + x;
    switch (e.type) {
      case "dayPeriod":
        if (m(D, x)) t.setSegment("dayPeriod", 0);
        else if (m(S, x)) t.setSegment("dayPeriod", 12);
        else break;
        l.focusNext();
        break;
      case "era": {
        let K = B.find((j) => m(j.formatted, x));
        K && (t.setSegment("era", K.era), l.focusNext());
        break;
      }
      case "day":
      case "hour":
      case "minute":
      case "second":
      case "month":
      case "year": {
        if (!v.isValidPartialNumber(U)) return;
        let K = v.parse(U), j = K, ae = e.minValue === 0;
        if (e.type === "hour" && t.dateFormatter.resolvedOptions().hour12) {
          switch (t.dateFormatter.resolvedOptions().hourCycle) {
            case "h11":
              K > 11 && (j = v.parse(x));
              break;
            case "h12":
              ae = !1, K > 12 && (j = v.parse(x));
              break;
          }
          e.value >= 12 && K > 1 && (K += 12);
        } else K > e.maxValue && (j = v.parse(x));
        if (isNaN(K)) return;
        let ne = j !== 0 || ae;
        ne && t.setSegment(e.type, j), +(K + "0") > e.maxValue || U.length >= String(e.maxValue).length ? (n.current = "", ne && l.focusNext()) : n.current = U;
        break;
      }
    }
  }, _ = () => {
    n.current = "", Lo(r.current, {
      containingElement: Ls(r.current)
    }), window.getSelection().collapse(r.current);
  }, w = q("");
  Gn(r, "beforeinput", (x) => {
    switch (x.preventDefault(), x.inputType) {
      case "deleteContentBackward":
      case "deleteContentForward":
        v.isValidPartialNumber(e.text) && !t.isReadOnly && g();
        break;
      case "insertCompositionText":
        w.current = r.current.textContent, r.current.textContent = r.current.textContent;
        break;
      default:
        x.data != null && y(x.data);
        break;
    }
  }), Gn(r, "input", (x) => {
    let { inputType: U, data: K } = x;
    switch (U) {
      case "insertCompositionText":
        r.current.textContent = w.current, (m(D, K) || m(S, K)) && y(K);
        break;
    }
  }), Re(() => {
    let x = r.current;
    return () => {
      document.activeElement === x && (l.focusPrevious() || l.focusNext());
    };
  }, [
    r,
    l
  ]);
  let E = Fa() || e.type === "timeZoneName" ? {
    role: "textbox",
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuetext": null,
    "aria-valuenow": null
  } : {}, k = G(() => t.segments.find((x) => x.isEditable), [
    t.segments
  ]);
  e !== k && !t.isInvalid && (u = void 0);
  let C = St(), T = !t.isDisabled && !t.isReadOnly && e.isEditable, L = e.type === "literal" ? "" : a.of(e.type), O = hn({
    "aria-label": `${L}${o ? `, ${o}` : ""}${s ? ", " : ""}`,
    "aria-labelledby": s
  });
  return e.type === "literal" ? {
    segmentProps: {
      "aria-hidden": !0
    }
  } : {
    segmentProps: ye(p, O, {
      id: C,
      ...E,
      "aria-invalid": t.isInvalid ? "true" : void 0,
      "aria-describedby": u,
      "aria-readonly": t.isReadOnly || !e.isEditable ? "true" : void 0,
      "data-placeholder": e.isPlaceholder || void 0,
      contentEditable: T,
      suppressContentEditableWarning: T,
      spellCheck: T ? "false" : void 0,
      autoCapitalize: T ? "off" : void 0,
      autoCorrect: T ? "off" : void 0,
      // Capitalization was changed in React 17...
      [parseInt(A.version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: T ? "next" : void 0,
      inputMode: t.isDisabled || e.type === "dayPeriod" || e.type === "era" || !T ? void 0 : "numeric",
      tabIndex: t.isDisabled ? void 0 : 0,
      onKeyDown: $,
      onFocus: _,
      style: {
        caretColor: "transparent"
      },
      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.
      onPointerDown(x) {
        x.stopPropagation();
      },
      onMouseDown(x) {
        x.stopPropagation();
      }
    })
  };
}
function TS(e) {
  e.sort();
  let t = e[0], r = e[e.length - 1];
  for (let n = 0; n < t.length; n++)
    if (t[n] !== r[n]) return n;
  return 0;
}
function AS(e) {
  return e && e.__esModule ? e.default : e;
}
function _S(e, t, r) {
  var n, i;
  let a = qt(AS(Ys), "@react-aria/datepicker"), { isInvalid: o, validationErrors: s, validationDetails: u } = t.displayValidation, { labelProps: l, fieldProps: c, descriptionProps: d, errorMessageProps: f } = Ws({
    ...e,
    labelElementType: "span",
    isInvalid: o,
    errorMessage: e.errorMessage || s
  }), h = c["aria-labelledby"] || c.id, { locale: p } = ct(), v = t.formatValue(p, {
    month: "long"
  }), g = v ? a.format("selectedRangeDescription", {
    startDate: v.start,
    endDate: v.end
  }) : "", $ = Vs(g), m = {
    "aria-label": a.format("startDate"),
    "aria-labelledby": h
  }, b = {
    "aria-label": a.format("endDate"),
    "aria-labelledby": h
  }, D = St(), S = St(), P = b4(t, r), B = [
    $["aria-describedby"],
    c["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0, y = G(() => Ed(r, {
    // Exclude the button from the focus manager.
    accept: (T) => T.id !== D
  }), [
    r,
    D
  ]), _ = {
    [x4]: y,
    [Po]: "presentation",
    "aria-describedby": B,
    placeholderValue: e.placeholderValue,
    hideTimeZone: e.hideTimeZone,
    hourCycle: e.hourCycle,
    granularity: e.granularity,
    shouldForceLeadingZeros: e.shouldForceLeadingZeros,
    isDisabled: e.isDisabled,
    isReadOnly: e.isReadOnly,
    isRequired: e.isRequired,
    validationBehavior: e.validationBehavior
  }, w = Oe(e), { focusWithinProps: E } = yi({
    ...e,
    isDisabled: t.isOpen,
    onBlurWithin: e.onBlur,
    onFocusWithin: e.onFocus,
    onFocusWithinChange: e.onFocusChange
  }), k = q(en), C = q(en);
  return {
    groupProps: ye(w, P, c, $, E, {
      role: "group",
      "aria-disabled": e.isDisabled || null,
      "aria-describedby": B,
      onKeyDown(T) {
        t.isOpen || e.onKeyDown && e.onKeyDown(T);
      },
      onKeyUp(T) {
        t.isOpen || e.onKeyUp && e.onKeyUp(T);
      }
    }),
    labelProps: {
      ...l,
      onClick: () => {
        y.focusFirst();
      }
    },
    buttonProps: {
      ...$,
      id: D,
      "aria-haspopup": "dialog",
      "aria-label": a.format("calendar"),
      "aria-labelledby": `${D} ${h}`,
      "aria-describedby": B,
      "aria-expanded": t.isOpen,
      isDisabled: e.isDisabled || e.isReadOnly,
      onPress: () => t.setOpen(!0)
    },
    dialogProps: {
      id: S,
      "aria-labelledby": `${D} ${h}`
    },
    startFieldProps: {
      ...m,
      ..._,
      value: (n = t.value) === null || n === void 0 ? void 0 : n.start,
      onChange: (T) => t.setDateTime("start", T),
      autoFocus: e.autoFocus,
      name: e.startName,
      [ba]: {
        realtimeValidation: t.realtimeValidation,
        displayValidation: t.displayValidation,
        updateValidation(T) {
          k.current = T, t.updateValidation(es(T, C.current));
        },
        resetValidation: t.resetValidation,
        commitValidation: t.commitValidation
      }
    },
    endFieldProps: {
      ...b,
      ..._,
      value: (i = t.value) === null || i === void 0 ? void 0 : i.end,
      onChange: (T) => t.setDateTime("end", T),
      name: e.endName,
      [ba]: {
        realtimeValidation: t.realtimeValidation,
        displayValidation: t.displayValidation,
        updateValidation(T) {
          C.current = T, t.updateValidation(es(k.current, T));
        },
        resetValidation: t.resetValidation,
        commitValidation: t.commitValidation
      }
    },
    descriptionProps: d,
    errorMessageProps: f,
    calendarProps: {
      autoFocus: !0,
      value: t.dateRange,
      onChange: t.setDateRange,
      minValue: e.minValue,
      maxValue: e.maxValue,
      isDisabled: e.isDisabled,
      isReadOnly: e.isReadOnly,
      isDateUnavailable: e.isDateUnavailable,
      allowsNonContiguousRanges: e.allowsNonContiguousRanges,
      defaultFocusedValue: t.dateRange ? void 0 : e.placeholderValue,
      isInvalid: t.isInvalid,
      errorMessage: typeof e.errorMessage == "function" ? e.errorMessage(t.displayValidation) : e.errorMessage || t.displayValidation.validationErrors.join(" ")
    },
    isInvalid: o,
    validationErrors: s,
    validationDetails: u
  };
}
function FS(e, t) {
  let { role: r = "dialog" } = e, n = ui();
  n = e["aria-label"] ? void 0 : n;
  let i = q(!1);
  return oe(() => {
    if (t.current && !t.current.contains(document.activeElement)) {
      mn(t.current);
      let a = setTimeout(() => {
        document.activeElement === t.current && (i.current = !0, t.current && (t.current.blur(), mn(t.current)), i.current = !1);
      }, 500);
      return () => {
        clearTimeout(a);
      };
    }
  }, [
    t
  ]), Y0(), {
    dialogProps: {
      ...Oe(e, {
        labelable: !0
      }),
      role: r,
      tabIndex: -1,
      "aria-labelledby": e["aria-labelledby"] || n,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (a) => {
        i.current && a.stopPropagation();
      }
    },
    titleProps: {
      id: n
    }
  };
}
const n3 = /* @__PURE__ */ new WeakMap();
function OS(e, t, r) {
  let { keyboardDelegate: n, isDisabled: i, isRequired: a, name: o, validationBehavior: s = "aria" } = e, u = qs({
    usage: "search",
    sensitivity: "base"
  }), l = G(() => n || new Gs(t.collection, t.disabledKeys, null, u), [
    n,
    t.collection,
    t.disabledKeys,
    u
  ]), { menuTriggerProps: c, menuProps: d } = Mb({
    isDisabled: i,
    type: "listbox"
  }, t, r), f = (y) => {
    switch (y.key) {
      case "ArrowLeft": {
        y.preventDefault();
        let _ = t.selectedKey != null ? l.getKeyAbove(t.selectedKey) : l.getFirstKey();
        _ && t.setSelectedKey(_);
        break;
      }
      case "ArrowRight": {
        y.preventDefault();
        let _ = t.selectedKey != null ? l.getKeyBelow(t.selectedKey) : l.getFirstKey();
        _ && t.setSelectedKey(_);
        break;
      }
    }
  }, { typeSelectProps: h } = X0({
    keyboardDelegate: l,
    selectionManager: t.selectionManager,
    onTypeSelect(y) {
      t.setSelectedKey(y);
    }
  }), { isInvalid: p, validationErrors: v, validationDetails: g } = t.displayValidation, { labelProps: $, fieldProps: m, descriptionProps: b, errorMessageProps: D } = Ws({
    ...e,
    labelElementType: "span",
    isInvalid: p,
    errorMessage: e.errorMessage || v
  });
  h.onKeyDown = h.onKeyDownCapture, delete h.onKeyDownCapture;
  let S = Oe(e, {
    labelable: !0
  }), P = ye(h, c, m), B = St();
  return n3.set(t, {
    isDisabled: i,
    isRequired: a,
    name: o,
    validationBehavior: s
  }), {
    labelProps: {
      ...$,
      onClick: () => {
        e.isDisabled || (r.current.focus(), ny("keyboard"));
      }
    },
    triggerProps: ye(S, {
      ...P,
      isDisabled: i,
      onKeyDown: qr(P.onKeyDown, f, e.onKeyDown),
      onKeyUp: e.onKeyUp,
      "aria-labelledby": [
        B,
        P["aria-labelledby"],
        P["aria-label"] && !P["aria-labelledby"] ? P.id : null
      ].filter(Boolean).join(" "),
      onFocus(y) {
        t.isFocused || (e.onFocus && e.onFocus(y), e.onFocusChange && e.onFocusChange(!0), t.setFocused(!0));
      },
      onBlur(y) {
        t.isOpen || (e.onBlur && e.onBlur(y), e.onFocusChange && e.onFocusChange(!1), t.setFocused(!1));
      }
    }),
    valueProps: {
      id: B
    },
    menuProps: {
      ...d,
      autoFocus: t.focusStrategy || !0,
      shouldSelectOnPressUp: !0,
      shouldFocusOnHover: !0,
      disallowEmptySelection: !0,
      linkBehavior: "selection",
      onBlur: (y) => {
        y.currentTarget.contains(y.relatedTarget) || (e.onBlur && e.onBlur(y), e.onFocusChange && e.onFocusChange(!1), t.setFocused(!1));
      },
      "aria-labelledby": [
        m["aria-labelledby"],
        P["aria-label"] && !m["aria-labelledby"] ? P.id : null
      ].filter(Boolean).join(" ")
    },
    descriptionProps: b,
    errorMessageProps: D,
    isInvalid: p,
    validationErrors: v,
    validationDetails: g
  };
}
function IS(e, t, r) {
  let n = n3.get(t) || {}, { autoComplete: i, name: a = n.name, isDisabled: o = n.isDisabled } = e, { validationBehavior: s, isRequired: u } = n, l = Kw(), { visuallyHiddenProps: c } = Q0();
  $d(e.selectRef, t.selectedKey, t.setSelectedKey), Nd({
    validationBehavior: s,
    focus: () => r.current.focus()
  }, t, e.selectRef);
  var d;
  return {
    containerProps: {
      ...c,
      "aria-hidden": !0,
      "data-react-aria-prevent-focus": !0,
      "data-a11y-ignore": "aria-hidden-focus"
    },
    inputProps: {
      type: "text",
      tabIndex: l == null || t.isFocused || t.isOpen ? -1 : 0,
      style: {
        fontSize: 16
      },
      onFocus: () => r.current.focus(),
      disabled: o
    },
    selectProps: {
      tabIndex: -1,
      autoComplete: i,
      disabled: o,
      required: s === "native" && u,
      name: a,
      value: (d = t.selectedKey) !== null && d !== void 0 ? d : "",
      onChange: (f) => t.setSelectedKey(f.target.value)
    }
  };
}
function RS(e) {
  let { state: t, triggerRef: r, label: n, name: i, isDisabled: a } = e, o = q(null), { containerProps: s, inputProps: u, selectProps: l } = IS({
    ...e,
    selectRef: o
  }, t, r);
  var c;
  return t.collection.size <= 300 ? /* @__PURE__ */ A.createElement("div", {
    ...s,
    "data-testid": "hidden-select-container"
  }, /* @__PURE__ */ A.createElement("input", u), /* @__PURE__ */ A.createElement("label", null, n, /* @__PURE__ */ A.createElement("select", {
    ...l,
    ref: o
  }, /* @__PURE__ */ A.createElement("option", null), [
    ...t.collection.getKeys()
  ].map((d) => {
    let f = t.collection.getItem(d);
    if (f.type === "item") return /* @__PURE__ */ A.createElement("option", {
      key: f.key,
      value: f.key
    }, f.textValue);
  })))) : i ? /* @__PURE__ */ A.createElement("input", {
    type: "hidden",
    autoComplete: l.autoComplete,
    name: i,
    disabled: a,
    value: (c = t.selectedKey) !== null && c !== void 0 ? c : ""
  }) : null;
}
function BS(e) {
  let t = Oe(e, {
    labelable: !0
  }), r;
  return e.orientation === "vertical" && (r = "vertical"), e.elementType !== "hr" ? {
    separatorProps: {
      ...t,
      role: "separator",
      "aria-orientation": r
    }
  } : {
    separatorProps: t
  };
}
var cc = { exports: {} }, el = {};
/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var vp;
function MS() {
  if (vp) return el;
  vp = 1;
  var e = A;
  function t(d, f) {
    return d === f && (d !== 0 || 1 / d === 1 / f) || d !== d && f !== f;
  }
  var r = typeof Object.is == "function" ? Object.is : t, n = e.useState, i = e.useEffect, a = e.useLayoutEffect, o = e.useDebugValue;
  function s(d, f) {
    var h = f(), p = n({ inst: { value: h, getSnapshot: f } }), v = p[0].inst, g = p[1];
    return a(function() {
      v.value = h, v.getSnapshot = f, u(v) && g({ inst: v });
    }, [d, h, f]), i(function() {
      return u(v) && g({ inst: v }), d(function() {
        u(v) && g({ inst: v });
      });
    }, [d]), o(h), h;
  }
  function u(d) {
    var f = d.getSnapshot;
    d = d.value;
    try {
      var h = f();
      return !r(d, h);
    } catch {
      return !0;
    }
  }
  function l(d, f) {
    return f();
  }
  var c = typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u" ? l : s;
  return el.useSyncExternalStore = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : c, el;
}
var tl = {};
/**
 * @license React
 * use-sync-external-store-shim.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var yp;
function NS() {
  return yp || (yp = 1, process.env.NODE_ENV !== "production" && function() {
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var e = A, t = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function r(b) {
      {
        for (var D = arguments.length, S = new Array(D > 1 ? D - 1 : 0), P = 1; P < D; P++)
          S[P - 1] = arguments[P];
        n("error", b, S);
      }
    }
    function n(b, D, S) {
      {
        var P = t.ReactDebugCurrentFrame, B = P.getStackAddendum();
        B !== "" && (D += "%s", S = S.concat([B]));
        var y = S.map(function(_) {
          return String(_);
        });
        y.unshift("Warning: " + D), Function.prototype.apply.call(console[b], console, y);
      }
    }
    function i(b, D) {
      return b === D && (b !== 0 || 1 / b === 1 / D) || b !== b && D !== D;
    }
    var a = typeof Object.is == "function" ? Object.is : i, o = e.useState, s = e.useEffect, u = e.useLayoutEffect, l = e.useDebugValue, c = !1, d = !1;
    function f(b, D, S) {
      c || e.startTransition !== void 0 && (c = !0, r("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."));
      var P = D();
      if (!d) {
        var B = D();
        a(P, B) || (r("The result of getSnapshot should be cached to avoid an infinite loop"), d = !0);
      }
      var y = o({
        inst: {
          value: P,
          getSnapshot: D
        }
      }), _ = y[0].inst, w = y[1];
      return u(function() {
        _.value = P, _.getSnapshot = D, h(_) && w({
          inst: _
        });
      }, [b, P, D]), s(function() {
        h(_) && w({
          inst: _
        });
        var E = function() {
          h(_) && w({
            inst: _
          });
        };
        return b(E);
      }, [b]), l(P), P;
    }
    function h(b) {
      var D = b.getSnapshot, S = b.value;
      try {
        var P = D();
        return !a(S, P);
      } catch {
        return !0;
      }
    }
    function p(b, D, S) {
      return D();
    }
    var v = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", g = !v, $ = g ? p : f, m = e.useSyncExternalStore !== void 0 ? e.useSyncExternalStore : $;
    tl.useSyncExternalStore = m, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
  }()), tl;
}
process.env.NODE_ENV === "production" ? cc.exports = MS() : cc.exports = NS();
var LS = cc.exports;
class Vd {
  get childNodes() {
    throw new Error("childNodes is not supported");
  }
  clone() {
    let t = new Vd(this.type, this.key);
    return t.value = this.value, t.level = this.level, t.hasChildNodes = this.hasChildNodes, t.rendered = this.rendered, t.textValue = this.textValue, t["aria-label"] = this["aria-label"], t.index = this.index, t.parentKey = this.parentKey, t.prevKey = this.prevKey, t.nextKey = this.nextKey, t.firstChildKey = this.firstChildKey, t.lastChildKey = this.lastChildKey, t.props = this.props, t;
  }
  constructor(t, r) {
    this.value = null, this.level = 0, this.hasChildNodes = !1, this.rendered = null, this.textValue = "", this["aria-label"] = void 0, this.index = 0, this.parentKey = null, this.prevKey = null, this.nextKey = null, this.firstChildKey = null, this.lastChildKey = null, this.props = {}, this.type = t, this.key = r;
  }
}
class i3 {
  *[Symbol.iterator]() {
    let t = this.firstChild;
    for (; t; )
      yield t, t = t.nextSibling;
  }
  get firstChild() {
    return this._firstChild;
  }
  set firstChild(t) {
    this._firstChild = t, this.ownerDocument.markDirty(this);
  }
  get lastChild() {
    return this._lastChild;
  }
  set lastChild(t) {
    this._lastChild = t, this.ownerDocument.markDirty(this);
  }
  get previousSibling() {
    return this._previousSibling;
  }
  set previousSibling(t) {
    this._previousSibling = t, this.ownerDocument.markDirty(this);
  }
  get nextSibling() {
    return this._nextSibling;
  }
  set nextSibling(t) {
    this._nextSibling = t, this.ownerDocument.markDirty(this);
  }
  get parentNode() {
    return this._parentNode;
  }
  set parentNode(t) {
    this._parentNode = t, this.ownerDocument.markDirty(this);
  }
  get isConnected() {
    var t;
    return ((t = this.parentNode) === null || t === void 0 ? void 0 : t.isConnected) || !1;
  }
  appendChild(t) {
    this.ownerDocument.startTransaction(), t.parentNode && t.parentNode.removeChild(t), this.firstChild == null && (this.firstChild = t), this.lastChild ? (this.lastChild.nextSibling = t, t.index = this.lastChild.index + 1, t.previousSibling = this.lastChild) : (t.previousSibling = null, t.index = 0), t.parentNode = this, t.nextSibling = null, this.lastChild = t, this.ownerDocument.markDirty(this), t.hasSetProps && this.ownerDocument.addNode(t), this.ownerDocument.endTransaction(), this.ownerDocument.queueUpdate();
  }
  insertBefore(t, r) {
    if (r == null) return this.appendChild(t);
    this.ownerDocument.startTransaction(), t.parentNode && t.parentNode.removeChild(t), t.nextSibling = r, t.previousSibling = r.previousSibling, t.index = r.index, this.firstChild === r ? this.firstChild = t : r.previousSibling && (r.previousSibling.nextSibling = t), r.previousSibling = t, t.parentNode = r.parentNode;
    let n = r;
    for (; n; )
      n.index++, n = n.nextSibling;
    t.hasSetProps && this.ownerDocument.addNode(t), this.ownerDocument.endTransaction(), this.ownerDocument.queueUpdate();
  }
  removeChild(t) {
    if (t.parentNode !== this) return;
    this.ownerDocument.startTransaction();
    let r = t.nextSibling;
    for (; r; )
      r.index--, r = r.nextSibling;
    t.nextSibling && (t.nextSibling.previousSibling = t.previousSibling), t.previousSibling && (t.previousSibling.nextSibling = t.nextSibling), this.firstChild === t && (this.firstChild = t.nextSibling), this.lastChild === t && (this.lastChild = t.previousSibling), t.parentNode = null, t.nextSibling = null, t.previousSibling = null, t.index = 0, this.ownerDocument.removeNode(t), this.ownerDocument.endTransaction(), this.ownerDocument.queueUpdate();
  }
  addEventListener() {
  }
  removeEventListener() {
  }
  constructor(t) {
    this._firstChild = null, this._lastChild = null, this._previousSibling = null, this._nextSibling = null, this._parentNode = null, this.ownerDocument = t;
  }
}
class $a extends i3 {
  get index() {
    return this._index;
  }
  set index(t) {
    this._index = t, this.ownerDocument.markDirty(this);
  }
  get level() {
    return this.parentNode instanceof $a ? this.parentNode.level + (this.node.type === "item" ? 1 : 0) : 0;
  }
  updateNode() {
    var t, r, n, i;
    let a = this.ownerDocument.getMutableNode(this);
    a.index = this.index, a.level = this.level, a.parentKey = this.parentNode instanceof $a ? this.parentNode.node.key : null;
    var o;
    a.prevKey = (o = (t = this.previousSibling) === null || t === void 0 ? void 0 : t.node.key) !== null && o !== void 0 ? o : null;
    var s;
    a.nextKey = (s = (r = this.nextSibling) === null || r === void 0 ? void 0 : r.node.key) !== null && s !== void 0 ? s : null, a.hasChildNodes = !!this.firstChild;
    var u;
    a.firstChildKey = (u = (n = this.firstChild) === null || n === void 0 ? void 0 : n.node.key) !== null && u !== void 0 ? u : null;
    var l;
    a.lastChildKey = (l = (i = this.lastChild) === null || i === void 0 ? void 0 : i.node.key) !== null && l !== void 0 ? l : null;
  }
  setProps(t, r, n) {
    let i = this.ownerDocument.getMutableNode(this), { value: a, textValue: o, id: s, ...u } = t;
    if (u.ref = r, i.props = u, i.rendered = n, i.value = a, i.textValue = o || (typeof n == "string" ? n : "") || t["aria-label"] || "", s != null && s !== i.key) {
      if (this.hasSetProps) throw new Error("Cannot change the id of an item");
      i.key = s;
    }
    this.hasSetProps || (this.ownerDocument.addNode(this), this.ownerDocument.endTransaction(), this.hasSetProps = !0), this.ownerDocument.queueUpdate();
  }
  get style() {
    return {};
  }
  hasAttribute() {
  }
  setAttribute() {
  }
  setAttributeNS() {
  }
  removeAttribute() {
  }
  constructor(t, r) {
    super(r), this.nodeType = 8, this._index = 0, this.hasSetProps = !1, this.node = new Vd(t, `react-aria-${++r.nodeId}`), this.ownerDocument.startTransaction();
  }
}
class VS {
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  *[Symbol.iterator]() {
    let t = this.firstKey != null ? this.keyMap.get(this.firstKey) : void 0;
    for (; t; )
      yield t, t = t.nextKey != null ? this.keyMap.get(t.nextKey) : void 0;
  }
  getChildren(t) {
    let r = this.keyMap;
    return {
      *[Symbol.iterator]() {
        let n = r.get(t), i = (n == null ? void 0 : n.firstChildKey) != null ? r.get(n.firstChildKey) : null;
        for (; i; )
          yield i, i = i.nextKey != null ? r.get(i.nextKey) : void 0;
      }
    };
  }
  getKeyBefore(t) {
    let r = this.keyMap.get(t);
    if (!r) return null;
    if (r.prevKey != null) {
      for (r = this.keyMap.get(r.prevKey); r && r.type !== "item" && r.lastChildKey != null; ) r = this.keyMap.get(r.lastChildKey);
      var n;
      return (n = r == null ? void 0 : r.key) !== null && n !== void 0 ? n : null;
    }
    return r.parentKey;
  }
  getKeyAfter(t) {
    let r = this.keyMap.get(t);
    if (!r) return null;
    if (r.type !== "item" && r.firstChildKey != null) return r.firstChildKey;
    for (; r; ) {
      if (r.nextKey != null) return r.nextKey;
      if (r.parentKey != null) r = this.keyMap.get(r.parentKey);
      else return null;
    }
    return null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    let t = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;
    for (; (t == null ? void 0 : t.lastChildKey) != null; ) t = this.keyMap.get(t.lastChildKey);
    var r;
    return (r = t == null ? void 0 : t.key) !== null && r !== void 0 ? r : null;
  }
  getItem(t) {
    var r;
    return (r = this.keyMap.get(t)) !== null && r !== void 0 ? r : null;
  }
  at() {
    throw new Error("Not implemented");
  }
  clone() {
    let t = this.constructor, r = new t();
    return r.keyMap = new Map(this.keyMap), r.firstKey = this.firstKey, r.lastKey = this.lastKey, r;
  }
  addNode(t) {
    if (this.frozen) throw new Error("Cannot add a node to a frozen collection");
    this.keyMap.set(t.key, t);
  }
  removeNode(t) {
    if (this.frozen) throw new Error("Cannot remove a node to a frozen collection");
    this.keyMap.delete(t);
  }
  commit(t, r, n = !1) {
    if (this.frozen) throw new Error("Cannot commit a frozen collection");
    this.firstKey = t, this.lastKey = r, this.frozen = !n;
  }
  constructor() {
    this.keyMap = /* @__PURE__ */ new Map(), this.firstKey = null, this.lastKey = null, this.frozen = !1;
  }
}
class jS extends i3 {
  get isConnected() {
    return !0;
  }
  createElement(t) {
    return new $a(t, this);
  }
  /**
  * Lazily gets a mutable instance of a Node. If the node has already
  * been cloned during this update cycle, it just returns the existing one.
  */
  getMutableNode(t) {
    let r = t.node;
    return this.mutatedNodes.has(t) || (r = t.node.clone(), this.mutatedNodes.add(t), t.node = r), this.markDirty(t), r;
  }
  getMutableCollection() {
    return !this.isSSR && !this.collectionMutated && (this.collection = this.collection.clone(), this.collectionMutated = !0), this.collection;
  }
  markDirty(t) {
    this.dirtyNodes.add(t);
  }
  startTransaction() {
    this.transactionCount++;
  }
  endTransaction() {
    this.transactionCount--;
  }
  addNode(t) {
    let r = this.getMutableCollection();
    if (!r.getItem(t.node.key)) {
      r.addNode(t.node);
      for (let n of t) this.addNode(n);
    }
    this.markDirty(t);
  }
  removeNode(t) {
    for (let n of t) this.removeNode(n);
    this.getMutableCollection().removeNode(t.node.key), this.markDirty(t);
  }
  /** Finalizes the collection update, updating all nodes and freezing the collection. */
  getCollection() {
    return this.transactionCount > 0 ? this.collection : (this.updateCollection(), this.collection);
  }
  updateCollection() {
    for (let a of this.dirtyNodes) a instanceof $a && a.isConnected && a.updateNode();
    if (this.dirtyNodes.clear(), this.mutatedNodes.size || this.collectionMutated) {
      var t, r;
      let a = this.getMutableCollection();
      for (let o of this.mutatedNodes) o.isConnected && a.addNode(o.node);
      var n, i;
      a.commit((n = (t = this.firstChild) === null || t === void 0 ? void 0 : t.node.key) !== null && n !== void 0 ? n : null, (i = (r = this.lastChild) === null || r === void 0 ? void 0 : r.node.key) !== null && i !== void 0 ? i : null, this.isSSR), this.mutatedNodes.clear();
    }
    this.collectionMutated = !1;
  }
  queueUpdate() {
    if (!(this.dirtyNodes.size === 0 || this.transactionCount > 0))
      for (let t of this.subscriptions) t();
  }
  subscribe(t) {
    return this.subscriptions.add(t), () => this.subscriptions.delete(t);
  }
  resetAfterSSR() {
    this.isSSR && (this.isSSR = !1, this.firstChild = null, this.lastChild = null, this.nodeId = 0);
  }
  constructor(t) {
    super(null), this.nodeType = 11, this.ownerDocument = this, this.dirtyNodes = /* @__PURE__ */ new Set(), this.isSSR = !1, this.nodeId = 0, this.nodesByProps = /* @__PURE__ */ new WeakMap(), this.mutatedNodes = /* @__PURE__ */ new Set(), this.subscriptions = /* @__PURE__ */ new Set(), this.transactionCount = 0, this.collection = t, this.collectionMutated = !0;
  }
}
function jd(e) {
  let { children: t, items: r, idScope: n, addIdAndValue: i, dependencies: a = [] } = e, o = G(() => /* @__PURE__ */ new WeakMap(), a);
  return G(() => {
    if (r && typeof t == "function") {
      let l = [];
      for (let c of r) {
        let d = o.get(c);
        if (!d) {
          d = t(c);
          var s, u;
          let f = (u = (s = d.props.id) !== null && s !== void 0 ? s : c.key) !== null && u !== void 0 ? u : c.id;
          if (f == null) throw new Error("Could not determine key for item");
          n && (f = n + ":" + f), d = /* @__PURE__ */ ra(d, i ? {
            key: f,
            id: f,
            value: c
          } : {
            key: f
          }), o.set(c, d);
        }
        l.push(d);
      }
      return l;
    } else if (typeof t != "function") return t;
  }, [
    t,
    r,
    o,
    n,
    i
  ]);
}
function zS(e) {
  return jd({
    ...e,
    addIdAndValue: !0
  });
}
const a3 = /* @__PURE__ */ de(!1);
function KS(e, t) {
  let { collection: r, document: n } = zd(t);
  return {
    portal: o3(e, n),
    collection: r
  };
}
function US(e, t, r) {
  let n = Er(), i = q(n);
  i.current = n;
  let a = be(() => i.current ? r() : t(), [
    t,
    r
  ]);
  return LS.useSyncExternalStore(e, a);
}
const qS = typeof A.useSyncExternalStore == "function" ? A.useSyncExternalStore : US;
function zd(e) {
  let t = G(() => new jS(e || new VS()), [
    e
  ]), r = be((o) => t.subscribe(o), [
    t
  ]), n = be(() => {
    let o = t.getCollection();
    return t.isSSR && t.resetAfterSSR(), o;
  }, [
    t
  ]), i = be(() => (t.isSSR = !0, t.getCollection()), [
    t
  ]);
  return {
    collection: qS(r, n, i),
    document: t
  };
}
const dc = /* @__PURE__ */ de(null), Js = /* @__PURE__ */ de(null);
function o3(e, t) {
  let r = le(Js), n = t ?? r, i = zS(e), a = G(() => /* @__PURE__ */ A.createElement(a3.Provider, {
    value: !0
  }, i), [
    i
  ]);
  return Er() ? /* @__PURE__ */ A.createElement(dc.Provider, {
    value: n
  }, a) : /* @__PURE__ */ K$(a, n);
}
function HS(e) {
  return /* @__PURE__ */ A.createElement(A.Fragment, null, o3(e));
}
function s3(e, t, r) {
  let n = le(a3);
  var i;
  return n ? (i = u3(e, t, r, "children" in t ? t.children : null)) !== null && i !== void 0 ? i : /* @__PURE__ */ A.createElement(A.Fragment, null) : null;
}
function WS(e, t, r) {
  return be((n) => {
    n == null || n.setProps(e, t, r);
  }, [
    e,
    t,
    r
  ]);
}
function u3(e, t, r, n, i) {
  let a = WS(t, r, n), o = le(dc);
  if (o) {
    let s = o.ownerDocument.nodesByProps.get(t);
    return s || (s = o.ownerDocument.createElement(e), s.setProps(t, r, n), o.appendChild(s), o.ownerDocument.updateCollection(), o.ownerDocument.nodesByProps.set(t, s)), i ? /* @__PURE__ */ A.createElement(dc.Provider, {
      value: s
    }, i) : null;
  }
  return /* @__PURE__ */ A.createElement(e, {
    ref: a
  }, i);
}
const fc = Symbol("default");
function kt({ values: e, children: t }) {
  for (let [r, n] of e)
    t = /* @__PURE__ */ A.createElement(r.Provider, {
      value: n
    }, t);
  return t;
}
function it(e) {
  let { className: t, style: r, children: n, defaultClassName: i, defaultChildren: a, defaultStyle: o, values: s } = e;
  return G(() => {
    let u, l, c;
    return typeof t == "function" ? u = t({
      ...s,
      defaultClassName: i
    }) : u = t, typeof r == "function" ? l = r({
      ...s,
      defaultStyle: o || {}
    }) : l = r, typeof n == "function" ? c = n({
      ...s,
      defaultChildren: a
    }) : n == null ? c = a : c = n, {
      className: u ?? i,
      style: l || o ? {
        ...o,
        ...l
      } : void 0,
      children: c ?? a,
      "data-rac": ""
    };
  }, [
    t,
    r,
    n,
    i,
    a,
    o,
    s
  ]);
}
function Na(e, t) {
  return (r) => t(typeof e == "function" ? e(r) : e, r);
}
function wn(e, t) {
  let r = le(e);
  if (t === null)
    return null;
  if (r && typeof r == "object" && "slots" in r && r.slots) {
    let n = new Intl.ListFormat().format(Object.keys(r.slots).map((a) => `"${a}"`));
    if (!t && !r.slots[fc]) throw new Error(`A slot prop is required. Valid slot names are ${n}.`);
    let i = t || fc;
    if (!r.slots[i])
      throw new Error(`Invalid slot "${t}". Valid slot names are ${n}.`);
    return r.slots[i];
  }
  return r;
}
function Ze(e, t, r) {
  let n = wn(r, e.slot) || {}, { ref: i, ...a } = n, o = Dn(G(() => md(t, i), [
    t,
    i
  ])), s = ye(a, e);
  return "style" in a && a.style && "style" in e && e.style && (typeof a.style == "function" || typeof e.style == "function" ? s.style = (u) => {
    let l = typeof a.style == "function" ? a.style(u) : a.style, c = {
      ...u.defaultStyle,
      ...l
    }, d = typeof e.style == "function" ? e.style({
      ...u,
      defaultStyle: c
    }) : e.style;
    return {
      ...c,
      ...d
    };
  } : s.style = {
    ...a.style,
    ...e.style
  }), [
    s,
    o
  ];
}
function La() {
  let [e, t] = ee(!0), r = q(!1), n = be((i) => {
    r.current = !0, t(!!i);
  }, []);
  return Re(() => {
    r.current || t(!1);
  }, []), [
    n,
    e
  ];
}
function Kd(e, t = !0) {
  let [r, n] = ee(!0);
  return l3(e, r && t, be(() => n(!1), [])), r && t;
}
function hc(e, t) {
  let [r, n] = ee(!1), [i, a] = ee("idle");
  return !t && e.current && i === "idle" && (r = !0, n(!0), a("exiting")), !e.current && i === "exited" && a("idle"), l3(e, r, be(() => {
    a("exited"), n(!1);
  }, [])), r;
}
function l3(e, t, r) {
  let n = q(null);
  t && e.current && (n.current = window.getComputedStyle(e.current).animation), Re(() => {
    if (t && e.current) {
      let i = window.getComputedStyle(e.current);
      if (i.animationName && i.animationName !== "none" && i.animation !== n.current) {
        let a = (s) => {
          s.target === e.current && (o.removeEventListener("animationend", a), Oc.flushSync(() => {
            r();
          }));
        }, o = e.current;
        return o.addEventListener("animationend", a), () => {
          o.removeEventListener("animationend", a);
        };
      } else r();
    }
  }, [
    e,
    t,
    r
  ]);
}
if (typeof HTMLTemplateElement < "u") {
  const e = Object.getOwnPropertyDescriptor(Node.prototype, "firstChild").get;
  Object.defineProperty(HTMLTemplateElement.prototype, "firstChild", {
    configurable: !0,
    enumerable: !0,
    get: function() {
      return this.dataset.reactAriaHidden ? this.content.firstChild : e.call(this);
    }
  });
}
const xa = /* @__PURE__ */ de(!1), QS = typeof DocumentFragment < "u" ? new DocumentFragment() : null;
function c3(e) {
  let t = le(xa), r = Er();
  if (t)
    return /* @__PURE__ */ A.createElement(A.Fragment, null, e.children);
  let n = /* @__PURE__ */ A.createElement(xa.Provider, {
    value: !0
  }, e.children);
  return r ? /* @__PURE__ */ A.createElement("template", {
    "data-react-aria-hidden": !0
  }, n) : /* @__PURE__ */ Oc.createPortal(n, QS);
}
function Ud(e) {
  let t = (r, n) => le(xa) ? null : e(r, n);
  return t.displayName = e.displayName || e.name, A.forwardRef(t);
}
function Xs(e) {
  const t = /^(data-.*)$/;
  let r = {};
  for (const n in e) t.test(n) || (r[n] = e[n]);
  return r;
}
const GS = /* @__PURE__ */ new Set([
  "form",
  "formAction",
  "formEncType",
  "formMethod",
  "formNoValidate",
  "formTarget",
  "name",
  "value"
]), Va = /* @__PURE__ */ de({});
function ZS(e, t) {
  [e, t] = Ze(e, t, Va);
  let r = e, { buttonProps: n, isPressed: i } = CC(e, t), { focusProps: a, isFocused: o, isFocusVisible: s } = Wr(e), { hoverProps: u, isHovered: l } = En(e), c = it({
    ...e,
    values: {
      isHovered: l,
      isPressed: i,
      isFocused: o,
      isFocusVisible: s,
      isDisabled: e.isDisabled || !1
    },
    defaultClassName: "react-aria-Button"
  });
  return /* @__PURE__ */ A.createElement("button", {
    ...Oe(e, {
      propNames: GS
    }),
    ...ye(n, a, u),
    ...c,
    ref: t,
    slot: e.slot || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-pressed": r.isPressed || i || void 0,
    "data-hovered": l || void 0,
    "data-focused": o || void 0,
    "data-focus-visible": s || void 0
  });
}
const d3 = /* @__PURE__ */ Ud(ZS), Gr = /* @__PURE__ */ de({});
function YS(e, t) {
  [e, t] = Ze(e, t, Gr);
  let { elementType: r = "span", ...n } = e;
  return /* @__PURE__ */ A.createElement(r, {
    className: "react-aria-Text",
    ...n,
    ref: t
  });
}
const qd = /* @__PURE__ */ Ee(YS);
function ti(e, t, r) {
  return t != null && e.compare(t) < 0 || r != null && e.compare(r) > 0;
}
function pc(e, t, r, n, i) {
  let a = {};
  for (let s in t)
    a[s] = Math.floor(t[s] / 2), a[s] > 0 && t[s] % 2 === 0 && a[s]--;
  let o = on(e, t, r).subtract(a);
  return Da(e, o, t, r, n, i);
}
function on(e, t, r, n, i) {
  let a = e;
  return t.years ? a = Gl(e) : t.months ? a = br(e) : t.weeks && (a = yn(e, r)), Da(e, a, t, r, n, i);
}
function mc(e, t, r, n, i) {
  let a = {
    ...t
  };
  t.days ? a.days-- : t.weeks ? a.weeks-- : t.months ? a.months-- : t.years && a.years--;
  let o = on(e, t, r).subtract(a);
  return Da(e, o, t, r, n, i);
}
function Da(e, t, r, n, i, a) {
  return i && e.compare(i) >= 0 && (t = kd(t, on(bt(i), r, n))), a && e.compare(a) <= 0 && (t = Sd(t, mc(bt(a), r, n))), t;
}
function _r(e, t, r) {
  return t && (e = kd(e, bt(t))), r && (e = Sd(e, bt(r))), e;
}
function f3(e, t, r) {
  if (!r) return e;
  for (; e.compare(t) >= 0 && r(e); ) e = e.subtract({
    days: 1
  });
  if (e.compare(t) >= 0) return e;
}
function JS(e) {
  let t = G(() => new Yt(e.locale), [
    e.locale
  ]), r = G(() => t.resolvedOptions(), [
    t
  ]), { locale: n, createCalendar: i, visibleDuration: a = {
    months: 1
  }, minValue: o, maxValue: s, selectionAlignment: u, isDateUnavailable: l, pageBehavior: c = "visible" } = e, d = G(() => i(r.calendar), [
    i,
    r.calendar
  ]), [f, h] = tr(e.value, e.defaultValue, e.onChange), p = G(() => f ? Ve(bt(f), d) : null, [
    f,
    d
  ]), v = G(() => f && "timeZone" in f ? f.timeZone : r.timeZone, [
    f,
    r.timeZone
  ]), g = G(() => e.focusedValue ? _r(Ve(bt(e.focusedValue), d), o, s) : void 0, [
    e.focusedValue,
    d,
    o,
    s
  ]), $ = G(() => _r(e.defaultFocusedValue ? Ve(bt(e.defaultFocusedValue), d) : p || Ve(Ks(v), d), o, s), [
    e.defaultFocusedValue,
    p,
    v,
    d,
    o,
    s
  ]), [m, b] = tr(g, $, e.onFocusChange), [D, S] = ee(() => {
    switch (u) {
      case "start":
        return on(m, a, n, o, s);
      case "end":
        return mc(m, a, n, o, s);
      case "center":
      default:
        return pc(m, a, n, o, s);
    }
  }), [P, B] = ee(e.autoFocus || !1), y = G(() => {
    let x = {
      ...a
    };
    return x.days ? x.days-- : x.days = -1, D.add(x);
  }, [
    D,
    a
  ]), [_, w] = ee(d.identifier);
  if (d.identifier !== _) {
    let x = Ve(m, d);
    S(pc(x, a, n, o, s)), b(x), w(d.identifier);
  }
  ti(m, o, s) ? b(_r(m, o, s)) : m.compare(D) < 0 ? S(mc(m, a, n, o, s)) : m.compare(y) > 0 && S(on(m, a, n, o, s));
  function E(x) {
    x = _r(x, o, s), b(x);
  }
  function k(x) {
    if (!e.isDisabled && !e.isReadOnly) {
      if (x === null) {
        h(null);
        return;
      }
      if (x = _r(x, o, s), x = f3(x, D, l), !x) return;
      x = Ve(x, (f == null ? void 0 : f.calendar) || new $t()), f && "hour" in f ? h(f.set(x)) : h(x);
    }
  }
  let C = G(() => p ? l && l(p) ? !0 : ti(p, o, s) : !1, [
    p,
    l,
    o,
    s
  ]), T = e.isInvalid || e.validationState === "invalid" || C, L = T ? "invalid" : null, O = G(() => c === "visible" ? a : rl(a), [
    c,
    a
  ]);
  return {
    isDisabled: e.isDisabled,
    isReadOnly: e.isReadOnly,
    value: p,
    setValue: k,
    visibleRange: {
      start: D,
      end: y
    },
    minValue: o,
    maxValue: s,
    focusedDate: m,
    timeZone: v,
    validationState: L,
    isValueInvalid: T,
    setFocusedDate(x) {
      E(x), B(!0);
    },
    focusNextDay() {
      E(m.add({
        days: 1
      }));
    },
    focusPreviousDay() {
      E(m.subtract({
        days: 1
      }));
    },
    focusNextRow() {
      a.days ? this.focusNextPage() : (a.weeks || a.months || a.years) && E(m.add({
        weeks: 1
      }));
    },
    focusPreviousRow() {
      a.days ? this.focusPreviousPage() : (a.weeks || a.months || a.years) && E(m.subtract({
        weeks: 1
      }));
    },
    focusNextPage() {
      let x = D.add(O);
      b(_r(m.add(O), o, s)), S(on(Da(m, x, O, n, o, s), O, n));
    },
    focusPreviousPage() {
      let x = D.subtract(O);
      b(_r(m.subtract(O), o, s)), S(on(Da(m, x, O, n, o, s), O, n));
    },
    focusSectionStart() {
      a.days ? E(D) : a.weeks ? E(yn(m, n)) : (a.months || a.years) && E(br(m));
    },
    focusSectionEnd() {
      a.days ? E(y) : a.weeks ? E(vy(m, n)) : (a.months || a.years) && E(li(m));
    },
    focusNextSection(x) {
      if (!x && !a.days) {
        E(m.add(rl(a)));
        return;
      }
      a.days ? this.focusNextPage() : a.weeks ? E(m.add({
        months: 1
      })) : (a.months || a.years) && E(m.add({
        years: 1
      }));
    },
    focusPreviousSection(x) {
      if (!x && !a.days) {
        E(m.subtract(rl(a)));
        return;
      }
      a.days ? this.focusPreviousPage() : a.weeks ? E(m.subtract({
        months: 1
      })) : (a.months || a.years) && E(m.subtract({
        years: 1
      }));
    },
    selectFocusedDate() {
      k(m);
    },
    selectDate(x) {
      k(x);
    },
    isFocused: P,
    setFocused: B,
    isInvalid(x) {
      return ti(x, o, s);
    },
    isSelected(x) {
      return p != null && et(x, p) && !this.isCellDisabled(x) && !this.isCellUnavailable(x);
    },
    isCellFocused(x) {
      return P && m && et(x, m);
    },
    isCellDisabled(x) {
      return e.isDisabled || x.compare(D) < 0 || x.compare(y) > 0 || this.isInvalid(x, o, s);
    },
    isCellUnavailable(x) {
      return e.isDateUnavailable && e.isDateUnavailable(x);
    },
    isPreviousVisibleRangeInvalid() {
      let x = D.subtract({
        days: 1
      });
      return et(x, D) || this.isInvalid(x, o, s);
    },
    isNextVisibleRangeInvalid() {
      let x = y.add({
        days: 1
      });
      return et(x, y) || this.isInvalid(x, o, s);
    },
    getDatesInWeek(x, U = D) {
      let K = U.add({
        weeks: x
      }), j = [];
      K = yn(K, n);
      let ae = Cd(K, n);
      for (let ne = 0; ne < ae; ne++) j.push(null);
      for (; j.length < 7; ) {
        j.push(K);
        let ne = K.add({
          days: 1
        });
        if (et(K, ne)) break;
        K = ne;
      }
      for (; j.length < 7; ) j.push(null);
      return j;
    }
  };
}
function rl(e) {
  let t = {
    ...e
  };
  for (let r in e) t[r] = 1;
  return t;
}
function XS(e) {
  let { value: t, defaultValue: r, onChange: n, createCalendar: i, locale: a, visibleDuration: o = {
    months: 1
  }, minValue: s, maxValue: u, ...l } = e, [c, d] = tr(t, r || null, n), [f, h] = ee(null), p = "center";
  if (c && c.start && c.end) {
    let U = pc(bt(c.start), o, a, s, u).add(o).subtract({
      days: 1
    });
    c.end.compare(U) > 0 && (p = "start");
  }
  let v = q(null), [g, $] = ee(null), m = G(() => kd(s, g == null ? void 0 : g.start), [
    s,
    g
  ]), b = G(() => Sd(u, g == null ? void 0 : g.end), [
    u,
    g
  ]), D = JS({
    ...l,
    value: c && c.start,
    createCalendar: i,
    locale: a,
    visibleDuration: o,
    minValue: m,
    maxValue: b,
    selectionAlignment: p
  }), S = (x) => {
    x && e.isDateUnavailable && !e.allowsNonContiguousRanges ? (v.current = {
      start: bp(x, D, -1),
      end: bp(x, D, 1)
    }, $(v.current)) : (v.current = null, $(null));
  }, [P, B] = ee(D.visibleRange);
  (!Ql(D.visibleRange.start, P.start) || !Ql(D.visibleRange.end, P.end)) && (S(f), B(D.visibleRange));
  let y = (x) => {
    x ? (h(x), S(x)) : (h(null), S(null));
  }, _ = f ? nl(f, D.focusedDate) : c && nl(c.start, c.end), w = (x) => {
    if (!e.isReadOnly && (x = _r(x, m, b), x = f3(x, D.visibleRange.start, e.isDateUnavailable), !!x))
      if (!f) y(x);
      else {
        let U = nl(f, x);
        d({
          start: gp(U.start, c == null ? void 0 : c.start),
          end: gp(U.end, c == null ? void 0 : c.end)
        }), y(null);
      }
  }, [E, k] = ee(!1), { isDateUnavailable: C } = e, T = G(() => !c || f ? !1 : C && (C(c.start) || C(c.end)) ? !0 : ti(c.start, s, u) || ti(c.end, s, u), [
    C,
    c,
    f,
    s,
    u
  ]), L = e.isInvalid || e.validationState === "invalid" || T;
  return {
    ...D,
    value: c,
    setValue: d,
    anchorDate: f,
    setAnchorDate: y,
    highlightedRange: _,
    validationState: L ? "invalid" : null,
    isValueInvalid: L,
    selectFocusedDate() {
      w(D.focusedDate);
    },
    selectDate: w,
    highlightDate(x) {
      f && D.setFocusedDate(x);
    },
    isSelected(x) {
      return _ && x.compare(_.start) >= 0 && x.compare(_.end) <= 0 && !D.isCellDisabled(x) && !D.isCellUnavailable(x);
    },
    isInvalid(x) {
      var U, K;
      return D.isInvalid(x) || ti(x, (U = v.current) === null || U === void 0 ? void 0 : U.start, (K = v.current) === null || K === void 0 ? void 0 : K.end);
    },
    isDragging: E,
    setDragging: k
  };
}
function nl(e, t) {
  return !e || !t ? null : (t.compare(e) < 0 && ([e, t] = [
    t,
    e
  ]), {
    start: bt(e),
    end: bt(t)
  });
}
function gp(e, t) {
  return e = Ve(e, (t == null ? void 0 : t.calendar) || new $t()), t && "hour" in t ? t.set(e) : e;
}
function bp(e, t, r) {
  let n = e.add({
    days: r
  });
  for (; (r < 0 ? n.compare(t.visibleRange.start) >= 0 : n.compare(t.visibleRange.end) <= 0) && !t.isCellUnavailable(n); ) n = n.add({
    days: r
  });
  return t.isCellUnavailable(n) ? n.add({
    days: -r
  }) : null;
}
class vc {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(t) {
    let r = this.keyMap.get(t);
    return r ? r.prevKey : null;
  }
  getKeyAfter(t) {
    let r = this.keyMap.get(t);
    return r ? r.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(t) {
    return this.keyMap.get(t);
  }
  at(t) {
    const r = [
      ...this.getKeys()
    ];
    return this.getItem(r[t]);
  }
  getChildren(t) {
    let r = this.keyMap.get(t);
    return (r == null ? void 0 : r.childNodes) || [];
  }
  constructor(t) {
    this.keyMap = /* @__PURE__ */ new Map(), this.iterable = t;
    let r = (a) => {
      if (this.keyMap.set(a.key, a), a.childNodes && a.type === "section") for (let o of a.childNodes) r(o);
    };
    for (let a of t) r(a);
    let n, i = 0;
    for (let [a, o] of this.keyMap)
      n ? (n.nextKey = a, o.prevKey = n.key) : (this.firstKey = a, o.prevKey = void 0), o.type === "item" && (o.index = i++), n = o, n.nextKey = void 0;
    this.lastKey = n == null ? void 0 : n.key;
  }
}
class Nt extends Set {
  constructor(t, r, n) {
    super(t), t instanceof Nt ? (this.anchorKey = r || t.anchorKey, this.currentKey = n || t.currentKey) : (this.anchorKey = r, this.currentKey = n);
  }
}
function e7(e, t) {
  if (e.size !== t.size) return !1;
  for (let r of e)
    if (!t.has(r)) return !1;
  return !0;
}
function t7(e) {
  let { selectionMode: t = "none", disallowEmptySelection: r, allowDuplicateSelectionEvents: n, selectionBehavior: i = "toggle", disabledBehavior: a = "all" } = e, o = q(!1), [, s] = ee(!1), u = q(null), l = q(null), [, c] = ee(null), d = G(() => $p(e.selectedKeys), [
    e.selectedKeys
  ]), f = G(() => $p(e.defaultSelectedKeys, new Nt()), [
    e.defaultSelectedKeys
  ]), [h, p] = tr(d, f, e.onSelectionChange), v = G(() => e.disabledKeys ? new Set(e.disabledKeys) : /* @__PURE__ */ new Set(), [
    e.disabledKeys
  ]), [g, $] = ee(i);
  i === "replace" && g === "toggle" && typeof h == "object" && h.size === 0 && $("replace");
  let m = q(i);
  return oe(() => {
    i !== m.current && ($(i), m.current = i);
  }, [
    i
  ]), {
    selectionMode: t,
    disallowEmptySelection: r,
    selectionBehavior: g,
    setSelectionBehavior: $,
    get isFocused() {
      return o.current;
    },
    setFocused(b) {
      o.current = b, s(b);
    },
    get focusedKey() {
      return u.current;
    },
    get childFocusStrategy() {
      return l.current;
    },
    setFocusedKey(b, D = "first") {
      u.current = b, l.current = D, c(b);
    },
    selectedKeys: h,
    setSelectedKeys(b) {
      (n || !e7(b, h)) && p(b);
    },
    disabledKeys: v,
    disabledBehavior: a
  };
}
function $p(e, t) {
  return e ? e === "all" ? "all" : new Nt(e) : t;
}
class r7 {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(t) {
    this.state.setSelectionBehavior(t);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(t) {
    this.state.setFocused(t);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(t, r) {
    (t == null || this.collection.getItem(t)) && this.state.setFocusedKey(t, r);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(t) {
    return this.state.selectionMode === "none" ? !1 : (t = this.getKey(t), this.state.selectedKeys === "all" ? this.canSelectItem(t) : this.state.selectedKeys.has(t));
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty) return !1;
    if (this.state.selectedKeys === "all") return !0;
    if (this._isSelectAll != null) return this._isSelectAll;
    let t = this.getSelectAllKeys(), r = this.state.selectedKeys;
    return this._isSelectAll = t.every((n) => r.has(n)), this._isSelectAll;
  }
  get firstSelectedKey() {
    let t = null;
    for (let r of this.state.selectedKeys) {
      let n = this.collection.getItem(r);
      (!t || n && Xu(this.collection, n, t) < 0) && (t = n);
    }
    return t == null ? void 0 : t.key;
  }
  get lastSelectedKey() {
    let t = null;
    for (let r of this.state.selectedKeys) {
      let n = this.collection.getItem(r);
      (!t || n && Xu(this.collection, n, t) > 0) && (t = n);
    }
    return t == null ? void 0 : t.key;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(t) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single") {
      this.replaceSelection(t);
      return;
    }
    t = this.getKey(t);
    let r;
    if (this.state.selectedKeys === "all") r = new Nt([
      t
    ], t, t);
    else {
      let n = this.state.selectedKeys, i = n.anchorKey || t;
      r = new Nt(n, i, t);
      for (let a of this.getKeyRange(i, n.currentKey || t)) r.delete(a);
      for (let a of this.getKeyRange(t, i)) this.canSelectItem(a) && r.add(a);
    }
    this.state.setSelectedKeys(r);
  }
  getKeyRange(t, r) {
    let n = this.collection.getItem(t), i = this.collection.getItem(r);
    return n && i ? Xu(this.collection, n, i) <= 0 ? this.getKeyRangeInternal(t, r) : this.getKeyRangeInternal(r, t) : [];
  }
  getKeyRangeInternal(t, r) {
    let n = [], i = t;
    for (; i; ) {
      let a = this.collection.getItem(i);
      if ((a && a.type === "item" || a.type === "cell" && this.allowsCellSelection) && n.push(i), i === r) return n;
      i = this.collection.getKeyAfter(i);
    }
    return [];
  }
  getKey(t) {
    let r = this.collection.getItem(t);
    if (!r || r.type === "cell" && this.allowsCellSelection) return t;
    for (; r.type !== "item" && r.parentKey != null; ) r = this.collection.getItem(r.parentKey);
    return !r || r.type !== "item" ? null : r.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(t) {
    if (this.selectionMode === "none") return;
    if (this.selectionMode === "single" && !this.isSelected(t)) {
      this.replaceSelection(t);
      return;
    }
    if (t = this.getKey(t), t == null) return;
    let r = new Nt(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    r.has(t) ? r.delete(t) : this.canSelectItem(t) && (r.add(t), r.anchorKey = t, r.currentKey = t), !(this.disallowEmptySelection && r.size === 0) && this.state.setSelectedKeys(r);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(t) {
    if (this.selectionMode === "none" || (t = this.getKey(t), t == null)) return;
    let r = this.canSelectItem(t) ? new Nt([
      t
    ], t, t) : new Nt();
    this.state.setSelectedKeys(r);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(t) {
    if (this.selectionMode === "none") return;
    let r = new Nt();
    for (let n of t)
      if (n = this.getKey(n), n != null && (r.add(n), this.selectionMode === "single"))
        break;
    this.state.setSelectedKeys(r);
  }
  getSelectAllKeys() {
    let t = [], r = (n) => {
      for (; n; ) {
        if (this.canSelectItem(n)) {
          let i = this.collection.getItem(n);
          i.type === "item" && t.push(n), i.hasChildNodes && (this.allowsCellSelection || i.type !== "item") && r(pS(Zs(i, this.collection)).key);
        }
        n = this.collection.getKeyAfter(n);
      }
    };
    return r(this.collection.getFirstKey()), t;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    !this.isSelectAll && this.selectionMode === "multiple" && this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    !this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0) && this.state.setSelectedKeys(new Nt());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    this.isSelectAll ? this.clearSelection() : this.selectAll();
  }
  select(t, r) {
    this.selectionMode !== "none" && (this.selectionMode === "single" ? this.isSelected(t) && !this.disallowEmptySelection ? this.toggleSelection(t) : this.replaceSelection(t) : this.selectionBehavior === "toggle" || r && (r.pointerType === "touch" || r.pointerType === "virtual") ? this.toggleSelection(t) : this.replaceSelection(t));
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(t) {
    if (t === this.state.selectedKeys) return !0;
    let r = this.selectedKeys;
    if (t.size !== r.size) return !1;
    for (let n of t)
      if (!r.has(n)) return !1;
    for (let n of r)
      if (!t.has(n)) return !1;
    return !0;
  }
  canSelectItem(t) {
    var r;
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(t)) return !1;
    let n = this.collection.getItem(t);
    return !(!n || !(n == null || (r = n.props) === null || r === void 0) && r.isDisabled || n.type === "cell" && !this.allowsCellSelection);
  }
  isDisabled(t) {
    var r, n;
    return this.state.disabledBehavior === "all" && (this.state.disabledKeys.has(t) || !!(!((n = this.collection.getItem(t)) === null || n === void 0 || (r = n.props) === null || r === void 0) && r.isDisabled));
  }
  isLink(t) {
    var r, n;
    return !!(!((n = this.collection.getItem(t)) === null || n === void 0 || (r = n.props) === null || r === void 0) && r.href);
  }
  getItemProps(t) {
    var r;
    return (r = this.collection.getItem(t)) === null || r === void 0 ? void 0 : r.props;
  }
  constructor(t, r, n) {
    this.collection = t, this.state = r;
    var i;
    this.allowsCellSelection = (i = n == null ? void 0 : n.allowsCellSelection) !== null && i !== void 0 ? i : !1, this._isSelectAll = null;
  }
}
function h3(e) {
  let { filter: t } = e, r = t7(e), n = G(() => e.disabledKeys ? new Set(e.disabledKeys) : /* @__PURE__ */ new Set(), [
    e.disabledKeys
  ]), i = be((l) => t ? new vc(t(l)) : new vc(l), [
    t
  ]), a = G(() => ({
    suppressTextValueWarning: e.suppressTextValueWarning
  }), [
    e.suppressTextValueWarning
  ]), o = hS(e, i, a), s = G(() => new r7(o, r), [
    o,
    r
  ]);
  const u = q(null);
  return oe(() => {
    if (r.focusedKey != null && !o.getItem(r.focusedKey)) {
      const l = u.current.getItem(r.focusedKey), c = [
        ...u.current.getKeys()
      ].map((v) => {
        const g = u.current.getItem(v);
        return g.type === "item" ? g : null;
      }).filter((v) => v !== null), d = [
        ...o.getKeys()
      ].map((v) => {
        const g = o.getItem(v);
        return g.type === "item" ? g : null;
      }).filter((v) => v !== null), f = c.length - d.length;
      let h = Math.min(f > 1 ? Math.max(l.index - f + 1, 0) : l.index, d.length - 1), p;
      for (; h >= 0; ) {
        if (!s.isDisabled(d[h].key)) {
          p = d[h];
          break;
        }
        h < d.length - 1 ? h++ : (h > l.index && (h = l.index), h--);
      }
      r.setFocusedKey(p ? p.key : null);
    }
    u.current = o;
  }, [
    o,
    s,
    r,
    r.focusedKey
  ]), {
    collection: o,
    disabledKeys: n,
    selectionManager: s
  };
}
function p3(e) {
  var t;
  let [r, n] = tr(e.selectedKey, (t = e.defaultSelectedKey) !== null && t !== void 0 ? t : null, e.onSelectionChange), i = G(() => r != null ? [
    r
  ] : [], [
    r
  ]), { collection: a, disabledKeys: o, selectionManager: s } = h3({
    ...e,
    selectionMode: "single",
    disallowEmptySelection: !0,
    allowDuplicateSelectionEvents: !0,
    selectedKeys: i,
    onSelectionChange: (l) => {
      var c;
      let d = (c = l.values().next().value) !== null && c !== void 0 ? c : null;
      d === r && e.onSelectionChange && e.onSelectionChange(d), n(d);
    }
  }), u = r != null ? a.getItem(r) : null;
  return {
    collection: a,
    disabledKeys: o,
    selectionManager: s,
    selectedKey: r,
    setSelectedKey: n,
    selectedItem: u
  };
}
function gi(e) {
  let [t, r] = tr(e.isOpen, e.defaultOpen || !1, e.onOpenChange);
  const n = be(() => {
    r(!0);
  }, [
    r
  ]), i = be(() => {
    r(!1);
  }, [
    r
  ]), a = be(() => {
    r(!t);
  }, [
    r,
    t
  ]);
  return {
    isOpen: t,
    setOpen: r,
    open: n,
    close: i,
    toggle: a
  };
}
function n7(e) {
  var t, r;
  let { defaultFilter: n, menuTrigger: i = "input", allowsEmptyCollection: a = !1, allowsCustomValue: o, shouldCloseOnBlur: s = !0 } = e, [u, l] = ee(!1), [c, d] = ee(!1), [f, h] = ee(null), p = (I) => {
    e.onSelectionChange && e.onSelectionChange(I), I === m && (xe(), ae());
  };
  var v;
  let { collection: g, selectionManager: $, selectedKey: m, setSelectedKey: b, selectedItem: D, disabledKeys: S } = p3({
    ...e,
    onSelectionChange: p,
    items: (v = e.items) !== null && v !== void 0 ? v : e.defaultItems
  });
  var P, B;
  let [y, _] = tr(e.inputValue, (B = (P = e.defaultInputValue) !== null && P !== void 0 ? P : (t = g.getItem(m)) === null || t === void 0 ? void 0 : t.textValue) !== null && B !== void 0 ? B : "", e.onInputChange), w = g, E = G(() => (
    // No default filter if items are controlled.
    e.items != null || !n ? g : i7(g, y, n)
  ), [
    g,
    y,
    n,
    e.items
  ]), [k, C] = ee(E), T = q("focus"), O = gi({
    ...e,
    onOpenChange: (I) => {
      e.onOpenChange && e.onOpenChange(I, I ? T.current : void 0), $.setFocused(I), I || $.setFocusedKey(null);
    },
    isOpen: void 0,
    defaultOpen: void 0
  }), x = (I = null, N) => {
    let W = N === "manual" || N === "focus" && i === "focus";
    (a || E.size > 0 || W && w.size > 0 || e.items) && (W && !O.isOpen && e.items === void 0 && l(!0), T.current = N, h(I), O.open());
  }, U = (I = null, N) => {
    let W = N === "manual" || N === "focus" && i === "focus";
    !(a || E.size > 0 || W && w.size > 0 || e.items) && !O.isOpen || (W && !O.isOpen && e.items === void 0 && l(!0), O.isOpen || (T.current = N), j(I));
  }, K = be(() => {
    C(u ? w : E);
  }, [
    u,
    w,
    E
  ]), j = be((I = null) => {
    O.isOpen && K(), h(I), O.toggle();
  }, [
    O,
    K
  ]), ae = be(() => {
    O.isOpen && (K(), O.close());
  }, [
    O,
    K
  ]), [ne, me] = ee(y), xe = () => {
    var I, N;
    let W = (N = (I = g.getItem(m)) === null || I === void 0 ? void 0 : I.textValue) !== null && N !== void 0 ? N : "";
    me(W), _(W);
  };
  var _e, Fe;
  let V = q((Fe = (_e = e.selectedKey) !== null && _e !== void 0 ? _e : e.defaultSelectedKey) !== null && Fe !== void 0 ? Fe : null);
  var ie;
  let we = q((ie = (r = g.getItem(m)) === null || r === void 0 ? void 0 : r.textValue) !== null && ie !== void 0 ? ie : "");
  oe(() => {
    var I;
    c && (E.size > 0 || a) && !O.isOpen && y !== ne && i !== "manual" && x(null, "input"), !u && !a && O.isOpen && E.size === 0 && ae(), m != null && m !== V.current && ae(), y !== ne && ($.setFocusedKey(null), l(!1), y === "" && (e.inputValue === void 0 || e.selectedKey === void 0) && b(null)), m !== V.current && (e.inputValue === void 0 || e.selectedKey === void 0) ? xe() : ne !== y && me(y);
    var N;
    let W = (N = (I = g.getItem(m)) === null || I === void 0 ? void 0 : I.textValue) !== null && N !== void 0 ? N : "";
    !c && m != null && e.inputValue === void 0 && m === V.current && we.current !== W && (me(W), _(W)), V.current = m, we.current = W;
  });
  let ze = Ma({
    ...e,
    value: G(() => ({
      inputValue: y,
      selectedKey: m
    }), [
      y,
      m
    ])
  }), He = () => {
    o && m == null ? Sr() : Zr();
  }, Sr = () => {
    V.current = null, b(null), ae();
  }, Zr = () => {
    if (e.selectedKey !== void 0 && e.inputValue !== void 0) {
      var I;
      e.onSelectionChange(m);
      var N;
      let W = (N = (I = g.getItem(m)) === null || I === void 0 ? void 0 : I.textValue) !== null && N !== void 0 ? N : "";
      me(W), ae();
    } else
      xe(), ae();
  };
  const Sn = () => {
    if (o) {
      var I, N;
      const W = (N = (I = g.getItem(m)) === null || I === void 0 ? void 0 : I.textValue) !== null && N !== void 0 ? N : "";
      y === W ? Zr() : Sr();
    } else
      Zr();
  };
  let sf = () => {
    O.isOpen && $.focusedKey != null ? m === $.focusedKey ? Zr() : b($.focusedKey) : Sn();
  }, cu = q(y), uf = (I) => {
    I ? (cu.current = y, i === "focus" && x(null, "focus")) : (s && Sn(), y !== cu.current && ze.commitValidation()), d(I);
  }, F = G(() => O.isOpen ? u ? w : E : k, [
    O.isOpen,
    w,
    E,
    u,
    k
  ]);
  return {
    ...ze,
    ...O,
    focusStrategy: f,
    toggle: U,
    open: x,
    close: Sn,
    selectionManager: $,
    selectedKey: m,
    setSelectedKey: b,
    disabledKeys: S,
    isFocused: c,
    setFocused: uf,
    selectedItem: D,
    collection: F,
    inputValue: y,
    setInputValue: _,
    commit: sf,
    revert: He
  };
}
function i7(e, t, r) {
  return new vc(m3(e, e, t, r));
}
function m3(e, t, r, n) {
  let i = [];
  for (let a of t)
    if (a.type === "section" && a.hasChildNodes) {
      let o = m3(e, Zs(a, e), r, n);
      [
        ...o
      ].some((s) => s.type === "item") && i.push({
        ...a,
        childNodes: o
      });
    } else a.type === "item" && n(a.textValue, r) ? i.push({
      ...a
    }) : a.type !== "item" && i.push({
      ...a
    });
  return i;
}
var v3 = {};
v3 = {
  rangeOverflow: (e) => `يجب أن تكون القيمة ${e.maxValue} أو قبل ذلك.`,
  rangeReversed: "تاريخ البدء يجب أن يكون قبل تاريخ الانتهاء.",
  rangeUnderflow: (e) => `يجب أن تكون القيمة ${e.minValue} أو بعد ذلك.`,
  unavailableDate: "البيانات المحددة غير متاحة."
};
var y3 = {};
y3 = {
  rangeOverflow: (e) => `Стойността трябва да е ${e.maxValue} или по-ранна.`,
  rangeReversed: "Началната дата трябва да е преди крайната.",
  rangeUnderflow: (e) => `Стойността трябва да е ${e.minValue} или по-късно.`,
  unavailableDate: "Избраната дата не е налична."
};
var g3 = {};
g3 = {
  rangeOverflow: (e) => `Hodnota musí být ${e.maxValue} nebo dřívější.`,
  rangeReversed: "Datum zahájení musí předcházet datu ukončení.",
  rangeUnderflow: (e) => `Hodnota musí být ${e.minValue} nebo pozdější.`,
  unavailableDate: "Vybrané datum není k dispozici."
};
var b3 = {};
b3 = {
  rangeOverflow: (e) => `Værdien skal være ${e.maxValue} eller tidligere.`,
  rangeReversed: "Startdatoen skal være før slutdatoen.",
  rangeUnderflow: (e) => `Værdien skal være ${e.minValue} eller nyere.`,
  unavailableDate: "Den valgte dato er ikke tilgængelig."
};
var $3 = {};
$3 = {
  rangeOverflow: (e) => `Der Wert muss ${e.maxValue} oder früher sein.`,
  rangeReversed: "Das Anfangsdatum muss vor dem Enddatum liegen.",
  rangeUnderflow: (e) => `Der Wert muss ${e.minValue} oder später sein.`,
  unavailableDate: "Das ausgewählte Datum ist nicht verfügbar."
};
var x3 = {};
x3 = {
  rangeOverflow: (e) => `Η τιμή πρέπει να είναι ${e.maxValue} ή παλαιότερη.`,
  rangeReversed: "Η ημερομηνία έναρξης πρέπει να είναι πριν από την ημερομηνία λήξης.",
  rangeUnderflow: (e) => `Η τιμή πρέπει να είναι ${e.minValue} ή μεταγενέστερη.`,
  unavailableDate: "Η επιλεγμένη ημερομηνία δεν είναι διαθέσιμη."
};
var D3 = {};
D3 = {
  rangeUnderflow: (e) => `Value must be ${e.minValue} or later.`,
  rangeOverflow: (e) => `Value must be ${e.maxValue} or earlier.`,
  rangeReversed: "Start date must be before end date.",
  unavailableDate: "Selected date unavailable."
};
var E3 = {};
E3 = {
  rangeOverflow: (e) => `El valor debe ser ${e.maxValue} o anterior.`,
  rangeReversed: "La fecha de inicio debe ser anterior a la fecha de finalización.",
  rangeUnderflow: (e) => `El valor debe ser ${e.minValue} o posterior.`,
  unavailableDate: "Fecha seleccionada no disponible."
};
var w3 = {};
w3 = {
  rangeOverflow: (e) => `Väärtus peab olema ${e.maxValue} või varasem.`,
  rangeReversed: "Alguskuupäev peab olema enne lõppkuupäeva.",
  rangeUnderflow: (e) => `Väärtus peab olema ${e.minValue} või hilisem.`,
  unavailableDate: "Valitud kuupäev pole saadaval."
};
var C3 = {};
C3 = {
  rangeOverflow: (e) => `Arvon on oltava ${e.maxValue} tai sitä aikaisempi.`,
  rangeReversed: "Aloituspäivän on oltava ennen lopetuspäivää.",
  rangeUnderflow: (e) => `Arvon on oltava ${e.minValue} tai sitä myöhäisempi.`,
  unavailableDate: "Valittu päivämäärä ei ole käytettävissä."
};
var S3 = {};
S3 = {
  rangeOverflow: (e) => `La valeur doit être ${e.maxValue} ou antérieure.`,
  rangeReversed: "La date de début doit être antérieure à la date de fin.",
  rangeUnderflow: (e) => `La valeur doit être ${e.minValue} ou ultérieure.`,
  unavailableDate: "La date sélectionnée n’est pas disponible."
};
var k3 = {};
k3 = {
  rangeOverflow: (e) => `הערך חייב להיות ${e.maxValue} או מוקדם יותר.`,
  rangeReversed: "תאריך ההתחלה חייב להיות לפני תאריך הסיום.",
  rangeUnderflow: (e) => `הערך חייב להיות ${e.minValue} או מאוחר יותר.`,
  unavailableDate: "התאריך הנבחר אינו זמין."
};
var P3 = {};
P3 = {
  rangeOverflow: (e) => `Vrijednost mora biti ${e.maxValue} ili ranije.`,
  rangeReversed: "Datum početka mora biti prije datuma završetka.",
  rangeUnderflow: (e) => `Vrijednost mora biti ${e.minValue} ili kasnije.`,
  unavailableDate: "Odabrani datum nije dostupan."
};
var T3 = {};
T3 = {
  rangeOverflow: (e) => `Az értéknek ${e.maxValue} vagy korábbinak kell lennie.`,
  rangeReversed: "A kezdő dátumnak a befejező dátumnál korábbinak kell lennie.",
  rangeUnderflow: (e) => `Az értéknek ${e.minValue} vagy későbbinek kell lennie.`,
  unavailableDate: "A kiválasztott dátum nem érhető el."
};
var A3 = {};
A3 = {
  rangeOverflow: (e) => `Il valore deve essere ${e.maxValue} o precedente.`,
  rangeReversed: "La data di inizio deve essere antecedente alla data di fine.",
  rangeUnderflow: (e) => `Il valore deve essere ${e.minValue} o successivo.`,
  unavailableDate: "Data selezionata non disponibile."
};
var _3 = {};
_3 = {
  rangeOverflow: (e) => `値は ${e.maxValue} 以下にする必要があります。`,
  rangeReversed: "開始日は終了日より前にする必要があります。",
  rangeUnderflow: (e) => `値は ${e.minValue} 以上にする必要があります。`,
  unavailableDate: "選択した日付は使用できません。"
};
var F3 = {};
F3 = {
  rangeOverflow: (e) => `값은 ${e.maxValue} 이전이어야 합니다.`,
  rangeReversed: "시작일은 종료일 이전이어야 합니다.",
  rangeUnderflow: (e) => `값은 ${e.minValue} 이상이어야 합니다.`,
  unavailableDate: "선택한 날짜를 사용할 수 없습니다."
};
var O3 = {};
O3 = {
  rangeOverflow: (e) => `Reikšmė turi būti ${e.maxValue} arba ankstesnė.`,
  rangeReversed: "Pradžios data turi būti ankstesnė nei pabaigos data.",
  rangeUnderflow: (e) => `Reikšmė turi būti ${e.minValue} arba naujesnė.`,
  unavailableDate: "Pasirinkta data nepasiekiama."
};
var I3 = {};
I3 = {
  rangeOverflow: (e) => `Vērtībai ir jābūt ${e.maxValue} vai agrākai.`,
  rangeReversed: "Sākuma datumam ir jābūt pirms beigu datuma.",
  rangeUnderflow: (e) => `Vērtībai ir jābūt ${e.minValue} vai vēlākai.`,
  unavailableDate: "Atlasītais datums nav pieejams."
};
var R3 = {};
R3 = {
  rangeOverflow: (e) => `Verdien må være ${e.maxValue} eller tidligere.`,
  rangeReversed: "Startdatoen må være før sluttdatoen.",
  rangeUnderflow: (e) => `Verdien må være ${e.minValue} eller senere.`,
  unavailableDate: "Valgt dato utilgjengelig."
};
var B3 = {};
B3 = {
  rangeOverflow: (e) => `Waarde moet ${e.maxValue} of eerder zijn.`,
  rangeReversed: "De startdatum moet voor de einddatum liggen.",
  rangeUnderflow: (e) => `Waarde moet ${e.minValue} of later zijn.`,
  unavailableDate: "Geselecteerde datum niet beschikbaar."
};
var M3 = {};
M3 = {
  rangeOverflow: (e) => `Wartość musi mieć wartość ${e.maxValue} lub wcześniejszą.`,
  rangeReversed: "Data rozpoczęcia musi być wcześniejsza niż data zakończenia.",
  rangeUnderflow: (e) => `Wartość musi mieć wartość ${e.minValue} lub późniejszą.`,
  unavailableDate: "Wybrana data jest niedostępna."
};
var N3 = {};
N3 = {
  rangeOverflow: (e) => `O valor deve ser ${e.maxValue} ou anterior.`,
  rangeReversed: "A data inicial deve ser anterior à data final.",
  rangeUnderflow: (e) => `O valor deve ser ${e.minValue} ou posterior.`,
  unavailableDate: "Data selecionada indisponível."
};
var L3 = {};
L3 = {
  rangeOverflow: (e) => `O valor tem de ser ${e.maxValue} ou anterior.`,
  rangeReversed: "A data de início deve ser anterior à data de fim.",
  rangeUnderflow: (e) => `O valor tem de ser ${e.minValue} ou posterior.`,
  unavailableDate: "Data selecionada indisponível."
};
var V3 = {};
V3 = {
  rangeOverflow: (e) => `Valoarea trebuie să fie ${e.maxValue} sau anterioară.`,
  rangeReversed: "Data de început trebuie să fie anterioară datei de sfârșit.",
  rangeUnderflow: (e) => `Valoarea trebuie să fie ${e.minValue} sau ulterioară.`,
  unavailableDate: "Data selectată nu este disponibilă."
};
var j3 = {};
j3 = {
  rangeOverflow: (e) => `Значение должно быть не позже ${e.maxValue}.`,
  rangeReversed: "Дата начала должна предшествовать дате окончания.",
  rangeUnderflow: (e) => `Значение должно быть не раньше ${e.minValue}.`,
  unavailableDate: "Выбранная дата недоступна."
};
var z3 = {};
z3 = {
  rangeOverflow: (e) => `Hodnota musí byť ${e.maxValue} alebo skoršia.`,
  rangeReversed: "Dátum začiatku musí byť skorší ako dátum konca.",
  rangeUnderflow: (e) => `Hodnota musí byť ${e.minValue} alebo neskoršia.`,
  unavailableDate: "Vybratý dátum je nedostupný."
};
var K3 = {};
K3 = {
  rangeOverflow: (e) => `Vrednost mora biti ${e.maxValue} ali starejša.`,
  rangeReversed: "Začetni datum mora biti pred končnim datumom.",
  rangeUnderflow: (e) => `Vrednost mora biti ${e.minValue} ali novejša.`,
  unavailableDate: "Izbrani datum ni na voljo."
};
var U3 = {};
U3 = {
  rangeOverflow: (e) => `Vrednost mora da bude ${e.maxValue} ili starija.`,
  rangeReversed: "Datum početka mora biti pre datuma završetka.",
  rangeUnderflow: (e) => `Vrednost mora da bude ${e.minValue} ili novija.`,
  unavailableDate: "Izabrani datum nije dostupan."
};
var q3 = {};
q3 = {
  rangeOverflow: (e) => `Värdet måste vara ${e.maxValue} eller tidigare.`,
  rangeReversed: "Startdatumet måste vara före slutdatumet.",
  rangeUnderflow: (e) => `Värdet måste vara ${e.minValue} eller senare.`,
  unavailableDate: "Det valda datumet är inte tillgängligt."
};
var H3 = {};
H3 = {
  rangeOverflow: (e) => `Değer, ${e.maxValue} veya öncesi olmalıdır.`,
  rangeReversed: "Başlangıç tarihi bitiş tarihinden önce olmalıdır.",
  rangeUnderflow: (e) => `Değer, ${e.minValue} veya sonrası olmalıdır.`,
  unavailableDate: "Seçilen tarih kullanılamıyor."
};
var W3 = {};
W3 = {
  rangeOverflow: (e) => `Значення має бути не пізніше ${e.maxValue}.`,
  rangeReversed: "Дата початку має передувати даті завершення.",
  rangeUnderflow: (e) => `Значення має бути не раніше ${e.minValue}.`,
  unavailableDate: "Вибрана дата недоступна."
};
var Q3 = {};
Q3 = {
  rangeOverflow: (e) => `值必须是 ${e.maxValue} 或更早日期。`,
  rangeReversed: "开始日期必须早于结束日期。",
  rangeUnderflow: (e) => `值必须是 ${e.minValue} 或更晚日期。`,
  unavailableDate: "所选日期不可用。"
};
var G3 = {};
G3 = {
  rangeOverflow: (e) => `值必須是 ${e.maxValue} 或更早。`,
  rangeReversed: "開始日期必須在結束日期之前。",
  rangeUnderflow: (e) => `值必須是 ${e.minValue} 或更晚。`,
  unavailableDate: "所選日期無法使用。"
};
var Z3 = {};
Z3 = {
  "ar-AE": v3,
  "bg-BG": y3,
  "cs-CZ": g3,
  "da-DK": b3,
  "de-DE": $3,
  "el-GR": x3,
  "en-US": D3,
  "es-ES": E3,
  "et-EE": w3,
  "fi-FI": C3,
  "fr-FR": S3,
  "he-IL": k3,
  "hr-HR": P3,
  "hu-HU": T3,
  "it-IT": A3,
  "ja-JP": _3,
  "ko-KR": F3,
  "lt-LT": O3,
  "lv-LV": I3,
  "nb-NO": R3,
  "nl-NL": B3,
  "pl-PL": M3,
  "pt-BR": N3,
  "pt-PT": L3,
  "ro-RO": V3,
  "ru-RU": j3,
  "sk-SK": z3,
  "sl-SI": K3,
  "sr-SP": U3,
  "sv-SE": q3,
  "tr-TR": H3,
  "uk-UA": W3,
  "zh-CN": Q3,
  "zh-TW": G3
};
function a7(e) {
  return e && e.__esModule ? e.default : e;
}
const Y3 = new Qr(a7(Z3));
function J3() {
  return typeof navigator < "u" && (navigator.language || navigator.userLanguage) || "en-US";
}
function yc(e, t, r, n, i) {
  let a = e != null && r != null && e.compare(r) > 0, o = e != null && t != null && e.compare(t) < 0, s = e != null && (n == null ? void 0 : n(e)) || !1, u = a || o || s, l = [];
  if (u) {
    let c = J3(), d = Qr.getGlobalDictionaryForPackage("@react-stately/datepicker") || Y3, f = new cy(c, d), h = new Yt(c, Ea({}, i)), p = h.resolvedOptions().timeZone;
    o && l.push(f.format("rangeUnderflow", {
      minValue: h.format(t.toDate(p))
    })), a && l.push(f.format("rangeOverflow", {
      maxValue: h.format(r.toDate(p))
    })), s && l.push(f.format("unavailableDate"));
  }
  return {
    isInvalid: u,
    validationErrors: l,
    validationDetails: {
      badInput: s,
      customError: !1,
      patternMismatch: !1,
      rangeOverflow: a,
      rangeUnderflow: o,
      stepMismatch: !1,
      tooLong: !1,
      tooShort: !1,
      typeMismatch: !1,
      valueMissing: !1,
      valid: !u
    }
  };
}
function o7(e, t, r, n, i) {
  let a = yc(e == null ? void 0 : e.start, t, r, n, i), o = yc(e == null ? void 0 : e.end, t, r, n, i), s = es(a, o);
  if (e.end != null && e.start != null && e.end.compare(e.start) < 0) {
    let u = Qr.getGlobalDictionaryForPackage("@react-stately/datepicker") || Y3;
    s = es(s, {
      isInvalid: !0,
      validationErrors: [
        u.getStringForLocale("rangeReversed", J3())
      ],
      validationDetails: {
        ...Hs,
        rangeUnderflow: !0,
        rangeOverflow: !0,
        valid: !1
      }
    });
  }
  return s;
}
const s7 = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "2-digit",
  second: "2-digit"
}, u7 = {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit"
};
function Ea(e, t) {
  e = {
    ...t.shouldForceLeadingZeros ? u7 : s7,
    ...e
  };
  let n = t.granularity || "minute", i = Object.keys(e);
  var a;
  let o = i.indexOf((a = t.maxGranularity) !== null && a !== void 0 ? a : "year");
  o < 0 && (o = 0);
  let s = i.indexOf(n);
  if (s < 0 && (s = 2), o > s) throw new Error("maxGranularity must be greater than granularity");
  let u = i.slice(o, s + 1).reduce((c, d) => (c[d] = e[d], c), {});
  return t.hourCycle != null && (u.hour12 = t.hourCycle === 12), u.timeZone = t.timeZone || "UTC", (n === "hour" || n === "minute" || n === "second") && t.timeZone && !t.hideTimeZone && (u.timeZoneName = "short"), t.showEra && o === 0 && (u.era = "short"), u;
}
function co(e) {
  return e && "hour" in e ? e : new Od();
}
function X3(e, t) {
  if (e === null) return null;
  if (e)
    return Ve(e, t);
}
function Oi(e, t, r, n) {
  if (e) return X3(e, r);
  let i = Ve(hy(n).set({
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  }), r);
  return t === "year" || t === "month" || t === "day" ? bt(i) : n ? i : $r(i);
}
function e1(e, t) {
  let r = e && "timeZone" in e ? e.timeZone : void 0, n = e && "minute" in e ? "minute" : "day";
  if (e && t && !(t in e)) throw new Error("Invalid granularity " + t + " for value " + e.toString());
  let [i, a] = ee([
    n,
    r
  ]);
  e && (i[0] !== n || i[1] !== r) && a([
    n,
    r
  ]), t || (t = e ? n : i[0]);
  let o = e ? r : i[1];
  return [
    t,
    o
  ];
}
const l7 = new Qr({
  ach: {
    year: "mwaka",
    month: "dwe",
    day: "nino"
  },
  af: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  am: {
    year: "ዓዓዓዓ",
    month: "ሚሜ",
    day: "ቀቀ"
  },
  an: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ar: {
    year: "سنة",
    month: "شهر",
    day: "يوم"
  },
  ast: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  az: {
    year: "iiii",
    month: "aa",
    day: "gg"
  },
  be: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bg: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bn: {
    year: "yyyy",
    month: "মিমি",
    day: "dd"
  },
  br: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  bs: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  ca: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  cak: {
    year: "jjjj",
    month: "ii",
    day: "q'q'"
  },
  ckb: {
    year: "ساڵ",
    month: "مانگ",
    day: "ڕۆژ"
  },
  cs: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  cy: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  da: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  de: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  dsb: {
    year: "llll",
    month: "mm",
    day: "źź"
  },
  el: {
    year: "εεεε",
    month: "μμ",
    day: "ηη"
  },
  en: {
    year: "yyyy",
    month: "mm",
    day: "dd"
  },
  eo: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  es: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  et: {
    year: "aaaa",
    month: "kk",
    day: "pp"
  },
  eu: {
    year: "uuuu",
    month: "hh",
    day: "ee"
  },
  fa: {
    year: "سال",
    month: "ماه",
    day: "روز"
  },
  ff: {
    year: "hhhh",
    month: "ll",
    day: "ññ"
  },
  fi: {
    year: "vvvv",
    month: "kk",
    day: "pp"
  },
  fr: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  fy: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  ga: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gd: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gl: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  he: {
    year: "שנה",
    month: "חודש",
    day: "יום"
  },
  hr: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  hsb: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  hu: {
    year: "éééé",
    month: "hh",
    day: "nn"
  },
  ia: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  id: {
    year: "tttt",
    month: "bb",
    day: "hh"
  },
  it: {
    year: "aaaa",
    month: "mm",
    day: "gg"
  },
  ja: {
    year: " 年 ",
    month: "月",
    day: "日"
  },
  ka: {
    year: "წწწწ",
    month: "თთ",
    day: "რრ"
  },
  kk: {
    year: "жжжж",
    month: "аа",
    day: "кк"
  },
  kn: {
    year: "ವವವವ",
    month: "ಮಿಮೀ",
    day: "ದಿದಿ"
  },
  ko: {
    year: "연도",
    month: "월",
    day: "일"
  },
  lb: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  lo: {
    year: "ປປປປ",
    month: "ດດ",
    day: "ວວ"
  },
  lt: {
    year: "mmmm",
    month: "mm",
    day: "dd"
  },
  lv: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  meh: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ml: {
    year: "വർഷം",
    month: "മാസം",
    day: "തീയതി"
  },
  ms: {
    year: "tttt",
    month: "mm",
    day: "hh"
  },
  nl: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  nn: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  no: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  oc: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  pl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  pt: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  rm: {
    year: "oooo",
    month: "mm",
    day: "dd"
  },
  ro: {
    year: "aaaa",
    month: "ll",
    day: "zz"
  },
  ru: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sc: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  scn: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  sk: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  sl: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  sr: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sv: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  szl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  tg: {
    year: "сссс",
    month: "мм",
    day: "рр"
  },
  th: {
    year: "ปปปป",
    month: "ดด",
    day: "วว"
  },
  tr: {
    year: "yyyy",
    month: "aa",
    day: "gg"
  },
  uk: {
    year: "рррр",
    month: "мм",
    day: "дд"
  },
  "zh-CN": {
    year: "年",
    month: "月",
    day: "日"
  },
  "zh-TW": {
    year: "年",
    month: "月",
    day: "日"
  }
}, "en");
function c7(e, t, r) {
  return e === "era" || e === "dayPeriod" ? t : e === "year" || e === "month" || e === "day" ? l7.getStringForLocale(e, r) : "––";
}
const fo = {
  year: !0,
  month: !0,
  day: !0,
  hour: !0,
  minute: !0,
  second: !0,
  dayPeriod: !0,
  era: !0
}, xp = {
  year: 5,
  month: 2,
  day: 7,
  hour: 2,
  minute: 15,
  second: 15
}, d7 = {
  dayperiod: "dayPeriod"
};
function f7(e) {
  let { locale: t, createCalendar: r, hideTimeZone: n, isDisabled: i, isReadOnly: a, isRequired: o, minValue: s, maxValue: u, isDateUnavailable: l } = e, c = e.value || e.defaultValue || e.placeholderValue, [d, f] = e1(c, e.granularity), h = f || "UTC";
  if (c && !(d in c)) throw new Error("Invalid granularity " + d + " for value " + c.toString());
  let p = G(() => new Yt(t), [
    t
  ]), v = G(() => r(p.resolvedOptions().calendar), [
    r,
    p
  ]), [g, $] = tr(e.value, e.defaultValue, e.onChange), m = G(() => X3(g, v), [
    g,
    v
  ]), [b, D] = ee(() => Oi(e.placeholderValue, d, v, f)), S = m || b, P = v.identifier === "gregory" && S.era === "BC", B = G(() => {
    var V;
    return {
      granularity: d,
      maxGranularity: (V = e.maxGranularity) !== null && V !== void 0 ? V : "year",
      timeZone: f,
      hideTimeZone: n,
      hourCycle: e.hourCycle,
      showEra: P,
      shouldForceLeadingZeros: e.shouldForceLeadingZeros
    };
  }, [
    e.maxGranularity,
    d,
    e.hourCycle,
    e.shouldForceLeadingZeros,
    f,
    n,
    P
  ]), y = G(() => Ea({}, B), [
    B
  ]), _ = G(() => new Yt(t, y), [
    t,
    y
  ]), w = G(() => _.resolvedOptions(), [
    _
  ]), E = G(() => _.formatToParts(/* @__PURE__ */ new Date()).filter((V) => fo[V.type]).reduce((V, ie) => (V[ie.type] = !0, V), {}), [
    _
  ]), [k, C] = ee(() => e.value || e.defaultValue ? {
    ...E
  } : {}), T = q(), L = q(v.identifier);
  oe(() => {
    v.identifier !== L.current && (L.current = v.identifier, D((V) => Object.keys(k).length > 0 ? Ve(V, v) : Oi(e.placeholderValue, d, v, f)));
  }, [
    v,
    d,
    k,
    f,
    e.placeholderValue
  ]), g && Object.keys(k).length < Object.keys(E).length && (k = {
    ...E
  }, C(k)), g == null && Object.keys(k).length === Object.keys(E).length && (k = {}, C(k), D(Oi(e.placeholderValue, d, v, f)));
  let O = m && Object.keys(k).length >= Object.keys(E).length ? m : b, x = (V) => {
    if (e.isDisabled || e.isReadOnly) return;
    let ie = Object.keys(k), we = Object.keys(E);
    V == null ? ($(null), D(Oi(e.placeholderValue, d, v, f)), C({})) : ie.length >= we.length || ie.length === we.length - 1 && E.dayPeriod && !k.dayPeriod && T.current !== "dayPeriod" ? (V = Ve(V, (c == null ? void 0 : c.calendar) || new $t()), $(V)) : D(V), T.current = null;
  }, U = G(() => O.toDate(h), [
    O,
    h
  ]), K = G(() => _.formatToParts(U).map((V) => {
    let ie = fo[V.type];
    V.type === "era" && v.getEras().length === 1 && (ie = !1);
    let we = fo[V.type] && !k[V.type], ze = fo[V.type] ? c7(V.type, V.value, t) : null;
    return {
      type: d7[V.type] || V.type,
      text: we ? ze : V.value,
      ...h7(O, V.type, w),
      isPlaceholder: we,
      placeholder: ze,
      isEditable: ie
    };
  }), [
    U,
    k,
    _,
    w,
    O,
    v,
    t
  ]);
  E.era && k.year && !k.era ? (k.era = !0, C({
    ...k
  })) : !E.era && k.era && (delete k.era, C({
    ...k
  }));
  let j = (V) => {
    k[V] = !0, V === "year" && E.era && (k.era = !0), C({
      ...k
    });
  }, ae = (V, ie) => {
    if (k[V])
      x(p7(O, V, ie, w));
    else {
      j(V);
      let we = Object.keys(k), ze = Object.keys(E);
      (we.length >= ze.length || we.length === ze.length - 1 && E.dayPeriod && !k.dayPeriod) && x(O);
    }
  }, ne = G(() => yc(g, s, u, l, B), [
    g,
    s,
    u,
    l,
    B
  ]), me = Ma({
    ...e,
    value: g,
    builtinValidation: ne
  }), xe = me.displayValidation.isInvalid, _e = e.validationState || (xe ? "invalid" : null);
  var Fe;
  return {
    ...me,
    value: m,
    dateValue: U,
    calendar: v,
    setValue: x,
    segments: K,
    dateFormatter: _,
    validationState: _e,
    isInvalid: xe,
    granularity: d,
    maxGranularity: (Fe = e.maxGranularity) !== null && Fe !== void 0 ? Fe : "year",
    isDisabled: i,
    isReadOnly: a,
    isRequired: o,
    increment(V) {
      ae(V, 1);
    },
    decrement(V) {
      ae(V, -1);
    },
    incrementPage(V) {
      ae(V, xp[V] || 1);
    },
    decrementPage(V) {
      ae(V, -(xp[V] || 1));
    },
    setSegment(V, ie) {
      j(V), x(m7(O, V, ie, w));
    },
    confirmPlaceholder() {
      if (e.isDisabled || e.isReadOnly) return;
      let V = Object.keys(k), ie = Object.keys(E);
      V.length === ie.length - 1 && E.dayPeriod && !k.dayPeriod && (k = {
        ...E
      }, C(k), x(O.copy()));
    },
    clearSegment(V) {
      delete k[V], T.current = V, C({
        ...k
      });
      let ie = Oi(e.placeholderValue, d, v, f), we = O;
      if (V === "dayPeriod" && "hour" in O && "hour" in ie) {
        let ze = O.hour >= 12, He = ie.hour >= 12;
        ze && !He ? we = O.set({
          hour: O.hour - 12
        }) : !ze && He && (we = O.set({
          hour: O.hour + 12
        }));
      } else V in O && (we = O.set({
        [V]: ie[V]
      }));
      $(null), x(we);
    },
    formatValue(V) {
      if (!m) return "";
      let ie = Ea(V, B);
      return new Yt(t, ie).format(U);
    }
  };
}
function h7(e, t, r) {
  switch (t) {
    case "era": {
      let n = e.calendar.getEras();
      return {
        value: n.indexOf(e.era),
        minValue: 0,
        maxValue: n.length - 1
      };
    }
    case "year":
      return {
        value: e.year,
        minValue: 1,
        maxValue: e.calendar.getYearsInEra(e)
      };
    case "month":
      return {
        value: e.month,
        minValue: S6(e),
        maxValue: e.calendar.getMonthsInYear(e)
      };
    case "day":
      return {
        value: e.day,
        minValue: k6(e),
        maxValue: e.calendar.getDaysInMonth(e)
      };
  }
  if ("hour" in e) switch (t) {
    case "dayPeriod":
      return {
        value: e.hour >= 12 ? 12 : 0,
        minValue: 0,
        maxValue: 12
      };
    case "hour":
      if (r.hour12) {
        let n = e.hour >= 12;
        return {
          value: e.hour,
          minValue: n ? 12 : 0,
          maxValue: n ? 23 : 11
        };
      }
      return {
        value: e.hour,
        minValue: 0,
        maxValue: 23
      };
    case "minute":
      return {
        value: e.minute,
        minValue: 0,
        maxValue: 59
      };
    case "second":
      return {
        value: e.second,
        minValue: 0,
        maxValue: 59
      };
  }
  return {};
}
function p7(e, t, r, n) {
  switch (t) {
    case "era":
    case "year":
    case "month":
    case "day":
      return e.cycle(t, r, {
        round: t === "year"
      });
  }
  if ("hour" in e) switch (t) {
    case "dayPeriod": {
      let i = e.hour, a = i >= 12;
      return e.set({
        hour: a ? i - 12 : i + 12
      });
    }
    case "hour":
    case "minute":
    case "second":
      return e.cycle(t, r, {
        round: t !== "hour",
        hourCycle: n.hour12 ? 12 : 24
      });
  }
}
function m7(e, t, r, n) {
  switch (t) {
    case "day":
    case "month":
    case "year":
    case "era":
      return e.set({
        [t]: r
      });
  }
  if ("hour" in e) switch (t) {
    case "dayPeriod": {
      let i = e.hour, a = i >= 12;
      return r >= 12 === a ? e : e.set({
        hour: a ? i - 12 : i + 12
      });
    }
    case "hour":
      if (n.hour12) {
        let a = e.hour >= 12;
        !a && r === 12 && (r = 0), a && r < 12 && (r += 12);
      }
    case "minute":
    case "second":
      return e.set({
        [t]: r
      });
  }
}
function v7(e) {
  var t, r;
  let n = gi(e), [i, a] = tr(e.value, e.defaultValue || null, e.onChange), [o, s] = ee(() => i || {
    start: null,
    end: null
  });
  i == null && o.start && o.end && (o = {
    start: null,
    end: null
  }, s(o));
  let u = i || o, l = (O) => {
    s(O || {
      start: null,
      end: null
    }), O != null && O.start && O.end ? a(O) : a(null);
  }, c = (u == null ? void 0 : u.start) || (u == null ? void 0 : u.end) || e.placeholderValue, [d, f] = e1(c, e.granularity), h = d === "hour" || d === "minute" || d === "second";
  var p;
  let v = (p = e.shouldCloseOnSelect) !== null && p !== void 0 ? p : !0, [g, $] = ee(null), [m, b] = ee(null);
  u && u.start && u.end && (g = u, "hour" in u.start && (m = u));
  let D = (O, x) => {
    l({
      start: "timeZone" in x.start ? x.start.set(bt(O.start)) : $r(O.start, x.start),
      end: "timeZone" in x.end ? x.end.set(bt(O.end)) : $r(O.end, x.end)
    }), $(null), b(null), C.commitValidation();
  }, S = (O) => {
    let x = typeof v == "function" ? v() : v;
    h ? x || O.start && O.end && (m != null && m.start) && (m != null && m.end) ? D(O, {
      start: (m == null ? void 0 : m.start) || co(e.placeholderValue),
      end: (m == null ? void 0 : m.end) || co(e.placeholderValue)
    }) : $(O) : O.start && O.end ? (l(O), C.commitValidation()) : $(O), x && n.setOpen(!1);
  }, P = (O) => {
    g != null && g.start && (g != null && g.end) && O.start && O.end ? D(g, O) : b(O);
  }, B = (u == null || (t = u.start) === null || t === void 0 ? void 0 : t.calendar.identifier) === "gregory" && u.start.era === "BC" || (u == null || (r = u.end) === null || r === void 0 ? void 0 : r.calendar.identifier) === "gregory" && u.end.era === "BC", y = G(() => ({
    granularity: d,
    timeZone: f,
    hideTimeZone: e.hideTimeZone,
    hourCycle: e.hourCycle,
    shouldForceLeadingZeros: e.shouldForceLeadingZeros,
    showEra: B
  }), [
    d,
    e.hourCycle,
    e.shouldForceLeadingZeros,
    f,
    e.hideTimeZone,
    B
  ]), { minValue: _, maxValue: w, isDateUnavailable: E } = e, k = G(() => o7(u, _, w, E, y), [
    u,
    _,
    w,
    E,
    y
  ]), C = Ma({
    ...e,
    value: i,
    name: G(() => [
      e.startName,
      e.endName
    ], [
      e.startName,
      e.endName
    ]),
    builtinValidation: k
  }), T = C.displayValidation.isInvalid, L = e.validationState || (T ? "invalid" : null);
  return {
    ...C,
    value: u,
    setValue: l,
    dateRange: g,
    timeRange: m,
    granularity: d,
    hasTime: h,
    setDate(O, x) {
      S({
        ...g,
        [O]: x
      });
    },
    setTime(O, x) {
      P({
        ...m,
        [O]: x
      });
    },
    setDateTime(O, x) {
      l({
        ...u,
        [O]: x
      });
    },
    setDateRange: S,
    setTimeRange: P,
    ...n,
    setOpen(O) {
      !O && !(u != null && u.start && (u != null && u.end)) && (g != null && g.start) && (g != null && g.end) && h && D(g, {
        start: (m == null ? void 0 : m.start) || co(e.placeholderValue),
        end: (m == null ? void 0 : m.end) || co(e.placeholderValue)
      }), n.setOpen(O);
    },
    validationState: L,
    isInvalid: T,
    formatValue(O, x) {
      if (!u || !u.start || !u.end) return null;
      let U = "timeZone" in u.start ? u.start.timeZone : void 0, K = e.granularity || (u.start && "minute" in u.start ? "minute" : "day"), j = "timeZone" in u.end ? u.end.timeZone : void 0, ae = e.granularity || (u.end && "minute" in u.end ? "minute" : "day"), ne = Ea(x, {
        granularity: K,
        timeZone: U,
        hideTimeZone: e.hideTimeZone,
        hourCycle: e.hourCycle,
        showEra: u.start.calendar.identifier === "gregory" && u.start.era === "BC" || u.end.calendar.identifier === "gregory" && u.end.era === "BC"
      }), me = u.start.toDate(U || "UTC"), xe = u.end.toDate(j || "UTC"), _e = new Yt(O, ne), Fe;
      if (U === j && K === ae && u.start.compare(u.end) !== 0) {
        try {
          let V = _e.formatRangeToParts(me, xe), ie = -1;
          for (let He = 0; He < V.length; He++) {
            let Sr = V[He];
            if (Sr.source === "shared" && Sr.type === "literal") ie = He;
            else if (Sr.source === "endRange") break;
          }
          let we = "", ze = "";
          for (let He = 0; He < V.length; He++)
            He < ie ? we += V[He].value : He > ie && (ze += V[He].value);
          return {
            start: we,
            end: ze
          };
        } catch {
        }
        Fe = _e;
      } else {
        let V = Ea(x, {
          granularity: ae,
          timeZone: j,
          hideTimeZone: e.hideTimeZone,
          hourCycle: e.hourCycle
        });
        Fe = new Yt(O, V);
      }
      return {
        start: _e.format(me),
        end: Fe.format(xe)
      };
    }
  };
}
function y7(e) {
  let t = gi(e), [r, n] = ee(null), i = p3({
    ...e,
    onSelectionChange: (u) => {
      e.onSelectionChange != null && e.onSelectionChange(u), t.close(), a.commitValidation();
    }
  }), a = Ma({
    ...e,
    value: i.selectedKey
  }), [o, s] = ee(!1);
  return {
    ...a,
    ...i,
    ...t,
    focusStrategy: r,
    open(u = null) {
      i.collection.size !== 0 && (n(u), t.open());
    },
    toggle(u = null) {
      i.collection.size !== 0 && (n(u), t.toggle());
    },
    isFocused: o,
    setFocused: s
  };
}
const t1 = /* @__PURE__ */ de({}), Hd = /* @__PURE__ */ de(null), eu = /* @__PURE__ */ de(null);
function g7(e, t) {
  [e, t] = Ze(e, t, t1);
  let { locale: r } = ct(), n = XS({
    ...e,
    locale: r,
    createCalendar: My
  }), { calendarProps: i, prevButtonProps: a, nextButtonProps: o, errorMessageProps: s, title: u } = _C(e, n, t), l = it({
    ...e,
    values: {
      state: n,
      isDisabled: e.isDisabled || !1,
      isInvalid: n.isValueInvalid
    },
    defaultClassName: "react-aria-RangeCalendar"
  });
  return /* @__PURE__ */ A.createElement("div", {
    ...l,
    ...i,
    ref: t,
    slot: e.slot || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-invalid": n.isValueInvalid || void 0
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        Va,
        {
          slots: {
            previous: a,
            next: o
          }
        }
      ],
      [
        pd,
        {
          "aria-hidden": !0,
          level: 2,
          children: u
        }
      ],
      [
        eu,
        n
      ],
      [
        Gr,
        {
          slots: {
            errorMessage: s
          }
        }
      ]
    ]
  }, /* @__PURE__ */ A.createElement(sc, null, /* @__PURE__ */ A.createElement("h2", null, i["aria-label"])), l.children, /* @__PURE__ */ A.createElement(sc, null, /* @__PURE__ */ A.createElement("button", {
    "aria-label": o["aria-label"],
    disabled: o.isDisabled,
    onClick: () => n.focusNextPage(),
    tabIndex: -1
  }))));
}
const b7 = /* @__PURE__ */ Ee(g7), tu = /* @__PURE__ */ de(null);
function $7(e, t) {
  let r = le(Hd), n = le(eu), i = r ?? n, a = i.visibleRange.start;
  e.offset && (a = a.add(e.offset));
  let { gridProps: o, headerProps: s, weekDays: u } = FC({
    startDate: a,
    endDate: li(a),
    weekdayStyle: e.weekdayStyle
  }, i);
  var l;
  return /* @__PURE__ */ A.createElement(tu.Provider, {
    value: {
      headerProps: s,
      weekDays: u,
      startDate: a
    }
  }, /* @__PURE__ */ A.createElement("table", {
    ...Oe(e),
    ...o,
    ref: t,
    style: e.style,
    className: (l = e.className) !== null && l !== void 0 ? l : "react-aria-CalendarGrid"
  }, typeof e.children != "function" ? e.children : /* @__PURE__ */ A.createElement(A.Fragment, null, /* @__PURE__ */ A.createElement(r1, null, (c) => /* @__PURE__ */ A.createElement(n1, null, c)), /* @__PURE__ */ A.createElement(i1, null, e.children))));
}
const x7 = /* @__PURE__ */ Ee($7);
function D7(e, t) {
  let { children: r, style: n, className: i } = e, { headerProps: a, weekDays: o } = le(tu);
  return /* @__PURE__ */ A.createElement("thead", {
    ...Oe(e),
    ...a,
    ref: t,
    style: n,
    className: i || "react-aria-CalendarGridHeader"
  }, /* @__PURE__ */ A.createElement("tr", null, o.map((s, u) => /* @__PURE__ */ A.cloneElement(r(s), {
    key: u
  }))));
}
const r1 = /* @__PURE__ */ Ee(D7);
function E7(e, t) {
  let { children: r, style: n, className: i } = e;
  return /* @__PURE__ */ A.createElement("th", {
    ...Oe(e),
    ref: t,
    style: n,
    className: i || "react-aria-CalendarHeaderCell"
  }, r);
}
const n1 = /* @__PURE__ */ Ee(E7);
function w7(e, t) {
  let { children: r, style: n, className: i } = e, a = le(Hd), o = le(eu), s = a ?? o, { startDate: u } = le(tu), { locale: l } = ct(), c = A6(u, l);
  return /* @__PURE__ */ A.createElement("tbody", {
    ...Oe(e),
    ref: t,
    style: n,
    className: i || "react-aria-CalendarGridBody"
  }, [
    ...new Array(c).keys()
  ].map((d) => /* @__PURE__ */ A.createElement("tr", {
    key: d
  }, s.getDatesInWeek(d, u).map((f, h) => f ? /* @__PURE__ */ A.cloneElement(r(f), {
    key: h
  }) : /* @__PURE__ */ A.createElement("td", {
    key: h
  })))));
}
const i1 = /* @__PURE__ */ Ee(w7);
function C7({ date: e, ...t }, r) {
  let n = le(Hd), i = le(eu), a = n ?? i;
  var o;
  let { startDate: s } = (o = le(tu)) !== null && o !== void 0 ? o : {
    startDate: a.visibleRange.start
  }, u = q(null), { cellProps: l, buttonProps: c, ...d } = IC({
    date: e
  }, a, u), { hoverProps: f, isHovered: h } = En({
    ...t,
    isDisabled: d.isDisabled
  }), { focusProps: p, isFocusVisible: v } = Wr();
  v && (v = d.isFocused);
  let g = !E6(s, e), $ = !1, m = !1;
  "highlightedRange" in a && a.highlightedRange && ($ = et(e, a.highlightedRange.start), m = et(e, a.highlightedRange.end));
  let b = it({
    ...t,
    defaultChildren: d.formattedDate,
    defaultClassName: "react-aria-CalendarCell",
    values: {
      date: e,
      isHovered: h,
      isOutsideMonth: g,
      isFocusVisible: v,
      isSelectionStart: $,
      isSelectionEnd: m,
      ...d
    }
  }), D = {
    "data-focused": d.isFocused || void 0,
    "data-hovered": h || void 0,
    "data-pressed": d.isPressed || void 0,
    "data-unavailable": d.isUnavailable || void 0,
    "data-disabled": d.isDisabled || void 0,
    "data-focus-visible": v || void 0,
    "data-outside-visible-range": d.isOutsideVisibleRange || void 0,
    "data-outside-month": g || void 0,
    "data-selected": d.isSelected || void 0,
    "data-selection-start": $ || void 0,
    "data-selection-end": m || void 0,
    "data-invalid": d.isInvalid || void 0
  };
  return /* @__PURE__ */ A.createElement("td", {
    ...l,
    ref: r
  }, /* @__PURE__ */ A.createElement("div", {
    ...ye(Oe(t), c, p, f, D, b),
    ref: u
  }));
}
const S7 = /* @__PURE__ */ Ee(C7), bi = /* @__PURE__ */ de(null);
function k7(e, t) {
  let r = le(bi);
  return r != null && r.isInvalid ? /* @__PURE__ */ A.createElement(T7, {
    ...e,
    ref: t
  }) : null;
}
const P7 = /* @__PURE__ */ Ee(k7), T7 = /* @__PURE__ */ Ee((e, t) => {
  let r = le(bi), n = it({
    ...e,
    defaultClassName: "react-aria-FieldError",
    defaultChildren: r.validationErrors.length === 0 ? void 0 : r.validationErrors.join(" "),
    values: r
  });
  return n.children == null ? null : /* @__PURE__ */ A.createElement(qd, {
    slot: "errorMessage",
    ...n,
    ref: t
  });
}), di = /* @__PURE__ */ de(null);
function A7(e, t) {
  [e, t] = Ze(e, t, di);
  let { validationErrors: r, validationBehavior: n = "native", children: i, className: a, ...o } = e;
  return /* @__PURE__ */ A.createElement("form", {
    noValidate: n !== "native",
    ...o,
    ref: t,
    className: a || "react-aria-Form"
  }, /* @__PURE__ */ A.createElement(di.Provider, {
    value: {
      ...e,
      validationBehavior: n
    }
  }, /* @__PURE__ */ A.createElement(Cg.Provider, {
    value: r ?? {}
  }, i)));
}
const _7 = /* @__PURE__ */ Ee(A7), ja = /* @__PURE__ */ de({});
function F7(e, t) {
  [e, t] = Ze(e, t, ja);
  let { elementType: r = "label", ...n } = e;
  return /* @__PURE__ */ A.createElement(r, {
    className: "react-aria-Label",
    ...n,
    ref: t
  });
}
const O7 = /* @__PURE__ */ Ud(F7), ru = /* @__PURE__ */ de({});
let I7 = (e) => {
  let { onHoverStart: t, onHoverChange: r, onHoverEnd: n, ...i } = e;
  return i;
};
function R7(e, t) {
  [e, t] = Ze(e, t, ru);
  let { hoverProps: r, isHovered: n } = En(e), { isFocused: i, isFocusVisible: a, focusProps: o } = Wr({
    isTextInput: !0,
    autoFocus: e.autoFocus
  }), s = !!e["aria-invalid"] && e["aria-invalid"] !== "false", u = it({
    ...e,
    values: {
      isHovered: n,
      isFocused: i,
      isFocusVisible: a,
      isDisabled: e.disabled || !1,
      isInvalid: s
    },
    defaultClassName: "react-aria-Input"
  });
  return /* @__PURE__ */ A.createElement("input", {
    ...ye(I7(e), o, r),
    ...u,
    ref: t,
    "data-focused": i || void 0,
    "data-disabled": e.disabled || void 0,
    "data-hovered": n || void 0,
    "data-focus-visible": a || void 0,
    "data-invalid": s || void 0
  });
}
const a1 = /* @__PURE__ */ Ud(R7);
var o1 = {};
o1 = {
  colorSwatchPicker: "تغييرات الألوان",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "حدد عنصرًا",
  tableResizer: "أداة تغيير الحجم"
};
var s1 = {};
s1 = {
  colorSwatchPicker: "Цветови мостри",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Изберете предмет",
  tableResizer: "Преоразмерител"
};
var u1 = {};
u1 = {
  colorSwatchPicker: "Vzorky barev",
  dropzoneLabel: "Místo pro přetažení",
  selectPlaceholder: "Vyberte položku",
  tableResizer: "Změna velikosti"
};
var l1 = {};
l1 = {
  colorSwatchPicker: "Farveprøver",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Vælg et element",
  tableResizer: "Størrelsesændring"
};
var c1 = {};
c1 = {
  colorSwatchPicker: "Farbfelder",
  dropzoneLabel: "Ablegebereich",
  selectPlaceholder: "Element wählen",
  tableResizer: "Größenanpassung"
};
var d1 = {};
d1 = {
  colorSwatchPicker: "Χρωματικά δείγματα",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Επιλέξτε ένα αντικείμενο",
  tableResizer: "Αλλαγή μεγέθους"
};
var f1 = {};
f1 = {
  selectPlaceholder: "Select an item",
  tableResizer: "Resizer",
  dropzoneLabel: "DropZone",
  colorSwatchPicker: "Color swatches"
};
var h1 = {};
h1 = {
  colorSwatchPicker: "Muestras de colores",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Seleccionar un artículo",
  tableResizer: "Cambiador de tamaño"
};
var p1 = {};
p1 = {
  colorSwatchPicker: "Värvinäidised",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Valige üksus",
  tableResizer: "Suuruse muutja"
};
var m1 = {};
m1 = {
  colorSwatchPicker: "Värimallit",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Valitse kohde",
  tableResizer: "Koon muuttaja"
};
var v1 = {};
v1 = {
  colorSwatchPicker: "Échantillons de couleurs",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Sélectionner un élément",
  tableResizer: "Redimensionneur"
};
var y1 = {};
y1 = {
  colorSwatchPicker: "דוגמיות צבע",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "בחר פריט",
  tableResizer: "שינוי גודל"
};
var g1 = {};
g1 = {
  colorSwatchPicker: "Uzorci boja",
  dropzoneLabel: "Zona spuštanja",
  selectPlaceholder: "Odaberite stavku",
  tableResizer: "Promjena veličine"
};
var b1 = {};
b1 = {
  colorSwatchPicker: "Színtárak",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Válasszon ki egy elemet",
  tableResizer: "Átméretező"
};
var $1 = {};
$1 = {
  colorSwatchPicker: "Campioni di colore",
  dropzoneLabel: "Zona di rilascio",
  selectPlaceholder: "Seleziona un elemento",
  tableResizer: "Ridimensionamento"
};
var x1 = {};
x1 = {
  colorSwatchPicker: "カラースウォッチ",
  dropzoneLabel: "ドロップゾーン",
  selectPlaceholder: "項目を選択",
  tableResizer: "サイズ変更ツール"
};
var D1 = {};
D1 = {
  colorSwatchPicker: "색상 견본",
  dropzoneLabel: "드롭 영역",
  selectPlaceholder: "항목 선택",
  tableResizer: "크기 조정기"
};
var E1 = {};
E1 = {
  colorSwatchPicker: "Spalvų pavyzdžiai",
  dropzoneLabel: "„DropZone“",
  selectPlaceholder: "Pasirinkite elementą",
  tableResizer: "Dydžio keitiklis"
};
var w1 = {};
w1 = {
  colorSwatchPicker: "Krāsu paraugi",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Izvēlēties vienumu",
  tableResizer: "Izmēra mainītājs"
};
var C1 = {};
C1 = {
  colorSwatchPicker: "Fargekart",
  dropzoneLabel: "Droppsone",
  selectPlaceholder: "Velg et element",
  tableResizer: "Størrelsesendrer"
};
var S1 = {};
S1 = {
  colorSwatchPicker: "kleurstalen",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Selecteer een item",
  tableResizer: "Resizer"
};
var k1 = {};
k1 = {
  colorSwatchPicker: "Próbki kolorów",
  dropzoneLabel: "Strefa upuszczania",
  selectPlaceholder: "Wybierz element",
  tableResizer: "Zmiana rozmiaru"
};
var P1 = {};
P1 = {
  colorSwatchPicker: "Amostras de cores",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Selecione um item",
  tableResizer: "Redimensionador"
};
var T1 = {};
T1 = {
  colorSwatchPicker: "Amostras de cores",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Selecione um item",
  tableResizer: "Redimensionador"
};
var A1 = {};
A1 = {
  colorSwatchPicker: "Specimene de culoare",
  dropzoneLabel: "Zonă de plasare",
  selectPlaceholder: "Selectați un element",
  tableResizer: "Instrument de redimensionare"
};
var _1 = {};
_1 = {
  colorSwatchPicker: "Цветовые образцы",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Выберите элемент",
  tableResizer: "Средство изменения размера"
};
var F1 = {};
F1 = {
  colorSwatchPicker: "Vzorkovníky farieb",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Vyberte položku",
  tableResizer: "Nástroj na zmenu veľkosti"
};
var O1 = {};
O1 = {
  colorSwatchPicker: "Barvne palete",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Izberite element",
  tableResizer: "Spreminjanje velikosti"
};
var I1 = {};
I1 = {
  colorSwatchPicker: "Uzorci boje",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Izaberite stavku",
  tableResizer: "Promena veličine"
};
var R1 = {};
R1 = {
  colorSwatchPicker: "Färgrutor",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Välj en artikel",
  tableResizer: "Storleksändrare"
};
var B1 = {};
B1 = {
  colorSwatchPicker: "Renk örnekleri",
  dropzoneLabel: "Bırakma Bölgesi",
  selectPlaceholder: "Bir öğe seçin",
  tableResizer: "Yeniden boyutlandırıcı"
};
var M1 = {};
M1 = {
  colorSwatchPicker: "Зразки кольорів",
  dropzoneLabel: "DropZone",
  selectPlaceholder: "Виберіть елемент",
  tableResizer: "Засіб змінення розміру"
};
var N1 = {};
N1 = {
  colorSwatchPicker: "颜色色板",
  dropzoneLabel: "放置区域",
  selectPlaceholder: "选择一个项目",
  tableResizer: "尺寸调整器"
};
var L1 = {};
L1 = {
  colorSwatchPicker: "色票",
  dropzoneLabel: "放置區",
  selectPlaceholder: "選取項目",
  tableResizer: "大小調整器"
};
var V1 = {};
V1 = {
  "ar-AE": o1,
  "bg-BG": s1,
  "cs-CZ": u1,
  "da-DK": l1,
  "de-DE": c1,
  "el-GR": d1,
  "en-US": f1,
  "es-ES": h1,
  "et-EE": p1,
  "fi-FI": m1,
  "fr-FR": v1,
  "he-IL": y1,
  "hr-HR": g1,
  "hu-HU": b1,
  "it-IT": $1,
  "ja-JP": x1,
  "ko-KR": D1,
  "lt-LT": E1,
  "lv-LV": w1,
  "nb-NO": C1,
  "nl-NL": S1,
  "pl-PL": k1,
  "pt-BR": P1,
  "pt-PT": T1,
  "ro-RO": A1,
  "ru-RU": _1,
  "sk-SK": F1,
  "sl-SI": O1,
  "sr-SP": I1,
  "sv-SE": R1,
  "tr-TR": B1,
  "uk-UA": M1,
  "zh-CN": N1,
  "zh-TW": L1
};
const j1 = /* @__PURE__ */ de(null);
function B7(e, t) {
  let { render: r } = le(j1);
  return /* @__PURE__ */ A.createElement(A.Fragment, null, r(e, t));
}
const M7 = /* @__PURE__ */ Ee(B7), Wd = /* @__PURE__ */ de({}), N7 = /* @__PURE__ */ de({});
function L7(e, t) {
  let [r, n] = Ze(e, t, N7), i = s3("header", e, t);
  return i || /* @__PURE__ */ A.createElement("header", {
    className: "react-aria-Header",
    ...r,
    ref: n
  }, r.children);
}
const V7 = /* @__PURE__ */ Ee(L7), z1 = /* @__PURE__ */ de({});
function j7(e, t) {
  let [r, n] = Ze(e, t, z1), { elementType: i, orientation: a, style: o, className: s } = r, u = i || "hr";
  u === "hr" && a === "vertical" && (u = "div");
  let { separatorProps: l } = BS({
    elementType: i,
    orientation: a
  }), c = s3("separator", e, t);
  return c || /* @__PURE__ */ A.createElement(u, {
    ...Oe(r),
    ...l,
    style: o,
    className: s ?? "react-aria-Separator",
    ref: n,
    slot: r.slot || void 0
  });
}
const z7 = /* @__PURE__ */ Ee(j7), za = /* @__PURE__ */ de(null), $i = /* @__PURE__ */ de(null);
function K7(e, t) {
  [e, t] = Ze(e, t, za);
  let r = le(xa), n = le($i);
  return le(Js) ? /* @__PURE__ */ A.createElement(HS, e) : n ? r ? null : /* @__PURE__ */ A.createElement(U1, {
    state: n,
    props: e,
    listBoxRef: t
  }) : /* @__PURE__ */ A.createElement(U7, {
    props: e,
    listBoxRef: t
  });
}
function U7({ props: e, listBoxRef: t }) {
  let { portal: r, collection: n } = KS(e);
  e = {
    ...e,
    collection: n,
    children: null,
    items: null
  };
  let i = h3(e);
  return /* @__PURE__ */ A.createElement(A.Fragment, null, r, /* @__PURE__ */ A.createElement(U1, {
    state: i,
    props: e,
    listBoxRef: t
  }));
}
const K1 = /* @__PURE__ */ Ee(K7);
function U1({ state: e, props: t, listBoxRef: r }) {
  let { dragAndDropHooks: n, layout: i = "stack", orientation: a = "vertical" } = t, { collection: o, selectionManager: s } = e, u = !!(n != null && n.useDraggableCollectionState), l = !!(n != null && n.useDroppableCollectionState), { direction: c } = ct(), { disabledBehavior: d, disabledKeys: f } = s, h = qs({
    usage: "search",
    sensitivity: "base"
  }), p = G(() => t.keyboardDelegate || new Gs({
    collection: o,
    collator: h,
    ref: r,
    disabledKeys: f,
    disabledBehavior: d,
    layout: i,
    orientation: a,
    direction: c
  }), [
    o,
    h,
    r,
    d,
    f,
    a,
    c,
    t.keyboardDelegate,
    i
  ]), { listBoxProps: v } = cS({
    ...t,
    shouldSelectOnPressUp: u || t.shouldSelectOnPressUp,
    keyboardDelegate: p
  }, e, r), g = jd({
    items: o,
    children: (L) => {
      switch (L.type) {
        case "section":
          return /* @__PURE__ */ A.createElement(q7, {
            section: L
          });
        case "separator":
          return /* @__PURE__ */ A.createElement(z7, L.props);
        case "item":
          return /* @__PURE__ */ A.createElement(q1, {
            item: L
          });
        default:
          throw new Error("Unsupported node type in Menu: " + L.type);
      }
    }
  }), $ = q(u), m = q(l);
  oe(() => {
    $.current !== u && console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior."), m.current !== l && console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    u,
    l
  ]);
  let b, D, S, P = !1, B = null, y = q(null);
  if (u && n) {
    b = n.useDraggableCollectionState({
      collection: o,
      selectionManager: s,
      preview: n.renderDragPreview ? y : void 0
    }), n.useDraggableCollection({}, b, r);
    let L = n.DragPreview;
    B = n.renderDragPreview ? /* @__PURE__ */ A.createElement(L, {
      ref: y
    }, n.renderDragPreview) : null;
  }
  if (l && n) {
    D = n.useDroppableCollectionState({
      collection: o,
      selectionManager: s
    });
    let L = n.dropTargetDelegate || new n.ListDropTargetDelegate(o, r, {
      orientation: a,
      layout: i,
      direction: c
    });
    S = n.useDroppableCollection({
      keyboardDelegate: p,
      dropTargetDelegate: L
    }, D, r), P = D.isDropTarget({
      type: "root"
    });
  }
  let { focusProps: _, isFocused: w, isFocusVisible: E } = Wr(), k = {
    isDropTarget: P,
    isEmpty: e.collection.size === 0,
    isFocused: w,
    isFocusVisible: E,
    layout: t.layout || "stack",
    state: e
  }, C = it({
    className: t.className,
    style: t.style,
    defaultClassName: "react-aria-ListBox",
    values: k
  }), T = null;
  return e.collection.size === 0 && t.renderEmptyState && (T = /* @__PURE__ */ A.createElement("div", {
    // eslint-disable-next-line
    role: "option",
    style: {
      display: "contents"
    }
  }, t.renderEmptyState(k))), /* @__PURE__ */ A.createElement(oy, null, /* @__PURE__ */ A.createElement("div", {
    ...Oe(t),
    ...ye(v, _, S == null ? void 0 : S.collectionProps),
    ...C,
    ref: r,
    slot: t.slot || void 0,
    onScroll: t.onScroll,
    "data-drop-target": P || void 0,
    "data-empty": e.collection.size === 0 || void 0,
    "data-focused": w || void 0,
    "data-focus-visible": E || void 0,
    "data-layout": t.layout || "stack",
    "data-orientation": t.orientation || "vertical"
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        za,
        t
      ],
      [
        $i,
        e
      ],
      [
        Wd,
        {
          dragAndDropHooks: n,
          dragState: b,
          dropState: D
        }
      ],
      [
        z1,
        {
          elementType: "div"
        }
      ],
      [
        j1,
        {
          render: G7
        }
      ]
    ]
  }, g), T, B));
}
function q7({ section: e, className: t, style: r }) {
  var n, i;
  let a = le($i), [o, s] = La();
  var u;
  let { headingProps: l, groupProps: c } = yS({
    heading: s,
    "aria-label": (u = e.props["aria-label"]) !== null && u !== void 0 ? u : void 0
  }), d = jd({
    items: a.collection.getChildren(e.key),
    children: (f) => {
      switch (f.type) {
        case "header":
          return /* @__PURE__ */ A.createElement(H7, {
            item: f,
            headingProps: l,
            headingRef: o
          });
        case "item":
          return /* @__PURE__ */ A.createElement(q1, {
            item: f
          });
        default:
          throw new Error("Unsupported element type in Section: " + f.type);
      }
    }
  });
  return /* @__PURE__ */ A.createElement("section", {
    ...Oe(e.props),
    ...c,
    className: t || ((n = e.props) === null || n === void 0 ? void 0 : n.className) || "react-aria-Section",
    style: r || ((i = e.props) === null || i === void 0 ? void 0 : i.style),
    ref: e.props.ref
  }, d);
}
function H7({ item: e, headingProps: t, headingRef: r }) {
  let { ref: n, ...i } = e.props;
  return /* @__PURE__ */ A.createElement(V7, {
    ...t,
    ...i,
    ref: md(r, n)
  }, e.rendered);
}
function W7(e, t) {
  return u3("item", e, t, e.children);
}
const Q7 = /* @__PURE__ */ Ee(W7);
function q1({ item: e }) {
  var t;
  let r = Dn(e.props.ref), n = le($i), { dragAndDropHooks: i, dragState: a, dropState: o } = le(Wd), { optionProps: s, labelProps: u, descriptionProps: l, ...c } = vS({
    key: e.key,
    "aria-label": (t = e.props) === null || t === void 0 ? void 0 : t["aria-label"]
  }, n, r), { hoverProps: d, isHovered: f } = En({
    isDisabled: !c.allowsSelection && !c.hasAction,
    onHoverStart: e.props.onHoverStart,
    onHoverChange: e.props.onHoverChange,
    onHoverEnd: e.props.onHoverEnd
  }), h = null;
  a && i && (h = i.useDraggableItem({
    key: e.key
  }, a));
  let p = null;
  o && i && (p = i.useDroppableItem({
    target: {
      type: "item",
      key: e.key,
      dropPosition: "on"
    }
  }, o, r));
  let v = e.props, g = a && a.isDragging(e.key), $ = it({
    ...v,
    id: void 0,
    children: e.rendered,
    defaultClassName: "react-aria-ListBoxItem",
    values: {
      ...c,
      isHovered: f,
      selectionMode: n.selectionManager.selectionMode,
      selectionBehavior: n.selectionManager.selectionBehavior,
      allowsDragging: !!a,
      isDragging: g,
      isDropTarget: p == null ? void 0 : p.isDropTarget
    }
  }), m = (i == null ? void 0 : i.renderDropIndicator) || ((D) => /* @__PURE__ */ A.createElement(M7, {
    target: D
  }));
  oe(() => {
    e.textValue || console.warn("A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.");
  }, [
    e.textValue
  ]);
  let b = v.href ? "a" : "div";
  return /* @__PURE__ */ A.createElement(A.Fragment, null, (i == null ? void 0 : i.useDropIndicator) && m({
    type: "item",
    key: e.key,
    dropPosition: "before"
  }), /* @__PURE__ */ A.createElement(b, {
    ...ye(s, d, h == null ? void 0 : h.dragProps, p == null ? void 0 : p.dropProps),
    ...$,
    ref: r,
    "data-allows-dragging": !!a || void 0,
    "data-selected": c.isSelected || void 0,
    "data-disabled": c.isDisabled || void 0,
    "data-hovered": f || void 0,
    "data-focused": c.isFocused || void 0,
    "data-focus-visible": c.isFocusVisible || void 0,
    "data-pressed": c.isPressed || void 0,
    "data-dragging": g || void 0,
    "data-drop-target": (p == null ? void 0 : p.isDropTarget) || void 0,
    "data-selection-mode": n.selectionManager.selectionMode === "none" ? void 0 : n.selectionManager.selectionMode
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        Gr,
        {
          slots: {
            label: u,
            description: l
          }
        }
      ]
    ]
  }, $.children)), (i == null ? void 0 : i.useDropIndicator) && n.collection.getKeyAfter(e.key) == null && m({
    type: "item",
    key: e.key,
    dropPosition: "after"
  }));
}
function G7(e, t) {
  t = Dn(t);
  let { dragAndDropHooks: r, dropState: n } = le(Wd), { dropIndicatorProps: i, isHidden: a, isDropTarget: o } = r.useDropIndicator(e, n, t);
  return a ? null : /* @__PURE__ */ A.createElement(Y7, {
    ...e,
    dropIndicatorProps: i,
    isDropTarget: o,
    ref: t
  });
}
function Z7(e, t) {
  let { dropIndicatorProps: r, isDropTarget: n, ...i } = e, a = it({
    ...i,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget: n
    }
  });
  return /* @__PURE__ */ A.createElement("div", {
    ...r,
    ...a,
    // eslint-disable-next-line
    role: "option",
    ref: t,
    "data-drop-target": n || void 0
  });
}
const Y7 = /* @__PURE__ */ Ee(Z7), nu = /* @__PURE__ */ de({});
function J7(e, t) {
  [e, t] = Ze(e, t, nu);
  let { isDisabled: r, isInvalid: n, onHoverStart: i, onHoverChange: a, onHoverEnd: o, ...s } = e, { hoverProps: u, isHovered: l } = En({
    onHoverStart: i,
    onHoverChange: a,
    onHoverEnd: o,
    isDisabled: r
  }), { isFocused: c, isFocusVisible: d, focusProps: f } = Wr({
    within: !0
  });
  r ?? (r = !!e["aria-disabled"] && e["aria-disabled"] !== "false"), n ?? (n = !!e["aria-invalid"] && e["aria-invalid"] !== "false");
  let h = it({
    ...e,
    values: {
      isHovered: l,
      isFocusWithin: c,
      isFocusVisible: d,
      isDisabled: r,
      isInvalid: n
    },
    defaultClassName: "react-aria-Group"
  });
  var p, v;
  return /* @__PURE__ */ A.createElement("div", {
    ...ye(s, f, u),
    ...h,
    ref: t,
    role: (p = e.role) !== null && p !== void 0 ? p : "group",
    slot: (v = e.slot) !== null && v !== void 0 ? v : void 0,
    "data-focus-within": c || void 0,
    "data-hovered": l || void 0,
    "data-focus-visible": d || void 0,
    "data-disabled": r || void 0,
    "data-invalid": n || void 0
  }, h.children);
}
const H1 = /* @__PURE__ */ Ee(J7), W1 = /* @__PURE__ */ de({
  placement: "bottom"
});
function X7(e, t) {
  [e, t] = Ze(e, t, W1);
  let r = e.placement, n = {
    position: "absolute",
    [r]: "100%",
    transform: r === "top" || r === "bottom" ? "translateX(-50%)" : "translateY(-50%)"
  }, i = it({
    ...e,
    defaultClassName: "react-aria-OverlayArrow",
    values: {
      placement: r
    }
  });
  return i.style && Object.keys(i.style).forEach((a) => i.style[a] === void 0 && delete i.style[a]), /* @__PURE__ */ A.createElement("div", {
    ...e,
    ...i,
    style: {
      ...n,
      ...i.style
    },
    ref: t,
    "data-placement": r
  });
}
const ek = /* @__PURE__ */ Ee(X7), xi = /* @__PURE__ */ de(null);
function tk(e, t) {
  [e, t] = Ze(e, t, xi);
  let r = le(wr), n = gi(e), i = e.isOpen != null || e.defaultOpen != null || !r ? n : r, a = hc(t, i.isOpen) || e.isExiting || !1;
  if (le(xa)) {
    let s = e.children;
    return typeof s == "function" && (s = s({
      trigger: e.trigger || null,
      placement: "bottom",
      isEntering: !1,
      isExiting: !1,
      defaultChildren: null
    })), /* @__PURE__ */ A.createElement(A.Fragment, null, s);
  }
  return i && !i.isOpen && !a ? null : /* @__PURE__ */ A.createElement(nk, {
    ...e,
    triggerRef: e.triggerRef,
    state: i,
    popoverRef: t,
    isExiting: a
  });
}
const rk = /* @__PURE__ */ Ee(tk);
function nk({ state: e, isExiting: t, UNSTABLE_portalContainer: r, ...n }) {
  let i = q(null), [a, o] = ee(0);
  Re(() => {
    i.current && e.isOpen && o(i.current.getBoundingClientRect().width);
  }, [
    e.isOpen,
    i
  ]);
  var s;
  let { popoverProps: u, underlayProps: l, arrowProps: c, placement: d } = tS({
    ...n,
    offset: (s = n.offset) !== null && s !== void 0 ? s : 8,
    arrowSize: a
  }, e), f = n.popoverRef, h = Kd(f, !!d) || n.isEntering || !1, p = it({
    ...n,
    defaultClassName: "react-aria-Popover",
    values: {
      trigger: n.trigger || null,
      placement: d,
      isEntering: h,
      isExiting: t
    }
  }), v = {
    ...u.style,
    ...p.style
  };
  return /* @__PURE__ */ A.createElement(Z0, {
    isExiting: t,
    portalContainer: r
  }, !n.isNonModal && e.isOpen && /* @__PURE__ */ A.createElement("div", {
    "data-testid": "underlay",
    ...l,
    style: {
      position: "fixed",
      inset: 0
    }
  }), /* @__PURE__ */ A.createElement("div", {
    ...ye(Oe(n), u),
    ...p,
    ref: f,
    slot: n.slot || void 0,
    style: v,
    "data-trigger": n.trigger,
    "data-placement": d,
    "data-entering": h || void 0,
    "data-exiting": t || void 0
  }, !n.isNonModal && /* @__PURE__ */ A.createElement(uc, {
    onDismiss: e.close
  }), /* @__PURE__ */ A.createElement(W1.Provider, {
    value: {
      ...c,
      placement: d,
      ref: i
    }
  }, p.children), /* @__PURE__ */ A.createElement(uc, {
    onDismiss: e.close
  })));
}
const Qd = /* @__PURE__ */ de(null), wr = /* @__PURE__ */ de(null);
function Q1(e) {
  let t = gi(e), r = q(null), { triggerProps: n, overlayProps: i } = d0({
    type: "dialog"
  }, t, r);
  return n.id = St(), i["aria-labelledby"] = n.id, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        wr,
        t
      ],
      [
        Qd,
        i
      ],
      [
        xi,
        {
          trigger: "DialogTrigger",
          triggerRef: r
        }
      ]
    ]
  }, /* @__PURE__ */ A.createElement(Mw, {
    ...n,
    ref: r,
    isPressed: t.isOpen
  }, e.children));
}
function ik(e, t) {
  let r = e["aria-labelledby"];
  [e, t] = Ze(e, t, Qd);
  let { dialogProps: n, titleProps: i } = FS({
    ...e,
    // Only pass aria-labelledby from props, not context.
    // Context is used as a fallback below.
    "aria-labelledby": r
  }, t), a = le(wr), o = e.children;
  typeof o == "function" && (o = o({
    close: (a == null ? void 0 : a.close) || (() => {
    })
  })), !n["aria-label"] && !n["aria-labelledby"] && (e["aria-labelledby"] ? n["aria-labelledby"] = e["aria-labelledby"] : console.warn('If a Dialog does not contain a <Heading slot="title">, it must have an aria-label or aria-labelledby attribute for accessibility.'));
  var s;
  return /* @__PURE__ */ A.createElement("section", {
    ...Oe(e),
    ...n,
    ref: t,
    slot: e.slot || void 0,
    style: e.style,
    className: (s = e.className) !== null && s !== void 0 ? s : "react-aria-Dialog"
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        pd,
        {
          slots: {
            [fc]: {},
            title: {
              ...i,
              level: 2
            }
          }
        }
      ]
    ]
  }, o));
}
const ak = /* @__PURE__ */ Ee(ik), ok = /* @__PURE__ */ de(null), G1 = /* @__PURE__ */ de(null);
function sk(e, t) {
  [e, t] = Ze(e, t, ok);
  let { collection: r, document: n } = zd(), { children: i, isDisabled: a = !1, isInvalid: o = !1, isRequired: s = !1 } = e;
  i = G(() => typeof i == "function" ? i({
    isOpen: !1,
    isDisabled: a,
    isInvalid: o,
    isRequired: s,
    defaultChildren: null
  }) : i, [
    i,
    a,
    o,
    s
  ]);
  var u;
  return /* @__PURE__ */ A.createElement(A.Fragment, null, /* @__PURE__ */ A.createElement(c3, null, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        Js,
        n
      ],
      [
        za,
        {
          items: (u = e.items) !== null && u !== void 0 ? u : e.defaultItems
        }
      ]
    ]
  }, i)), /* @__PURE__ */ A.createElement(uk, {
    props: e,
    collection: r,
    comboBoxRef: t
  }));
}
function uk({ props: e, collection: t, comboBoxRef: r }) {
  let { name: n, formValue: i = "key", allowsCustomValue: a } = e;
  a && (i = "text");
  let { validationBehavior: o } = wn(di) || {};
  var s, u;
  let l = (u = (s = e.validationBehavior) !== null && s !== void 0 ? s : o) !== null && u !== void 0 ? u : "native", { contains: c } = jy({
    sensitivity: "base"
  }), d = n7({
    defaultFilter: e.defaultFilter || c,
    ...e,
    // If props.items isn't provided, rely on collection filtering (aka listbox.items is provided or defaultItems provided to Combobox)
    items: e.items,
    children: void 0,
    collection: t,
    validationBehavior: l
  }), f = q(null), h = q(null), p = q(null), v = q(null), [g, $] = La(), { buttonProps: m, inputProps: b, listBoxProps: D, labelProps: S, descriptionProps: P, errorMessageProps: B, ...y } = $S({
    ...Xs(e),
    label: $,
    inputRef: h,
    buttonRef: f,
    listBoxRef: p,
    popoverRef: v,
    name: i === "text" ? n : void 0,
    validationBehavior: l
  }, d), [_, w] = ee(null), E = be(() => {
    if (h.current) {
      var L;
      let O = (L = f.current) === null || L === void 0 ? void 0 : L.getBoundingClientRect(), x = h.current.getBoundingClientRect(), U = O ? Math.min(O.left, x.left) : x.left, K = O ? Math.max(O.right, x.right) : x.right;
      w(K - U + "px");
    }
  }, [
    f,
    h,
    w
  ]);
  Ns({
    ref: h,
    onResize: E
  });
  let k = G(() => ({
    isOpen: d.isOpen,
    isDisabled: e.isDisabled || !1,
    isInvalid: y.isInvalid || !1,
    isRequired: e.isRequired || !1
  }), [
    d.isOpen,
    e.isDisabled,
    y.isInvalid,
    e.isRequired
  ]), C = it({
    ...e,
    values: k,
    defaultClassName: "react-aria-ComboBox"
  }), T = Oe(e);
  return delete T.id, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        G1,
        d
      ],
      [
        ja,
        {
          ...S,
          ref: g
        }
      ],
      [
        Va,
        {
          ...m,
          ref: f,
          isPressed: d.isOpen
        }
      ],
      [
        ru,
        {
          ...b,
          ref: h
        }
      ],
      [
        wr,
        d
      ],
      [
        xi,
        {
          ref: v,
          triggerRef: h,
          placement: "bottom start",
          isNonModal: !0,
          trigger: "ComboBox",
          style: {
            "--trigger-width": _
          }
        }
      ],
      [
        za,
        {
          ...D,
          ref: p
        }
      ],
      [
        $i,
        d
      ],
      [
        Gr,
        {
          slots: {
            description: P,
            errorMessage: B
          }
        }
      ],
      [
        nu,
        {
          isInvalid: y.isInvalid,
          isDisabled: e.isDisabled || !1
        }
      ],
      [
        bi,
        y
      ]
    ]
  }, /* @__PURE__ */ A.createElement("div", {
    ...T,
    ...C,
    ref: r,
    slot: e.slot || void 0,
    "data-focused": d.isFocused || void 0,
    "data-open": d.isOpen || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-invalid": y.isInvalid || void 0,
    "data-required": e.isRequired || void 0
  }), n && i === "key" && /* @__PURE__ */ A.createElement("input", {
    type: "hidden",
    name: n,
    value: d.selectedKey
  }));
}
const lk = /* @__PURE__ */ Ee(sk), Z1 = /* @__PURE__ */ de(null), iu = /* @__PURE__ */ de(null), Gd = /* @__PURE__ */ de(null);
function ck(e, t) {
  let r = le(iu), n = le(Gd);
  return r || n ? /* @__PURE__ */ A.createElement(Y1, {
    ...e,
    ref: t
  }) : /* @__PURE__ */ A.createElement(dk, {
    ...e,
    ref: t
  });
}
const dk = /* @__PURE__ */ Ee((e, t) => {
  let [r, n] = Ze({
    slot: e.slot
  }, t, Z1), { locale: i } = ct(), a = f7({
    ...r,
    locale: i,
    createCalendar: My
  }), o = q(null), { fieldProps: s, inputProps: u } = DS({
    ...r,
    inputRef: o
  }, a, n);
  return /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        iu,
        a
      ],
      [
        ru,
        {
          ...u,
          ref: o
        }
      ],
      [
        nu,
        {
          ...s,
          ref: n,
          isInvalid: a.isInvalid
        }
      ]
    ]
  }, /* @__PURE__ */ A.createElement(Y1, e));
}), Y1 = /* @__PURE__ */ Ee((e, t) => {
  let { className: r, children: n } = e, i = le(iu), a = le(Gd), o = i ?? a;
  return /* @__PURE__ */ A.createElement(A.Fragment, null, /* @__PURE__ */ A.createElement(H1, {
    ...e,
    ref: t,
    slot: e.slot || void 0,
    className: r ?? "react-aria-DateInput",
    isInvalid: o.isInvalid
  }, o.segments.map((s, u) => /* @__PURE__ */ ra(n(s), {
    key: u
  }))), /* @__PURE__ */ A.createElement(a1, null));
}), fk = /* @__PURE__ */ Ee(ck);
function hk({ segment: e, ...t }, r) {
  let n = le(iu), i = le(Gd), a = n ?? i, o = Dn(r), { segmentProps: s } = PS(e, a, o), { focusProps: u, isFocused: l, isFocusVisible: c } = Wr(), { hoverProps: d, isHovered: f } = En({
    ...t,
    isDisabled: a.isDisabled || e.type === "literal"
  }), h = it({
    ...t,
    values: {
      ...e,
      isReadOnly: !e.isEditable,
      isInvalid: a.isInvalid,
      isDisabled: a.isDisabled,
      isHovered: f,
      isFocused: l,
      isFocusVisible: c
    },
    defaultChildren: e.text,
    defaultClassName: "react-aria-DateSegment"
  });
  return /* @__PURE__ */ A.createElement("div", {
    ...ye(Oe(t), s, u, d),
    ...h,
    ref: o,
    "data-placeholder": e.isPlaceholder || void 0,
    "data-invalid": a.isInvalid || void 0,
    "data-readonly": !e.isEditable || void 0,
    "data-disabled": a.isDisabled || void 0,
    "data-type": e.type,
    "data-hovered": f || void 0,
    "data-focused": l || void 0,
    "data-focus-visible": c || void 0
  });
}
const pk = /* @__PURE__ */ Ee(hk), mk = /* @__PURE__ */ de(null), vk = /* @__PURE__ */ de(null);
function yk(e, t) {
  [e, t] = Ze(e, t, mk);
  let { validationBehavior: r } = wn(di) || {};
  var n, i;
  let a = (i = (n = e.validationBehavior) !== null && n !== void 0 ? n : r) !== null && i !== void 0 ? i : "native", o = v7({
    ...e,
    validationBehavior: a
  }), s = q(null), [u, l] = La(), { groupProps: c, labelProps: d, startFieldProps: f, endFieldProps: h, buttonProps: p, dialogProps: v, calendarProps: g, descriptionProps: $, errorMessageProps: m, ...b } = _S({
    ...Xs(e),
    label: l,
    validationBehavior: a
  }, o, s), [D, S] = ee(null), P = be(() => {
    s.current && S(s.current.offsetWidth + "px");
  }, []);
  Ns({
    ref: s,
    onResize: P
  });
  let { focusProps: B, isFocused: y, isFocusVisible: _ } = Wr({
    within: !0
  }), w = it({
    ...e,
    values: {
      state: o,
      isFocusWithin: y,
      isFocusVisible: _,
      isDisabled: e.isDisabled || !1,
      isInvalid: o.isInvalid,
      isOpen: o.isOpen
    },
    defaultClassName: "react-aria-DateRangePicker"
  }), E = Oe(e);
  return delete E.id, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        vk,
        o
      ],
      [
        nu,
        {
          ...c,
          ref: s,
          isInvalid: o.isInvalid
        }
      ],
      [
        Va,
        {
          ...p,
          isPressed: o.isOpen
        }
      ],
      [
        ja,
        {
          ...d,
          ref: u,
          elementType: "span"
        }
      ],
      [
        t1,
        g
      ],
      [
        wr,
        o
      ],
      [
        xi,
        {
          trigger: "DateRangePicker",
          triggerRef: s,
          placement: "bottom start",
          style: {
            "--trigger-width": D
          }
        }
      ],
      [
        Qd,
        v
      ],
      [
        Z1,
        {
          slots: {
            start: f,
            end: h
          }
        }
      ],
      [
        Gr,
        {
          slots: {
            description: $,
            errorMessage: m
          }
        }
      ],
      [
        bi,
        b
      ]
    ]
  }, /* @__PURE__ */ A.createElement("div", {
    ...B,
    ...E,
    ...w,
    ref: t,
    slot: e.slot || void 0,
    "data-focus-within": y || void 0,
    "data-invalid": o.isInvalid || void 0,
    "data-focus-visible": _ || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-open": o.isOpen || void 0
  }));
}
const gk = /* @__PURE__ */ Ee(yk);
function bk(e, t) {
  [e, t] = Ze(e, t, pd);
  let { children: r, level: n = 3, className: i, ...a } = e, o = `h${n}`;
  return /* @__PURE__ */ A.createElement(o, {
    ...a,
    ref: t,
    className: i ?? "react-aria-Heading"
  }, r);
}
const J1 = /* @__PURE__ */ Ee(bk), $k = /* @__PURE__ */ de(null), Zd = /* @__PURE__ */ de(null);
function xk(e, t) {
  if (le(Zd)) return /* @__PURE__ */ A.createElement(Dp, {
    ...e,
    modalRef: t
  }, e.children);
  let { isDismissable: n, isKeyboardDismissDisabled: i, isOpen: a, defaultOpen: o, onOpenChange: s, children: u, isEntering: l, isExiting: c, UNSTABLE_portalContainer: d, shouldCloseOnInteractOutside: f, ...h } = e;
  return /* @__PURE__ */ A.createElement(X1, {
    isDismissable: n,
    isKeyboardDismissDisabled: i,
    isOpen: a,
    defaultOpen: o,
    onOpenChange: s,
    isEntering: l,
    isExiting: c,
    UNSTABLE_portalContainer: d,
    shouldCloseOnInteractOutside: f
  }, /* @__PURE__ */ A.createElement(Dp, {
    ...h,
    modalRef: t
  }, u));
}
const Dk = /* @__PURE__ */ Ee(xk);
function Ek(e, t) {
  [e, t] = Ze(e, t, $k);
  let r = le(wr), n = gi(e), i = e.isOpen != null || e.defaultOpen != null || !r ? n : r, a = Dn(t), o = q(null), s = hc(a, i.isOpen), u = hc(o, i.isOpen), l = s || u || e.isExiting || !1, c = Er();
  return !i.isOpen && !l || c ? null : /* @__PURE__ */ A.createElement(wk, {
    ...e,
    state: i,
    isExiting: l,
    overlayRef: a,
    modalRef: o
  });
}
const X1 = /* @__PURE__ */ Ee(Ek);
function wk({ UNSTABLE_portalContainer: e, ...t }) {
  let r = t.modalRef, { state: n } = t, { modalProps: i, underlayProps: a } = iS(t, n, r), o = Kd(t.overlayRef) || t.isEntering || !1, s = it({
    ...t,
    defaultClassName: "react-aria-ModalOverlay",
    values: {
      isEntering: o,
      isExiting: t.isExiting,
      state: n
    }
  }), u = Cw(), l = {
    ...s.style,
    "--visual-viewport-height": u.height + "px"
  };
  return /* @__PURE__ */ A.createElement(Z0, {
    isExiting: t.isExiting,
    portalContainer: e
  }, /* @__PURE__ */ A.createElement("div", {
    ...ye(Oe(t), a),
    ...s,
    style: l,
    ref: t.overlayRef,
    "data-entering": o || void 0,
    "data-exiting": t.isExiting || void 0
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        Zd,
        {
          modalProps: i,
          modalRef: r,
          isExiting: t.isExiting,
          isDismissable: t.isDismissable
        }
      ],
      [
        wr,
        n
      ]
    ]
  }, s.children)));
}
function Dp(e) {
  let { modalProps: t, modalRef: r, isExiting: n, isDismissable: i } = le(Zd), a = le(wr), o = G(() => md(e.modalRef, r), [
    e.modalRef,
    r
  ]), s = Dn(o), u = Kd(s), l = it({
    ...e,
    defaultClassName: "react-aria-Modal",
    values: {
      isEntering: u,
      isExiting: n,
      state: a
    }
  });
  return /* @__PURE__ */ A.createElement("div", {
    ...ye(Oe(e), t),
    ...l,
    ref: s,
    "data-entering": u || void 0,
    "data-exiting": n || void 0
  }, i && /* @__PURE__ */ A.createElement(uc, {
    onDismiss: a.close
  }), l.children);
}
function Ck(e) {
  return e && e.__esModule ? e.default : e;
}
const To = /* @__PURE__ */ de(null), gc = /* @__PURE__ */ de(null);
function Sk(e, t) {
  [e, t] = Ze(e, t, To);
  let { validationBehavior: r } = wn(di) || {};
  var n, i;
  let a = (i = (n = e.validationBehavior) !== null && n !== void 0 ? n : r) !== null && i !== void 0 ? i : "native", { collection: o, document: s } = zd(), u = y7({
    ...e,
    collection: o,
    children: void 0,
    validationBehavior: a
  }), { isFocusVisible: l, focusProps: c } = Wr({
    within: !0
  }), d = q(null), [f, h] = La(), { labelProps: p, triggerProps: v, valueProps: g, menuProps: $, descriptionProps: m, errorMessageProps: b, ...D } = OS({
    ...Xs(e),
    label: h,
    validationBehavior: a
  }, u, d), [S, P] = ee(null), B = be(() => {
    d.current && P(d.current.offsetWidth + "px");
  }, [
    d
  ]);
  Ns({
    ref: d,
    onResize: B
  });
  let y = G(() => ({
    isOpen: u.isOpen,
    isFocused: u.isFocused,
    isFocusVisible: l,
    isDisabled: e.isDisabled || !1,
    isInvalid: D.isInvalid || !1,
    isRequired: e.isRequired || !1
  }), [
    u.isOpen,
    u.isFocused,
    l,
    e.isDisabled,
    D.isInvalid,
    e.isRequired
  ]), _ = it({
    ...e,
    values: y,
    defaultClassName: "react-aria-Select"
  }), w = Oe(e);
  return delete w.id, /* @__PURE__ */ A.createElement(A.Fragment, null, /* @__PURE__ */ A.createElement(c3, null, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        To,
        e
      ],
      [
        gc,
        u
      ],
      [
        Js,
        s
      ]
    ]
  }, _.children)), /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        To,
        e
      ],
      [
        gc,
        u
      ],
      [
        e$,
        g
      ],
      [
        ja,
        {
          ...p,
          ref: f,
          elementType: "span"
        }
      ],
      [
        Va,
        {
          ...v,
          ref: d,
          isPressed: u.isOpen
        }
      ],
      [
        wr,
        u
      ],
      [
        xi,
        {
          trigger: "Select",
          triggerRef: d,
          placement: "bottom start",
          style: {
            "--trigger-width": S
          }
        }
      ],
      [
        za,
        $
      ],
      [
        $i,
        u
      ],
      [
        Gr,
        {
          slots: {
            description: m,
            errorMessage: b
          }
        }
      ],
      [
        bi,
        D
      ]
    ]
  }, /* @__PURE__ */ A.createElement("div", {
    ...w,
    ..._,
    ...c,
    ref: t,
    slot: e.slot || void 0,
    "data-focused": u.isFocused || void 0,
    "data-focus-visible": l || void 0,
    "data-open": u.isOpen || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-invalid": D.isInvalid || void 0,
    "data-required": e.isRequired || void 0
  }), /* @__PURE__ */ A.createElement(RS, {
    state: u,
    triggerRef: d,
    label: h,
    name: e.name,
    isDisabled: e.isDisabled
  })));
}
const kk = /* @__PURE__ */ Ee(Sk), e$ = /* @__PURE__ */ de(null);
function Pk(e, t) {
  var r, n;
  [e, t] = Ze(e, t, e$);
  let i = le(gc), { placeholder: a } = wn(To), o = i.selectedKey != null ? i.collection.getItem(i.selectedKey) : null, s = o == null ? void 0 : o.rendered;
  typeof s == "function" && (s = s({
    isHovered: !1,
    isPressed: !1,
    isSelected: !1,
    isFocused: !1,
    isFocusVisible: !1,
    isDisabled: !1,
    selectionMode: "single",
    selectionBehavior: "toggle"
  }));
  let u = qt(Ck(V1), "react-aria-components");
  var l, c;
  let d = it({
    ...e,
    defaultChildren: s || a || u.format("selectPlaceholder"),
    defaultClassName: "react-aria-SelectValue",
    values: {
      selectedItem: (l = (r = i.selectedItem) === null || r === void 0 ? void 0 : r.value) !== null && l !== void 0 ? l : null,
      selectedText: (c = (n = i.selectedItem) === null || n === void 0 ? void 0 : n.textValue) !== null && c !== void 0 ? c : null,
      isPlaceholder: !o
    }
  }), f = Oe(e);
  return /* @__PURE__ */ A.createElement("span", {
    ref: t,
    ...f,
    ...d,
    "data-placeholder": !o || void 0
  }, /* @__PURE__ */ A.createElement(Gr.Provider, {
    value: void 0
  }, d.children));
}
const Tk = /* @__PURE__ */ Ee(Pk), Ak = /* @__PURE__ */ de({}), _k = /* @__PURE__ */ de(null);
function Fk(e, t) {
  [e, t] = Ze(e, t, _k);
  let { validationBehavior: r } = wn(di) || {};
  var n, i;
  let a = (i = (n = e.validationBehavior) !== null && n !== void 0 ? n : r) !== null && i !== void 0 ? i : "native", o = q(null), [s, u] = La(), [l, c] = ee("input"), { labelProps: d, inputProps: f, descriptionProps: h, errorMessageProps: p, ...v } = Nb({
    ...Xs(e),
    inputElementType: l,
    label: u,
    validationBehavior: a
  }, o), g = be((b) => {
    o.current = b, b && c(b instanceof HTMLTextAreaElement ? "textarea" : "input");
  }, []), $ = it({
    ...e,
    values: {
      isDisabled: e.isDisabled || !1,
      isInvalid: v.isInvalid,
      isReadOnly: e.isReadOnly || !1,
      isRequired: e.isRequired || !1
    },
    defaultClassName: "react-aria-TextField"
  }), m = Oe(e);
  return delete m.id, /* @__PURE__ */ A.createElement("div", {
    ...m,
    ...$,
    ref: t,
    slot: e.slot || void 0,
    "data-disabled": e.isDisabled || void 0,
    "data-invalid": v.isInvalid || void 0,
    "data-readonly": e.isReadOnly || void 0,
    "data-required": e.isRequired || void 0
  }, /* @__PURE__ */ A.createElement(kt, {
    values: [
      [
        ja,
        {
          ...d,
          ref: s
        }
      ],
      [
        ru,
        {
          ...f,
          ref: g
        }
      ],
      [
        Ak,
        {
          ...f,
          ref: g
        }
      ],
      [
        Gr,
        {
          slots: {
            description: h,
            errorMessage: p
          }
        }
      ],
      [
        bi,
        v
      ]
    ]
  }, $.children));
}
const Ok = /* @__PURE__ */ Ee(Fk), Yd = "-";
function Ik(e) {
  const t = Bk(e), {
    conflictingClassGroups: r,
    conflictingClassGroupModifiers: n
  } = e;
  function i(o) {
    const s = o.split(Yd);
    return s[0] === "" && s.length !== 1 && s.shift(), t$(s, t) || Rk(o);
  }
  function a(o, s) {
    const u = r[o] || [];
    return s && n[o] ? [...u, ...n[o]] : u;
  }
  return {
    getClassGroupId: i,
    getConflictingClassGroupIds: a
  };
}
function t$(e, t) {
  var o;
  if (e.length === 0)
    return t.classGroupId;
  const r = e[0], n = t.nextPart.get(r), i = n ? t$(e.slice(1), n) : void 0;
  if (i)
    return i;
  if (t.validators.length === 0)
    return;
  const a = e.join(Yd);
  return (o = t.validators.find(({
    validator: s
  }) => s(a))) == null ? void 0 : o.classGroupId;
}
const Ep = /^\[(.+)\]$/;
function Rk(e) {
  if (Ep.test(e)) {
    const t = Ep.exec(e)[1], r = t == null ? void 0 : t.substring(0, t.indexOf(":"));
    if (r)
      return "arbitrary.." + r;
  }
}
function Bk(e) {
  const {
    theme: t,
    prefix: r
  } = e, n = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return Nk(Object.entries(e.classGroups), r).forEach(([a, o]) => {
    bc(o, n, a, t);
  }), n;
}
function bc(e, t, r, n) {
  e.forEach((i) => {
    if (typeof i == "string") {
      const a = i === "" ? t : wp(t, i);
      a.classGroupId = r;
      return;
    }
    if (typeof i == "function") {
      if (Mk(i)) {
        bc(i(n), t, r, n);
        return;
      }
      t.validators.push({
        validator: i,
        classGroupId: r
      });
      return;
    }
    Object.entries(i).forEach(([a, o]) => {
      bc(o, wp(t, a), r, n);
    });
  });
}
function wp(e, t) {
  let r = e;
  return t.split(Yd).forEach((n) => {
    r.nextPart.has(n) || r.nextPart.set(n, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), r = r.nextPart.get(n);
  }), r;
}
function Mk(e) {
  return e.isThemeGetter;
}
function Nk(e, t) {
  return t ? e.map(([r, n]) => {
    const i = n.map((a) => typeof a == "string" ? t + a : typeof a == "object" ? Object.fromEntries(Object.entries(a).map(([o, s]) => [t + o, s])) : a);
    return [r, i];
  }) : e;
}
function Lk(e) {
  if (e < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let t = 0, r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Map();
  function i(a, o) {
    r.set(a, o), t++, t > e && (t = 0, n = r, r = /* @__PURE__ */ new Map());
  }
  return {
    get(a) {
      let o = r.get(a);
      if (o !== void 0)
        return o;
      if ((o = n.get(a)) !== void 0)
        return i(a, o), o;
    },
    set(a, o) {
      r.has(a) ? r.set(a, o) : i(a, o);
    }
  };
}
const r$ = "!";
function Vk(e) {
  const t = e.separator, r = t.length === 1, n = t[0], i = t.length;
  return function(o) {
    const s = [];
    let u = 0, l = 0, c;
    for (let v = 0; v < o.length; v++) {
      let g = o[v];
      if (u === 0) {
        if (g === n && (r || o.slice(v, v + i) === t)) {
          s.push(o.slice(l, v)), l = v + i;
          continue;
        }
        if (g === "/") {
          c = v;
          continue;
        }
      }
      g === "[" ? u++ : g === "]" && u--;
    }
    const d = s.length === 0 ? o : o.substring(l), f = d.startsWith(r$), h = f ? d.substring(1) : d, p = c && c > l ? c - l : void 0;
    return {
      modifiers: s,
      hasImportantModifier: f,
      baseClassName: h,
      maybePostfixModifierPosition: p
    };
  };
}
function jk(e) {
  if (e.length <= 1)
    return e;
  const t = [];
  let r = [];
  return e.forEach((n) => {
    n[0] === "[" ? (t.push(...r.sort(), n), r = []) : r.push(n);
  }), t.push(...r.sort()), t;
}
function zk(e) {
  return {
    cache: Lk(e.cacheSize),
    splitModifiers: Vk(e),
    ...Ik(e)
  };
}
const Kk = /\s+/;
function Uk(e, t) {
  const {
    splitModifiers: r,
    getClassGroupId: n,
    getConflictingClassGroupIds: i
  } = t, a = /* @__PURE__ */ new Set();
  return e.trim().split(Kk).map((o) => {
    const {
      modifiers: s,
      hasImportantModifier: u,
      baseClassName: l,
      maybePostfixModifierPosition: c
    } = r(o);
    let d = n(c ? l.substring(0, c) : l), f = !!c;
    if (!d) {
      if (!c)
        return {
          isTailwindClass: !1,
          originalClassName: o
        };
      if (d = n(l), !d)
        return {
          isTailwindClass: !1,
          originalClassName: o
        };
      f = !1;
    }
    const h = jk(s).join(":");
    return {
      isTailwindClass: !0,
      modifierId: u ? h + r$ : h,
      classGroupId: d,
      originalClassName: o,
      hasPostfixModifier: f
    };
  }).reverse().filter((o) => {
    if (!o.isTailwindClass)
      return !0;
    const {
      modifierId: s,
      classGroupId: u,
      hasPostfixModifier: l
    } = o, c = s + u;
    return a.has(c) ? !1 : (a.add(c), i(u, l).forEach((d) => a.add(s + d)), !0);
  }).reverse().map((o) => o.originalClassName).join(" ");
}
function qk() {
  let e = 0, t, r, n = "";
  for (; e < arguments.length; )
    (t = arguments[e++]) && (r = n$(t)) && (n && (n += " "), n += r);
  return n;
}
function n$(e) {
  if (typeof e == "string")
    return e;
  let t, r = "";
  for (let n = 0; n < e.length; n++)
    e[n] && (t = n$(e[n])) && (r && (r += " "), r += t);
  return r;
}
function $c(e, ...t) {
  let r, n, i, a = o;
  function o(u) {
    const l = t.reduce((c, d) => d(c), e());
    return r = zk(l), n = r.cache.get, i = r.cache.set, a = s, s(u);
  }
  function s(u) {
    const l = n(u);
    if (l)
      return l;
    const c = Uk(u, r);
    return i(u, c), c;
  }
  return function() {
    return a(qk.apply(null, arguments));
  };
}
function Ne(e) {
  const t = (r) => r[e] || [];
  return t.isThemeGetter = !0, t;
}
const i$ = /^\[(?:([a-z-]+):)?(.+)\]$/i, Hk = /^\d+\/\d+$/, Wk = /* @__PURE__ */ new Set(["px", "full", "screen"]), Qk = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, Gk = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, Zk = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/, Yk = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, Jk = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
function ar(e) {
  return sn(e) || Wk.has(e) || Hk.test(e);
}
function Pr(e) {
  return Di(e, "length", o8);
}
function sn(e) {
  return !!e && !Number.isNaN(Number(e));
}
function ho(e) {
  return Di(e, "number", sn);
}
function Ii(e) {
  return !!e && Number.isInteger(Number(e));
}
function Xk(e) {
  return e.endsWith("%") && sn(e.slice(0, -1));
}
function ve(e) {
  return i$.test(e);
}
function Tr(e) {
  return Qk.test(e);
}
const e8 = /* @__PURE__ */ new Set(["length", "size", "percentage"]);
function t8(e) {
  return Di(e, e8, a$);
}
function r8(e) {
  return Di(e, "position", a$);
}
const n8 = /* @__PURE__ */ new Set(["image", "url"]);
function i8(e) {
  return Di(e, n8, u8);
}
function a8(e) {
  return Di(e, "", s8);
}
function Ri() {
  return !0;
}
function Di(e, t, r) {
  const n = i$.exec(e);
  return n ? n[1] ? typeof t == "string" ? n[1] === t : t.has(n[1]) : r(n[2]) : !1;
}
function o8(e) {
  return Gk.test(e) && !Zk.test(e);
}
function a$() {
  return !1;
}
function s8(e) {
  return Yk.test(e);
}
function u8(e) {
  return Jk.test(e);
}
function xc() {
  const e = Ne("colors"), t = Ne("spacing"), r = Ne("blur"), n = Ne("brightness"), i = Ne("borderColor"), a = Ne("borderRadius"), o = Ne("borderSpacing"), s = Ne("borderWidth"), u = Ne("contrast"), l = Ne("grayscale"), c = Ne("hueRotate"), d = Ne("invert"), f = Ne("gap"), h = Ne("gradientColorStops"), p = Ne("gradientColorStopPositions"), v = Ne("inset"), g = Ne("margin"), $ = Ne("opacity"), m = Ne("padding"), b = Ne("saturate"), D = Ne("scale"), S = Ne("sepia"), P = Ne("skew"), B = Ne("space"), y = Ne("translate"), _ = () => ["auto", "contain", "none"], w = () => ["auto", "hidden", "clip", "visible", "scroll"], E = () => ["auto", ve, t], k = () => [ve, t], C = () => ["", ar, Pr], T = () => ["auto", sn, ve], L = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], O = () => ["solid", "dashed", "dotted", "double", "none"], x = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"], U = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], K = () => ["", "0", ve], j = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], ae = () => [sn, ho], ne = () => [sn, ve];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [Ri],
      spacing: [ar, Pr],
      blur: ["none", "", Tr, ve],
      brightness: ae(),
      borderColor: [e],
      borderRadius: ["none", "", "full", Tr, ve],
      borderSpacing: k(),
      borderWidth: C(),
      contrast: ae(),
      grayscale: K(),
      hueRotate: ne(),
      invert: K(),
      gap: k(),
      gradientColorStops: [e],
      gradientColorStopPositions: [Xk, Pr],
      inset: E(),
      margin: E(),
      opacity: ae(),
      padding: k(),
      saturate: ae(),
      scale: ae(),
      sepia: K(),
      skew: ne(),
      space: k(),
      translate: k()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", ve]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [Tr]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": j()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": j()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none", "start", "end"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none", "start", "end"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...L(), ve]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: w()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": w()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": w()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: _()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": _()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": _()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [v]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [v]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [v]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [v]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [v]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [v]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [v]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [v]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [v]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", Ii, ve]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: E()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", ve]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: K()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: K()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", Ii, ve]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [Ri]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", Ii, ve]
        }, ve]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": T()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": T()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [Ri]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [Ii, ve]
        }, ve]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": T()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": T()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", ve]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", ve]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [f]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [f]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [f]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...U()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...U(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...U(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [m]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [m]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [m]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [m]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [m]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [m]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [m]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [m]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [m]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [g]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [g]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [g]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [g]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [g]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [g]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [g]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [g]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [g]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [B]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [B]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", "svw", "lvw", "dvw", ve, t]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": [ve, t, "min", "max", "fit"]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": [ve, t, "none", "full", "min", "max", "fit", "prose", {
          screen: [Tr]
        }, Tr]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [ve, t, "auto", "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": [ve, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [ve, t, "min", "max", "fit", "svh", "lvh", "dvh"]
      }],
      /**
       * Size
       * @see https://tailwindcss.com/docs/size
       */
      size: [{
        size: [ve, t, "auto", "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", Tr, Pr]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", ho]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [Ri]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", ve]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", sn, ho]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", ar, ve]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", ve]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", ve]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [e]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [$]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [e]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [$]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...O(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", ar, Pr]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", ar, ve]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [e]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Wrap
       * @see https://tailwindcss.com/docs/text-wrap
       */
      "text-wrap": [{
        text: ["wrap", "nowrap", "balance", "pretty"]
      }],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: k()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", ve]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", ve]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [$]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...L(), r8]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", t8]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, i8]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [e]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [p]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [p]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [p]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [h]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [h]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [h]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [a]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [a]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [a]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [a]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [a]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [a]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [a]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [a]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [a]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [a]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [a]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [a]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [a]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [a]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [a]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [s]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [s]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [s]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [s]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [s]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [s]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [s]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [s]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [s]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [$]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...O(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [s]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [s]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [$]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: O()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [i]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [i]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [i]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [i]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [i]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [i]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [i]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [i]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...O()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [ar, ve]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [ar, Pr]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [e]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: C()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [e]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [$]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [ar, Pr]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [e]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", Tr, a8]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [Ri]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [$]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": [...x(), "plus-lighter", "plus-darker"]
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": x()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [r]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [n]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [u]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", Tr, ve]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [l]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [c]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [d]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [b]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [S]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [r]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [n]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [u]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [l]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [c]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [d]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [$]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [b]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [S]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [o]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [o]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [o]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", ve]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: ne()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", ve]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: ne()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", ve]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [D]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [D]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [D]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [Ii, ve]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [y]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [y]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [P]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [P]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", ve]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", e]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: [{
        appearance: ["none", "auto"]
      }],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", ve]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [e]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": k()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": k()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": k()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": k()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": k()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": k()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": k()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": k()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": k()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": k()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": k()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": k()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": k()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": k()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": k()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": k()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": k()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": k()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", ve]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [e, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [ar, Pr, ho]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [e, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"],
      /**
       * Forced Color Adjust
       * @see https://tailwindcss.com/docs/forced-color-adjust
       */
      "forced-color-adjust": [{
        "forced-color-adjust": ["auto", "none"]
      }]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      size: ["w", "h"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}
function l8(e, {
  cacheSize: t,
  prefix: r,
  separator: n,
  extend: i = {},
  override: a = {}
}) {
  Ao(e, "cacheSize", t), Ao(e, "prefix", r), Ao(e, "separator", n);
  for (const o in a)
    c8(e[o], a[o]);
  for (const o in i)
    d8(e[o], i[o]);
  return e;
}
function Ao(e, t, r) {
  r !== void 0 && (e[t] = r);
}
function c8(e, t) {
  if (t)
    for (const r in t)
      Ao(e, r, t[r]);
}
function d8(e, t) {
  if (t)
    for (const r in t) {
      const n = t[r];
      n !== void 0 && (e[r] = (e[r] || []).concat(n));
    }
}
function f8(e, ...t) {
  return typeof e == "function" ? $c(xc, e, ...t) : $c(() => l8(xc(), e), ...t);
}
const Cr = /* @__PURE__ */ $c(xc);
var Cp = (e) => typeof e == "boolean" ? `${e}` : e === 0 ? "0" : e, vt = (e) => !e || typeof e != "object" || Object.keys(e).length === 0, h8 = (e, t) => JSON.stringify(e) === JSON.stringify(t);
function o$(e, t) {
  e.forEach(function(r) {
    Array.isArray(r) ? o$(r, t) : t.push(r);
  });
}
function s$(e) {
  let t = [];
  return o$(e, t), t;
}
var u$ = (...e) => s$(e).filter(Boolean), l$ = (e, t) => {
  let r = {}, n = Object.keys(e), i = Object.keys(t);
  for (let a of n) if (i.includes(a)) {
    let o = e[a], s = t[a];
    typeof o == "object" && typeof s == "object" ? r[a] = l$(o, s) : Array.isArray(o) || Array.isArray(s) ? r[a] = u$(s, o) : r[a] = s + " " + o;
  } else r[a] = e[a];
  for (let a of i) n.includes(a) || (r[a] = t[a]);
  return r;
}, Sp = (e) => !e || typeof e != "string" ? e : e.replace(/\s+/g, " ").trim(), p8 = { twMerge: !0, twMergeConfig: {}, responsiveVariants: !1 }, c$ = (e) => e || void 0, wa = (...e) => c$(s$(e).filter(Boolean).join(" ")), il = null, ur = {}, Dc = !1, Bi = (...e) => (t) => t.twMerge ? ((!il || Dc) && (Dc = !1, il = vt(ur) ? Cr : f8({ ...ur, extend: { theme: ur.theme, classGroups: ur.classGroups, conflictingClassGroupModifiers: ur.conflictingClassGroupModifiers, conflictingClassGroups: ur.conflictingClassGroups, ...ur.extend } })), c$(il(wa(e)))) : wa(e), kp = (e, t) => {
  for (let r in t) e.hasOwnProperty(r) ? e[r] = wa(e[r], t[r]) : e[r] = t[r];
  return e;
}, Dt = (e, t) => {
  let { extend: r = null, slots: n = {}, variants: i = {}, compoundVariants: a = [], compoundSlots: o = [], defaultVariants: s = {} } = e, u = { ...p8, ...t }, l = r != null && r.base ? wa(r.base, e == null ? void 0 : e.base) : e == null ? void 0 : e.base, c = r != null && r.variants && !vt(r.variants) ? l$(i, r.variants) : i, d = r != null && r.defaultVariants && !vt(r.defaultVariants) ? { ...r.defaultVariants, ...s } : s;
  !vt(u.twMergeConfig) && !h8(u.twMergeConfig, ur) && (Dc = !0, ur = u.twMergeConfig);
  let f = vt(r == null ? void 0 : r.slots), h = vt(n) ? {} : { base: wa(e == null ? void 0 : e.base, f && (r == null ? void 0 : r.base)), ...n }, p = f ? h : kp({ ...r == null ? void 0 : r.slots }, vt(h) ? { base: e == null ? void 0 : e.base } : h), v = vt(r == null ? void 0 : r.compoundVariants) ? a : u$(r == null ? void 0 : r.compoundVariants, a), g = (m) => {
    if (vt(c) && vt(n) && f) return Bi(l, m == null ? void 0 : m.class, m == null ? void 0 : m.className)(u);
    if (v && !Array.isArray(v)) throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof v}`);
    if (o && !Array.isArray(o)) throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof o}`);
    let b = (k, C, T = [], L) => {
      let O = T;
      if (typeof C == "string") O = O.concat(Sp(C).split(" ").map((x) => `${k}:${x}`));
      else if (Array.isArray(C)) O = O.concat(C.reduce((x, U) => x.concat(`${k}:${U}`), []));
      else if (typeof C == "object" && typeof L == "string") {
        for (let x in C) if (C.hasOwnProperty(x) && x === L) {
          let U = C[x];
          if (U && typeof U == "string") {
            let K = Sp(U);
            O[L] ? O[L] = O[L].concat(K.split(" ").map((j) => `${k}:${j}`)) : O[L] = K.split(" ").map((j) => `${k}:${j}`);
          } else Array.isArray(U) && U.length > 0 && (O[L] = U.reduce((K, j) => K.concat(`${k}:${j}`), []));
        }
      }
      return O;
    }, D = (k, C = c, T = null, L = null) => {
      var O;
      let x = C[k];
      if (!x || vt(x)) return null;
      let U = (O = L == null ? void 0 : L[k]) != null ? O : m == null ? void 0 : m[k];
      if (U === null) return null;
      let K = Cp(U), j = Array.isArray(u.responsiveVariants) && u.responsiveVariants.length > 0 || u.responsiveVariants === !0, ae = d == null ? void 0 : d[k], ne = [];
      if (typeof K == "object" && j) for (let [_e, Fe] of Object.entries(K)) {
        let V = x[Fe];
        if (_e === "initial") {
          ae = Fe;
          continue;
        }
        Array.isArray(u.responsiveVariants) && !u.responsiveVariants.includes(_e) || (ne = b(_e, V, ne, T));
      }
      let me = K != null && typeof K != "object" ? K : Cp(ae), xe = x[me || "false"];
      return typeof ne == "object" && typeof T == "string" && ne[T] ? kp(ne, xe) : ne.length > 0 ? (ne.push(xe), ne) : xe;
    }, S = () => c ? Object.keys(c).map((k) => D(k, c)) : null, P = (k, C) => {
      if (!c || typeof c != "object") return null;
      let T = new Array();
      for (let L in c) {
        let O = D(L, c, k, C), x = k === "base" && typeof O == "string" ? O : O && O[k];
        x && (T[T.length] = x);
      }
      return T;
    }, B = {};
    for (let k in m) m[k] !== void 0 && (B[k] = m[k]);
    let y = (k, C) => {
      var T;
      let L = typeof (m == null ? void 0 : m[k]) == "object" ? { [k]: (T = m[k]) == null ? void 0 : T.initial } : {};
      return { ...d, ...B, ...L, ...C };
    }, _ = (k = [], C) => {
      let T = [];
      for (let { class: L, className: O, ...x } of k) {
        let U = !0;
        for (let [K, j] of Object.entries(x)) {
          let ae = y(K, C);
          if (Array.isArray(j)) {
            if (!j.includes(ae[K])) {
              U = !1;
              break;
            }
          } else if (ae[K] !== j) {
            U = !1;
            break;
          }
        }
        U && (L && T.push(L), O && T.push(O));
      }
      return T;
    }, w = (k) => {
      let C = _(v, k);
      if (!Array.isArray(C)) return C;
      let T = {};
      for (let L of C) if (typeof L == "string" && (T.base = Bi(T.base, L)(u)), typeof L == "object") for (let [O, x] of Object.entries(L)) T[O] = Bi(T[O], x)(u);
      return T;
    }, E = (k) => {
      if (o.length < 1) return null;
      let C = {};
      for (let { slots: T = [], class: L, className: O, ...x } of o) {
        if (!vt(x)) {
          let U = !0;
          for (let K of Object.keys(x)) {
            let j = y(K, k)[K];
            if (j === void 0 || (Array.isArray(x[K]) ? !x[K].includes(j) : x[K] !== j)) {
              U = !1;
              break;
            }
          }
          if (!U) continue;
        }
        for (let U of T) C[U] = C[U] || [], C[U].push([L, O]);
      }
      return C;
    };
    if (!vt(n) || !f) {
      let k = {};
      if (typeof p == "object" && !vt(p)) for (let C of Object.keys(p)) k[C] = (T) => {
        var L, O;
        return Bi(p[C], P(C, T), ((L = w(T)) != null ? L : [])[C], ((O = E(T)) != null ? O : [])[C], T == null ? void 0 : T.class, T == null ? void 0 : T.className)(u);
      };
      return k;
    }
    return Bi(l, S(), _(v), m == null ? void 0 : m.class, m == null ? void 0 : m.className)(u);
  }, $ = () => {
    if (!(!c || typeof c != "object")) return Object.keys(c);
  };
  return g.variantKeys = $(), g.extend = r, g.base = l, g.slots = p, g.variants = c, g.defaultVariants = d, g.compoundSlots = o, g.compoundVariants = v, g;
};
const Cn = Dt({
  base: "outline outline-spillover-600 dark:outline-spillover-500 forced-colors:outline-[Highlight] outline-offset-2",
  variants: {
    isFocusVisible: {
      false: "outline-0",
      true: "outline-2"
    }
  }
});
function Ei(e, t) {
  return Na(e, (r) => Cr(t, r));
}
function rs(e) {
  return {
    onClick: e,
    onKeyDown: (t) => {
      (t.key === "Enter" || t.key === " ") && (t.preventDefault(), e(t));
    }
  };
}
function m8({ title: e, Icon: t, noBack: r }) {
  const { goHome: n, onCloseButtonClick: i } = hd();
  return /* @__PURE__ */ ge("header", { className: "w-full h-12 flex flex-row items-center", children: [
    r ? /* @__PURE__ */ R("div", { className: "w-14" }) : /* @__PURE__ */ R(
      "div",
      {
        ...rs(n),
        className: "h-full px-4 flex flex-row items-center cursor-pointer hover:bg-gray-200 transition duration-200",
        children: /* @__PURE__ */ R(Ll, {})
      }
    ),
    /* @__PURE__ */ ge("div", { className: "flex grow justify-center items-center gap-2 py-3 text-gray-800", children: [
      t && /* @__PURE__ */ R(t, {}),
      /* @__PURE__ */ R("p", { className: "font-semibold", children: e })
    ] }),
    i && /* @__PURE__ */ R(
      "div",
      {
        ...rs(i),
        className: "h-full px-4 flex flex-row items-center cursor-pointer hover:bg-gray-200 transition duration-200",
        children: /* @__PURE__ */ R(jv, {})
      }
    )
  ] });
}
function d$({ title: e, Icon: t, noBack: r, children: n }) {
  return /* @__PURE__ */ ge(Up, { children: [
    /* @__PURE__ */ R(m8, { title: e, Icon: t, noBack: r }),
    /* @__PURE__ */ R("main", { className: "h-full grow w-full overflow-y-auto", children: n })
  ] });
}
function v8({ title: e, Icon: t, children: r }) {
  const { setCurrentScreen: n } = hd();
  return /* @__PURE__ */ R(d$, { title: e, Icon: t, noBack: !0, children: /* @__PURE__ */ R("div", { className: "w-full h-full flex flex-col gap-2 px-2", children: r.map((i, a) => {
    const { Icon: o } = i.props;
    return /* @__PURE__ */ ge(
      "div",
      {
        ...rs(() => n(i)),
        className: "flex flex-row items-center gap-2 p-3 text-md bg-gray-200 rounded-md cursor-pointer transition duration-200 hover:bg-gray-300",
        children: [
          o && /* @__PURE__ */ R(o, {}),
          /* @__PURE__ */ R("p", { className: "m-0", children: i.props.title })
        ]
      },
      a
    );
  }) }) });
}
function y8({ title: e, Icon: t, children: r }) {
  const { currentScreen: n } = hd();
  return /* @__PURE__ */ R("div", { className: "w-full h-full flex flex-col gap-2 pb-2 text-gray-800 bg-white", children: n || /* @__PURE__ */ R(v8, { title: e, Icon: t, children: r }) });
}
function g8({ title: e, Icon: t, children: r, onCloseButtonClick: n }) {
  return /* @__PURE__ */ R(ZE, { onCloseButtonClick: n, children: /* @__PURE__ */ R(y8, { title: e, Icon: t, children: r }) });
}
var Ka = (e) => e.type === "checkbox", Un = (e) => e instanceof Date, dt = (e) => e == null;
const f$ = (e) => typeof e == "object";
var nt = (e) => !dt(e) && !Array.isArray(e) && f$(e) && !Un(e), b8 = (e) => nt(e) && e.target ? Ka(e.target) ? e.target.checked : e.target.value : e, $8 = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, x8 = (e, t) => e.has($8(t)), D8 = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return nt(t) && t.hasOwnProperty("isPrototypeOf");
}, Jd = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Tt(e) {
  let t;
  const r = Array.isArray(e);
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(Jd && (e instanceof Blob || e instanceof FileList)) && (r || nt(e)))
    if (t = r ? [] : {}, !r && !D8(e))
      t = e;
    else
      for (const n in e)
        e.hasOwnProperty(n) && (t[n] = Tt(e[n]));
  else
    return e;
  return t;
}
var Ua = (e) => Array.isArray(e) ? e.filter(Boolean) : [], Qe = (e) => e === void 0, X = (e, t, r) => {
  if (!t || !nt(e))
    return r;
  const n = Ua(t.split(/[,[\].]+?/)).reduce((i, a) => dt(i) ? i : i[a], e);
  return Qe(n) || n === e ? Qe(e[t]) ? r : e[t] : n;
}, Br = (e) => typeof e == "boolean", Xd = (e) => /^\w*$/.test(e), h$ = (e) => Ua(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Le = (e, t, r) => {
  let n = -1;
  const i = Xd(t) ? [t] : h$(t), a = i.length, o = a - 1;
  for (; ++n < a; ) {
    const s = i[n];
    let u = r;
    if (n !== o) {
      const l = e[s];
      u = nt(l) || Array.isArray(l) ? l : isNaN(+i[n + 1]) ? {} : [];
    }
    if (s === "__proto__")
      return;
    e[s] = u, e = e[s];
  }
  return e;
};
const Pp = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Vt = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, or = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
};
A.createContext(null);
var E8 = (e, t, r, n = !0) => {
  const i = {
    defaultValues: t._defaultValues
  };
  for (const a in e)
    Object.defineProperty(i, a, {
      get: () => {
        const o = a;
        return t._proxyFormState[o] !== Vt.all && (t._proxyFormState[o] = !n || Vt.all), e[o];
      }
    });
  return i;
}, wt = (e) => nt(e) && !Object.keys(e).length, w8 = (e, t, r, n) => {
  r(e);
  const { name: i, ...a } = e;
  return wt(a) || Object.keys(a).length >= Object.keys(t).length || Object.keys(a).find((o) => t[o] === Vt.all);
}, al = (e) => Array.isArray(e) ? e : [e];
function C8(e) {
  const t = A.useRef(e);
  t.current = e, A.useEffect(() => {
    const r = !e.disabled && t.current.subject && t.current.subject.subscribe({
      next: t.current.next
    });
    return () => {
      r && r.unsubscribe();
    };
  }, [e.disabled]);
}
var Gt = (e) => typeof e == "string", S8 = (e, t, r, n, i) => Gt(e) ? (n && t.watch.add(e), X(r, e, i)) : Array.isArray(e) ? e.map((a) => (n && t.watch.add(a), X(r, a))) : (n && (t.watchAll = !0), r), p$ = (e, t, r, n, i) => t ? {
  ...r[e],
  types: {
    ...r[e] && r[e].types ? r[e].types : {},
    [n]: i || !0
  }
} : {}, Tp = (e) => ({
  isOnSubmit: !e || e === Vt.onSubmit,
  isOnBlur: e === Vt.onBlur,
  isOnChange: e === Vt.onChange,
  isOnAll: e === Vt.all,
  isOnTouch: e === Vt.onTouched
}), Ap = (e, t, r) => !r && (t.watchAll || t.watch.has(e) || [...t.watch].some((n) => e.startsWith(n) && /^\.\w+/.test(e.slice(n.length))));
const ea = (e, t, r, n) => {
  for (const i of r || Object.keys(e)) {
    const a = X(e, i);
    if (a) {
      const { _f: o, ...s } = a;
      if (o) {
        if (o.refs && o.refs[0] && t(o.refs[0], i) && !n)
          break;
        if (o.ref && t(o.ref, o.name) && !n)
          break;
        ea(s, t);
      } else nt(s) && ea(s, t);
    }
  }
};
var k8 = (e, t, r) => {
  const n = Ua(X(e, r));
  return Le(n, "root", t[r]), Le(e, r, n), e;
}, ef = (e) => e.type === "file", Nr = (e) => typeof e == "function", ns = (e) => {
  if (!Jd)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, _o = (e) => Gt(e), tf = (e) => e.type === "radio", is = (e) => e instanceof RegExp;
const _p = {
  value: !1,
  isValid: !1
}, Fp = { value: !0, isValid: !0 };
var m$ = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((r) => r && r.checked && !r.disabled).map((r) => r.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !Qe(e[0].attributes.value) ? Qe(e[0].value) || e[0].value === "" ? Fp : { value: e[0].value, isValid: !0 } : Fp
    ) : _p;
  }
  return _p;
};
const Op = {
  isValid: !1,
  value: null
};
var v$ = (e) => Array.isArray(e) ? e.reduce((t, r) => r && r.checked && !r.disabled ? {
  isValid: !0,
  value: r.value
} : t, Op) : Op;
function Ip(e, t, r = "validate") {
  if (_o(e) || Array.isArray(e) && e.every(_o) || Br(e) && !e)
    return {
      type: r,
      message: _o(e) ? e : "",
      ref: t
    };
}
var _n = (e) => nt(e) && !is(e) ? e : {
  value: e,
  message: ""
}, Rp = async (e, t, r, n, i) => {
  const { ref: a, refs: o, required: s, maxLength: u, minLength: l, min: c, max: d, pattern: f, validate: h, name: p, valueAsNumber: v, mount: g, disabled: $ } = e._f, m = X(t, p);
  if (!g || $)
    return {};
  const b = o ? o[0] : a, D = (k) => {
    n && b.reportValidity && (b.setCustomValidity(Br(k) ? "" : k || ""), b.reportValidity());
  }, S = {}, P = tf(a), B = Ka(a), y = P || B, _ = (v || ef(a)) && Qe(a.value) && Qe(m) || ns(a) && a.value === "" || m === "" || Array.isArray(m) && !m.length, w = p$.bind(null, p, r, S), E = (k, C, T, L = or.maxLength, O = or.minLength) => {
    const x = k ? C : T;
    S[p] = {
      type: k ? L : O,
      message: x,
      ref: a,
      ...w(k ? L : O, x)
    };
  };
  if (i ? !Array.isArray(m) || !m.length : s && (!y && (_ || dt(m)) || Br(m) && !m || B && !m$(o).isValid || P && !v$(o).isValid)) {
    const { value: k, message: C } = _o(s) ? { value: !!s, message: s } : _n(s);
    if (k && (S[p] = {
      type: or.required,
      message: C,
      ref: b,
      ...w(or.required, C)
    }, !r))
      return D(C), S;
  }
  if (!_ && (!dt(c) || !dt(d))) {
    let k, C;
    const T = _n(d), L = _n(c);
    if (!dt(m) && !isNaN(m)) {
      const O = a.valueAsNumber || m && +m;
      dt(T.value) || (k = O > T.value), dt(L.value) || (C = O < L.value);
    } else {
      const O = a.valueAsDate || new Date(m), x = (j) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + j), U = a.type == "time", K = a.type == "week";
      Gt(T.value) && m && (k = U ? x(m) > x(T.value) : K ? m > T.value : O > new Date(T.value)), Gt(L.value) && m && (C = U ? x(m) < x(L.value) : K ? m < L.value : O < new Date(L.value));
    }
    if ((k || C) && (E(!!k, T.message, L.message, or.max, or.min), !r))
      return D(S[p].message), S;
  }
  if ((u || l) && !_ && (Gt(m) || i && Array.isArray(m))) {
    const k = _n(u), C = _n(l), T = !dt(k.value) && m.length > +k.value, L = !dt(C.value) && m.length < +C.value;
    if ((T || L) && (E(T, k.message, C.message), !r))
      return D(S[p].message), S;
  }
  if (f && !_ && Gt(m)) {
    const { value: k, message: C } = _n(f);
    if (is(k) && !m.match(k) && (S[p] = {
      type: or.pattern,
      message: C,
      ref: a,
      ...w(or.pattern, C)
    }, !r))
      return D(C), S;
  }
  if (h) {
    if (Nr(h)) {
      const k = await h(m, t), C = Ip(k, b);
      if (C && (S[p] = {
        ...C,
        ...w(or.validate, C.message)
      }, !r))
        return D(C.message), S;
    } else if (nt(h)) {
      let k = {};
      for (const C in h) {
        if (!wt(k) && !r)
          break;
        const T = Ip(await h[C](m, t), b, C);
        T && (k = {
          ...T,
          ...w(C, T.message)
        }, D(T.message), r && (S[p] = k));
      }
      if (!wt(k) && (S[p] = {
        ref: b,
        ...k
      }, !r))
        return S;
    }
  }
  return D(!0), S;
};
function P8(e, t) {
  const r = t.slice(0, -1).length;
  let n = 0;
  for (; n < r; )
    e = Qe(e) ? n++ : e[t[n++]];
  return e;
}
function T8(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !Qe(e[t]))
      return !1;
  return !0;
}
function rt(e, t) {
  const r = Array.isArray(t) ? t : Xd(t) ? [t] : h$(t), n = r.length === 1 ? e : P8(e, r), i = r.length - 1, a = r[i];
  return n && delete n[a], i !== 0 && (nt(n) && wt(n) || Array.isArray(n) && T8(n)) && rt(e, r.slice(0, -1)), e;
}
var ol = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (i) => {
      for (const a of e)
        a.next && a.next(i);
    },
    subscribe: (i) => (e.push(i), {
      unsubscribe: () => {
        e = e.filter((a) => a !== i);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, as = (e) => dt(e) || !f$(e);
function un(e, t) {
  if (as(e) || as(t))
    return e === t;
  if (Un(e) && Un(t))
    return e.getTime() === t.getTime();
  const r = Object.keys(e), n = Object.keys(t);
  if (r.length !== n.length)
    return !1;
  for (const i of r) {
    const a = e[i];
    if (!n.includes(i))
      return !1;
    if (i !== "ref") {
      const o = t[i];
      if (Un(a) && Un(o) || nt(a) && nt(o) || Array.isArray(a) && Array.isArray(o) ? !un(a, o) : a !== o)
        return !1;
    }
  }
  return !0;
}
var y$ = (e) => e.type === "select-multiple", A8 = (e) => tf(e) || Ka(e), sl = (e) => ns(e) && e.isConnected, g$ = (e) => {
  for (const t in e)
    if (Nr(e[t]))
      return !0;
  return !1;
};
function os(e, t = {}) {
  const r = Array.isArray(e);
  if (nt(e) || r)
    for (const n in e)
      Array.isArray(e[n]) || nt(e[n]) && !g$(e[n]) ? (t[n] = Array.isArray(e[n]) ? [] : {}, os(e[n], t[n])) : dt(e[n]) || (t[n] = !0);
  return t;
}
function b$(e, t, r) {
  const n = Array.isArray(e);
  if (nt(e) || n)
    for (const i in e)
      Array.isArray(e[i]) || nt(e[i]) && !g$(e[i]) ? Qe(t) || as(r[i]) ? r[i] = Array.isArray(e[i]) ? os(e[i], []) : { ...os(e[i]) } : b$(e[i], dt(t) ? {} : t[i], r[i]) : r[i] = !un(e[i], t[i]);
  return r;
}
var po = (e, t) => b$(e, t, os(t)), $$ = (e, { valueAsNumber: t, valueAsDate: r, setValueAs: n }) => Qe(e) ? e : t ? e === "" ? NaN : e && +e : r && Gt(e) ? new Date(e) : n ? n(e) : e;
function ul(e) {
  const t = e.ref;
  if (!(e.refs ? e.refs.every((r) => r.disabled) : t.disabled))
    return ef(t) ? t.files : tf(t) ? v$(e.refs).value : y$(t) ? [...t.selectedOptions].map(({ value: r }) => r) : Ka(t) ? m$(e.refs).value : $$(Qe(t.value) ? e.ref.value : t.value, e);
}
var _8 = (e, t, r, n) => {
  const i = {};
  for (const a of e) {
    const o = X(t, a);
    o && Le(i, a, o._f);
  }
  return {
    criteriaMode: r,
    names: [...e],
    fields: i,
    shouldUseNativeValidation: n
  };
}, Mi = (e) => Qe(e) ? e : is(e) ? e.source : nt(e) ? is(e.value) ? e.value.source : e.value : e, F8 = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate);
function Bp(e, t, r) {
  const n = X(e, r);
  if (n || Xd(r))
    return {
      error: n,
      name: r
    };
  const i = r.split(".");
  for (; i.length; ) {
    const a = i.join("."), o = X(t, a), s = X(e, a);
    if (o && !Array.isArray(o) && r !== a)
      return { name: r };
    if (s && s.type)
      return {
        name: a,
        error: s
      };
    i.pop();
  }
  return {
    name: r
  };
}
var O8 = (e, t, r, n, i) => i.isOnAll ? !1 : !r && i.isOnTouch ? !(t || e) : (r ? n.isOnBlur : i.isOnBlur) ? !e : (r ? n.isOnChange : i.isOnChange) ? e : !0, I8 = (e, t) => !Ua(X(e, t)).length && rt(e, t);
const R8 = {
  mode: Vt.onSubmit,
  reValidateMode: Vt.onChange,
  shouldFocusError: !0
};
function B8(e = {}) {
  let t = {
    ...R8,
    ...e
  }, r = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Nr(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  }, n = {}, i = nt(t.defaultValues) || nt(t.values) ? Tt(t.defaultValues || t.values) || {} : {}, a = t.shouldUnregister ? {} : Tt(i), o = {
    action: !1,
    mount: !1,
    watch: !1
  }, s = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, u, l = 0;
  const c = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }, d = {
    values: ol(),
    array: ol(),
    state: ol()
  }, f = Tp(t.mode), h = Tp(t.reValidateMode), p = t.criteriaMode === Vt.all, v = (F) => (I) => {
    clearTimeout(l), l = setTimeout(F, I);
  }, g = async (F) => {
    if (c.isValid || F) {
      const I = t.resolver ? wt((await y()).errors) : await w(n, !0);
      I !== r.isValid && d.state.next({
        isValid: I
      });
    }
  }, $ = (F, I) => {
    (c.isValidating || c.validatingFields) && ((F || Array.from(s.mount)).forEach((N) => {
      N && (I ? Le(r.validatingFields, N, I) : rt(r.validatingFields, N));
    }), d.state.next({
      validatingFields: r.validatingFields,
      isValidating: !wt(r.validatingFields)
    }));
  }, m = (F, I = [], N, W, Z = !0, Q = !0) => {
    if (W && N) {
      if (o.action = !0, Q && Array.isArray(X(n, F))) {
        const ce = N(X(n, F), W.argA, W.argB);
        Z && Le(n, F, ce);
      }
      if (Q && Array.isArray(X(r.errors, F))) {
        const ce = N(X(r.errors, F), W.argA, W.argB);
        Z && Le(r.errors, F, ce), I8(r.errors, F);
      }
      if (c.touchedFields && Q && Array.isArray(X(r.touchedFields, F))) {
        const ce = N(X(r.touchedFields, F), W.argA, W.argB);
        Z && Le(r.touchedFields, F, ce);
      }
      c.dirtyFields && (r.dirtyFields = po(i, a)), d.state.next({
        name: F,
        isDirty: k(F, I),
        dirtyFields: r.dirtyFields,
        errors: r.errors,
        isValid: r.isValid
      });
    } else
      Le(a, F, I);
  }, b = (F, I) => {
    Le(r.errors, F, I), d.state.next({
      errors: r.errors
    });
  }, D = (F) => {
    r.errors = F, d.state.next({
      errors: r.errors,
      isValid: !1
    });
  }, S = (F, I, N, W) => {
    const Z = X(n, F);
    if (Z) {
      const Q = X(a, F, Qe(N) ? X(i, F) : N);
      Qe(Q) || W && W.defaultChecked || I ? Le(a, F, I ? Q : ul(Z._f)) : L(F, Q), o.mount && g();
    }
  }, P = (F, I, N, W, Z) => {
    let Q = !1, ce = !1;
    const Pe = {
      name: F
    }, Ye = !!(X(n, F) && X(n, F)._f && X(n, F)._f.disabled);
    if (!N || W) {
      c.isDirty && (ce = r.isDirty, r.isDirty = Pe.isDirty = k(), Q = ce !== Pe.isDirty);
      const Et = Ye || un(X(i, F), I);
      ce = !!(!Ye && X(r.dirtyFields, F)), Et || Ye ? rt(r.dirtyFields, F) : Le(r.dirtyFields, F, !0), Pe.dirtyFields = r.dirtyFields, Q = Q || c.dirtyFields && ce !== !Et;
    }
    if (N) {
      const Et = X(r.touchedFields, F);
      Et || (Le(r.touchedFields, F, N), Pe.touchedFields = r.touchedFields, Q = Q || c.touchedFields && Et !== N);
    }
    return Q && Z && d.state.next(Pe), Q ? Pe : {};
  }, B = (F, I, N, W) => {
    const Z = X(r.errors, F), Q = c.isValid && Br(I) && r.isValid !== I;
    if (e.delayError && N ? (u = v(() => b(F, N)), u(e.delayError)) : (clearTimeout(l), u = null, N ? Le(r.errors, F, N) : rt(r.errors, F)), (N ? !un(Z, N) : Z) || !wt(W) || Q) {
      const ce = {
        ...W,
        ...Q && Br(I) ? { isValid: I } : {},
        errors: r.errors,
        name: F
      };
      r = {
        ...r,
        ...ce
      }, d.state.next(ce);
    }
  }, y = async (F) => {
    $(F, !0);
    const I = await t.resolver(a, t.context, _8(F || s.mount, n, t.criteriaMode, t.shouldUseNativeValidation));
    return $(F), I;
  }, _ = async (F) => {
    const { errors: I } = await y(F);
    if (F)
      for (const N of F) {
        const W = X(I, N);
        W ? Le(r.errors, N, W) : rt(r.errors, N);
      }
    else
      r.errors = I;
    return I;
  }, w = async (F, I, N = {
    valid: !0
  }) => {
    for (const W in F) {
      const Z = F[W];
      if (Z) {
        const { _f: Q, ...ce } = Z;
        if (Q) {
          const Pe = s.array.has(Q.name);
          $([W], !0);
          const Ye = await Rp(Z, a, p, t.shouldUseNativeValidation && !I, Pe);
          if ($([W]), Ye[Q.name] && (N.valid = !1, I))
            break;
          !I && (X(Ye, Q.name) ? Pe ? k8(r.errors, Ye, Q.name) : Le(r.errors, Q.name, Ye[Q.name]) : rt(r.errors, Q.name));
        }
        ce && await w(ce, I, N);
      }
    }
    return N.valid;
  }, E = () => {
    for (const F of s.unMount) {
      const I = X(n, F);
      I && (I._f.refs ? I._f.refs.every((N) => !sl(N)) : !sl(I._f.ref)) && Fe(F);
    }
    s.unMount = /* @__PURE__ */ new Set();
  }, k = (F, I) => (F && I && Le(a, F, I), !un(ae(), i)), C = (F, I, N) => S8(F, s, {
    ...o.mount ? a : Qe(I) ? i : Gt(F) ? { [F]: I } : I
  }, N, I), T = (F) => Ua(X(o.mount ? a : i, F, e.shouldUnregister ? X(i, F, []) : [])), L = (F, I, N = {}) => {
    const W = X(n, F);
    let Z = I;
    if (W) {
      const Q = W._f;
      Q && (!Q.disabled && Le(a, F, $$(I, Q)), Z = ns(Q.ref) && dt(I) ? "" : I, y$(Q.ref) ? [...Q.ref.options].forEach((ce) => ce.selected = Z.includes(ce.value)) : Q.refs ? Ka(Q.ref) ? Q.refs.length > 1 ? Q.refs.forEach((ce) => (!ce.defaultChecked || !ce.disabled) && (ce.checked = Array.isArray(Z) ? !!Z.find((Pe) => Pe === ce.value) : Z === ce.value)) : Q.refs[0] && (Q.refs[0].checked = !!Z) : Q.refs.forEach((ce) => ce.checked = ce.value === Z) : ef(Q.ref) ? Q.ref.value = "" : (Q.ref.value = Z, Q.ref.type || d.values.next({
        name: F,
        values: { ...a }
      })));
    }
    (N.shouldDirty || N.shouldTouch) && P(F, Z, N.shouldTouch, N.shouldDirty, !0), N.shouldValidate && j(F);
  }, O = (F, I, N) => {
    for (const W in I) {
      const Z = I[W], Q = `${F}.${W}`, ce = X(n, Q);
      (s.array.has(F) || !as(Z) || ce && !ce._f) && !Un(Z) ? O(Q, Z, N) : L(Q, Z, N);
    }
  }, x = (F, I, N = {}) => {
    const W = X(n, F), Z = s.array.has(F), Q = Tt(I);
    Le(a, F, Q), Z ? (d.array.next({
      name: F,
      values: { ...a }
    }), (c.isDirty || c.dirtyFields) && N.shouldDirty && d.state.next({
      name: F,
      dirtyFields: po(i, a),
      isDirty: k(F, Q)
    })) : W && !W._f && !dt(Q) ? O(F, Q, N) : L(F, Q, N), Ap(F, s) && d.state.next({ ...r }), d.values.next({
      name: o.mount ? F : void 0,
      values: { ...a }
    });
  }, U = async (F) => {
    o.mount = !0;
    const I = F.target;
    let N = I.name, W = !0;
    const Z = X(n, N), Q = () => I.type ? ul(Z._f) : b8(F), ce = (Pe) => {
      W = Number.isNaN(Pe) || Pe === X(a, N, Pe);
    };
    if (Z) {
      let Pe, Ye;
      const Et = Q(), kn = F.type === Pp.BLUR || F.type === Pp.FOCUS_OUT, N$ = !F8(Z._f) && !t.resolver && !X(r.errors, N) && !Z._f.deps || O8(kn, X(r.touchedFields, N), r.isSubmitted, h, f), du = Ap(N, s, kn);
      Le(a, N, Et), kn ? (Z._f.onBlur && Z._f.onBlur(F), u && u(0)) : Z._f.onChange && Z._f.onChange(F);
      const fu = P(N, Et, kn, !1), L$ = !wt(fu) || du;
      if (!kn && d.values.next({
        name: N,
        type: F.type,
        values: { ...a }
      }), N$)
        return c.isValid && g(), L$ && d.state.next({ name: N, ...du ? {} : fu });
      if (!kn && du && d.state.next({ ...r }), t.resolver) {
        const { errors: lf } = await y([N]);
        if (ce(Et), W) {
          const V$ = Bp(r.errors, n, N), cf = Bp(lf, n, V$.name || N);
          Pe = cf.error, N = cf.name, Ye = wt(lf);
        }
      } else
        $([N], !0), Pe = (await Rp(Z, a, p, t.shouldUseNativeValidation))[N], $([N]), ce(Et), W && (Pe ? Ye = !1 : c.isValid && (Ye = await w(n, !0)));
      W && (Z._f.deps && j(Z._f.deps), B(N, Ye, Pe, fu));
    }
  }, K = (F, I) => {
    if (X(r.errors, I) && F.focus)
      return F.focus(), 1;
  }, j = async (F, I = {}) => {
    let N, W;
    const Z = al(F);
    if (t.resolver) {
      const Q = await _(Qe(F) ? F : Z);
      N = wt(Q), W = F ? !Z.some((ce) => X(Q, ce)) : N;
    } else F ? (W = (await Promise.all(Z.map(async (Q) => {
      const ce = X(n, Q);
      return await w(ce && ce._f ? { [Q]: ce } : ce);
    }))).every(Boolean), !(!W && !r.isValid) && g()) : W = N = await w(n);
    return d.state.next({
      ...!Gt(F) || c.isValid && N !== r.isValid ? {} : { name: F },
      ...t.resolver || !F ? { isValid: N } : {},
      errors: r.errors
    }), I.shouldFocus && !W && ea(n, K, F ? Z : s.mount), W;
  }, ae = (F) => {
    const I = {
      ...o.mount ? a : i
    };
    return Qe(F) ? I : Gt(F) ? X(I, F) : F.map((N) => X(I, N));
  }, ne = (F, I) => ({
    invalid: !!X((I || r).errors, F),
    isDirty: !!X((I || r).dirtyFields, F),
    error: X((I || r).errors, F),
    isValidating: !!X(r.validatingFields, F),
    isTouched: !!X((I || r).touchedFields, F)
  }), me = (F) => {
    F && al(F).forEach((I) => rt(r.errors, I)), d.state.next({
      errors: F ? r.errors : {}
    });
  }, xe = (F, I, N) => {
    const W = (X(n, F, { _f: {} })._f || {}).ref, Z = X(r.errors, F) || {}, { ref: Q, message: ce, type: Pe, ...Ye } = Z;
    Le(r.errors, F, {
      ...Ye,
      ...I,
      ref: W
    }), d.state.next({
      name: F,
      errors: r.errors,
      isValid: !1
    }), N && N.shouldFocus && W && W.focus && W.focus();
  }, _e = (F, I) => Nr(F) ? d.values.subscribe({
    next: (N) => F(C(void 0, I), N)
  }) : C(F, I, !0), Fe = (F, I = {}) => {
    for (const N of F ? al(F) : s.mount)
      s.mount.delete(N), s.array.delete(N), I.keepValue || (rt(n, N), rt(a, N)), !I.keepError && rt(r.errors, N), !I.keepDirty && rt(r.dirtyFields, N), !I.keepTouched && rt(r.touchedFields, N), !I.keepIsValidating && rt(r.validatingFields, N), !t.shouldUnregister && !I.keepDefaultValue && rt(i, N);
    d.values.next({
      values: { ...a }
    }), d.state.next({
      ...r,
      ...I.keepDirty ? { isDirty: k() } : {}
    }), !I.keepIsValid && g();
  }, V = ({ disabled: F, name: I, field: N, fields: W, value: Z }) => {
    if (Br(F) && o.mount || F) {
      const Q = F ? void 0 : Qe(Z) ? ul(N ? N._f : X(W, I)._f) : Z;
      Le(a, I, Q), P(I, Q, !1, !1, !0);
    }
  }, ie = (F, I = {}) => {
    let N = X(n, F);
    const W = Br(I.disabled);
    return Le(n, F, {
      ...N || {},
      _f: {
        ...N && N._f ? N._f : { ref: { name: F } },
        name: F,
        mount: !0,
        ...I
      }
    }), s.mount.add(F), N ? V({
      field: N,
      disabled: I.disabled,
      name: F,
      value: I.value
    }) : S(F, !0, I.value), {
      ...W ? { disabled: I.disabled } : {},
      ...t.progressive ? {
        required: !!I.required,
        min: Mi(I.min),
        max: Mi(I.max),
        minLength: Mi(I.minLength),
        maxLength: Mi(I.maxLength),
        pattern: Mi(I.pattern)
      } : {},
      name: F,
      onChange: U,
      onBlur: U,
      ref: (Z) => {
        if (Z) {
          ie(F, I), N = X(n, F);
          const Q = Qe(Z.value) && Z.querySelectorAll && Z.querySelectorAll("input,select,textarea")[0] || Z, ce = A8(Q), Pe = N._f.refs || [];
          if (ce ? Pe.find((Ye) => Ye === Q) : Q === N._f.ref)
            return;
          Le(n, F, {
            _f: {
              ...N._f,
              ...ce ? {
                refs: [
                  ...Pe.filter(sl),
                  Q,
                  ...Array.isArray(X(i, F)) ? [{}] : []
                ],
                ref: { type: Q.type, name: F }
              } : { ref: Q }
            }
          }), S(F, !1, void 0, Q);
        } else
          N = X(n, F, {}), N._f && (N._f.mount = !1), (t.shouldUnregister || I.shouldUnregister) && !(x8(s.array, F) && o.action) && s.unMount.add(F);
      }
    };
  }, we = () => t.shouldFocusError && ea(n, K, s.mount), ze = (F) => {
    Br(F) && (d.state.next({ disabled: F }), ea(n, (I, N) => {
      const W = X(n, N);
      W && (I.disabled = W._f.disabled || F, Array.isArray(W._f.refs) && W._f.refs.forEach((Z) => {
        Z.disabled = W._f.disabled || F;
      }));
    }, 0, !1));
  }, He = (F, I) => async (N) => {
    let W;
    N && (N.preventDefault && N.preventDefault(), N.persist && N.persist());
    let Z = Tt(a);
    if (d.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: Q, values: ce } = await y();
      r.errors = Q, Z = ce;
    } else
      await w(n);
    if (rt(r.errors, "root"), wt(r.errors)) {
      d.state.next({
        errors: {}
      });
      try {
        await F(Z, N);
      } catch (Q) {
        W = Q;
      }
    } else
      I && await I({ ...r.errors }, N), we(), setTimeout(we);
    if (d.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: wt(r.errors) && !W,
      submitCount: r.submitCount + 1,
      errors: r.errors
    }), W)
      throw W;
  }, Sr = (F, I = {}) => {
    X(n, F) && (Qe(I.defaultValue) ? x(F, Tt(X(i, F))) : (x(F, I.defaultValue), Le(i, F, Tt(I.defaultValue))), I.keepTouched || rt(r.touchedFields, F), I.keepDirty || (rt(r.dirtyFields, F), r.isDirty = I.defaultValue ? k(F, Tt(X(i, F))) : k()), I.keepError || (rt(r.errors, F), c.isValid && g()), d.state.next({ ...r }));
  }, Zr = (F, I = {}) => {
    const N = F ? Tt(F) : i, W = Tt(N), Z = wt(F), Q = Z ? i : W;
    if (I.keepDefaultValues || (i = N), !I.keepValues) {
      if (I.keepDirtyValues)
        for (const ce of s.mount)
          X(r.dirtyFields, ce) ? Le(Q, ce, X(a, ce)) : x(ce, X(Q, ce));
      else {
        if (Jd && Qe(F))
          for (const ce of s.mount) {
            const Pe = X(n, ce);
            if (Pe && Pe._f) {
              const Ye = Array.isArray(Pe._f.refs) ? Pe._f.refs[0] : Pe._f.ref;
              if (ns(Ye)) {
                const Et = Ye.closest("form");
                if (Et) {
                  Et.reset();
                  break;
                }
              }
            }
          }
        n = {};
      }
      a = e.shouldUnregister ? I.keepDefaultValues ? Tt(i) : {} : Tt(Q), d.array.next({
        values: { ...Q }
      }), d.values.next({
        values: { ...Q }
      });
    }
    s = {
      mount: I.keepDirtyValues ? s.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, o.mount = !c.isValid || !!I.keepIsValid || !!I.keepDirtyValues, o.watch = !!e.shouldUnregister, d.state.next({
      submitCount: I.keepSubmitCount ? r.submitCount : 0,
      isDirty: Z ? !1 : I.keepDirty ? r.isDirty : !!(I.keepDefaultValues && !un(F, i)),
      isSubmitted: I.keepIsSubmitted ? r.isSubmitted : !1,
      dirtyFields: Z ? [] : I.keepDirtyValues ? I.keepDefaultValues && a ? po(i, a) : r.dirtyFields : I.keepDefaultValues && F ? po(i, F) : I.keepDirty ? r.dirtyFields : {},
      touchedFields: I.keepTouched ? r.touchedFields : {},
      errors: I.keepErrors ? r.errors : {},
      isSubmitSuccessful: I.keepIsSubmitSuccessful ? r.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Sn = (F, I) => Zr(Nr(F) ? F(a) : F, I);
  return {
    control: {
      register: ie,
      unregister: Fe,
      getFieldState: ne,
      handleSubmit: He,
      setError: xe,
      _executeSchema: y,
      _getWatch: C,
      _getDirty: k,
      _updateValid: g,
      _removeUnmounted: E,
      _updateFieldArray: m,
      _updateDisabledField: V,
      _getFieldArray: T,
      _reset: Zr,
      _resetDefaultValues: () => Nr(t.defaultValues) && t.defaultValues().then((F) => {
        Sn(F, t.resetOptions), d.state.next({
          isLoading: !1
        });
      }),
      _updateFormState: (F) => {
        r = {
          ...r,
          ...F
        };
      },
      _disableForm: ze,
      _subjects: d,
      _proxyFormState: c,
      _setErrors: D,
      get _fields() {
        return n;
      },
      get _formValues() {
        return a;
      },
      get _state() {
        return o;
      },
      set _state(F) {
        o = F;
      },
      get _defaultValues() {
        return i;
      },
      get _names() {
        return s;
      },
      set _names(F) {
        s = F;
      },
      get _formState() {
        return r;
      },
      set _formState(F) {
        r = F;
      },
      get _options() {
        return t;
      },
      set _options(F) {
        t = {
          ...t,
          ...F
        };
      }
    },
    trigger: j,
    register: ie,
    handleSubmit: He,
    watch: _e,
    setValue: x,
    getValues: ae,
    reset: Sn,
    resetField: Sr,
    clearErrors: me,
    unregister: Fe,
    setError: xe,
    setFocus: (F, I = {}) => {
      const N = X(n, F), W = N && N._f;
      if (W) {
        const Z = W.refs ? W.refs[0] : W.ref;
        Z.focus && (Z.focus(), I.shouldSelect && Z.select());
      }
    },
    getFieldState: ne
  };
}
function x$(e = {}) {
  const t = A.useRef(), r = A.useRef(), [n, i] = A.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Nr(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Nr(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...B8(e),
    formState: n
  });
  const a = t.current.control;
  return a._options = e, C8({
    subject: a._subjects.state,
    next: (o) => {
      w8(o, a._proxyFormState, a._updateFormState) && i({ ...a._formState });
    }
  }), A.useEffect(() => a._disableForm(e.disabled), [a, e.disabled]), A.useEffect(() => {
    if (a._proxyFormState.isDirty) {
      const o = a._getDirty();
      o !== n.isDirty && a._subjects.state.next({
        isDirty: o
      });
    }
  }, [a, n.isDirty]), A.useEffect(() => {
    e.values && !un(e.values, r.current) ? (a._reset(e.values, a._options.resetOptions), r.current = e.values, i((o) => ({ ...o }))) : a._resetDefaultValues();
  }, [e.values, a]), A.useEffect(() => {
    e.errors && a._setErrors(e.errors);
  }, [e.errors, a]), A.useEffect(() => {
    a._state.mount || (a._updateValid(), a._state.mount = !0), a._state.watch && (a._state.watch = !1, a._subjects.state.next({ ...a._formState })), a._removeUnmounted();
  }), A.useEffect(() => {
    e.shouldUnregister && a._subjects.values.next({
      values: a._getWatch()
    });
  }, [e.shouldUnregister, a]), t.current.formState = E8(n, a), t.current;
}
var Mp = function(e, t, r) {
  if (e && "reportValidity" in e) {
    var n = X(r, t);
    e.setCustomValidity(n && n.message || ""), e.reportValidity();
  }
}, D$ = function(e, t) {
  var r = function(i) {
    var a = t.fields[i];
    a && a.ref && "reportValidity" in a.ref ? Mp(a.ref, i, e) : a.refs && a.refs.forEach(function(o) {
      return Mp(o, i, e);
    });
  };
  for (var n in t.fields) r(n);
}, M8 = function(e) {
  return e instanceof Date;
}, N8 = function(e) {
  return e == null;
}, L8 = function(e) {
  return typeof e == "object";
}, V8 = function(e) {
  return !N8(e) && !Array.isArray(e) && L8(e) && !M8(e);
}, j8 = function(e) {
  return /^\w*$/.test(e);
}, ll = function(e, t, r) {
  for (var n = -1, i = j8(t) ? [t] : function(c) {
    return d = c.replace(/["|']|\]/g, "").split(/\.|\[/), Array.isArray(d) ? d.filter(Boolean) : [];
    var d;
  }(t), a = i.length, o = a - 1; ++n < a; ) {
    var s = i[n], u = r;
    if (n !== o) {
      var l = e[s];
      u = V8(l) || Array.isArray(l) ? l : isNaN(+i[n + 1]) ? {} : [];
    }
    e[s] = u, e = e[s];
  }
  return e;
}, z8 = function(e, t) {
  t.shouldUseNativeValidation && D$(e, t);
  var r = {};
  for (var n in e) {
    var i = X(t.fields, n), a = Object.assign(e[n] || {}, { ref: i && i.ref });
    if (K8(t.names || Object.keys(e), n)) {
      var o = Object.assign({}, X(r, n));
      ll(o, "root", a), ll(r, n, o);
    } else ll(r, n, a);
  }
  return r;
}, K8 = function(e, t) {
  return e.some(function(r) {
    return r.startsWith(t + ".");
  });
}, U8 = function(e, t) {
  for (var r = {}; e.length; ) {
    var n = e[0], i = n.code, a = n.message, o = n.path.join(".");
    if (!r[o]) if ("unionErrors" in n) {
      var s = n.unionErrors[0].errors[0];
      r[o] = { message: s.message, type: s.code };
    } else r[o] = { message: a, type: i };
    if ("unionErrors" in n && n.unionErrors.forEach(function(c) {
      return c.errors.forEach(function(d) {
        return e.push(d);
      });
    }), t) {
      var u = r[o].types, l = u && u[n.code];
      r[o] = p$(o, t, r, i, l ? [].concat(l, n.message) : n.message);
    }
    e.shift();
  }
  return r;
}, E$ = function(e, t, r) {
  return r === void 0 && (r = {}), function(n, i, a) {
    try {
      return Promise.resolve(function(o, s) {
        try {
          var u = Promise.resolve(e[r.mode === "sync" ? "parse" : "parseAsync"](n, t)).then(function(l) {
            return a.shouldUseNativeValidation && D$({}, a), { errors: {}, values: r.raw ? n : l };
          });
        } catch (l) {
          return s(l);
        }
        return u && u.then ? u.then(void 0, s) : u;
      }(0, function(o) {
        if (function(s) {
          return s.errors != null;
        }(o)) return { values: {}, errors: z8(U8(o.errors, !a.shouldUseNativeValidation && a.criteriaMode === "all"), a) };
        throw o;
      }));
    } catch (o) {
      return Promise.reject(o);
    }
  };
}, Se;
(function(e) {
  e.assertEqual = (i) => i;
  function t(i) {
  }
  e.assertIs = t;
  function r(i) {
    throw new Error();
  }
  e.assertNever = r, e.arrayToEnum = (i) => {
    const a = {};
    for (const o of i)
      a[o] = o;
    return a;
  }, e.getValidEnumValues = (i) => {
    const a = e.objectKeys(i).filter((s) => typeof i[i[s]] != "number"), o = {};
    for (const s of a)
      o[s] = i[s];
    return e.objectValues(o);
  }, e.objectValues = (i) => e.objectKeys(i).map(function(a) {
    return i[a];
  }), e.objectKeys = typeof Object.keys == "function" ? (i) => Object.keys(i) : (i) => {
    const a = [];
    for (const o in i)
      Object.prototype.hasOwnProperty.call(i, o) && a.push(o);
    return a;
  }, e.find = (i, a) => {
    for (const o of i)
      if (a(o))
        return o;
  }, e.isInteger = typeof Number.isInteger == "function" ? (i) => Number.isInteger(i) : (i) => typeof i == "number" && isFinite(i) && Math.floor(i) === i;
  function n(i, a = " | ") {
    return i.map((o) => typeof o == "string" ? `'${o}'` : o).join(a);
  }
  e.joinValues = n, e.jsonStringifyReplacer = (i, a) => typeof a == "bigint" ? a.toString() : a;
})(Se || (Se = {}));
var Np;
(function(e) {
  e.mergeShapes = (t, r) => ({
    ...t,
    ...r
    // second overwrites first
  });
})(Np || (Np = {}));
const J = Se.arrayToEnum([
  "string",
  "nan",
  "number",
  "integer",
  "float",
  "boolean",
  "date",
  "bigint",
  "symbol",
  "function",
  "undefined",
  "null",
  "array",
  "object",
  "unknown",
  "promise",
  "void",
  "never",
  "map",
  "set"
]), tn = (e) => {
  switch (typeof e) {
    case "undefined":
      return J.undefined;
    case "string":
      return J.string;
    case "number":
      return isNaN(e) ? J.nan : J.number;
    case "boolean":
      return J.boolean;
    case "function":
      return J.function;
    case "bigint":
      return J.bigint;
    case "symbol":
      return J.symbol;
    case "object":
      return Array.isArray(e) ? J.array : e === null ? J.null : e.then && typeof e.then == "function" && e.catch && typeof e.catch == "function" ? J.promise : typeof Map < "u" && e instanceof Map ? J.map : typeof Set < "u" && e instanceof Set ? J.set : typeof Date < "u" && e instanceof Date ? J.date : J.object;
    default:
      return J.unknown;
  }
}, H = Se.arrayToEnum([
  "invalid_type",
  "invalid_literal",
  "custom",
  "invalid_union",
  "invalid_union_discriminator",
  "invalid_enum_value",
  "unrecognized_keys",
  "invalid_arguments",
  "invalid_return_type",
  "invalid_date",
  "invalid_string",
  "too_small",
  "too_big",
  "invalid_intersection_types",
  "not_multiple_of",
  "not_finite"
]);
class It extends Error {
  constructor(t) {
    super(), this.issues = [], this.addIssue = (n) => {
      this.issues = [...this.issues, n];
    }, this.addIssues = (n = []) => {
      this.issues = [...this.issues, ...n];
    };
    const r = new.target.prototype;
    Object.setPrototypeOf ? Object.setPrototypeOf(this, r) : this.__proto__ = r, this.name = "ZodError", this.issues = t;
  }
  get errors() {
    return this.issues;
  }
  format(t) {
    const r = t || function(a) {
      return a.message;
    }, n = { _errors: [] }, i = (a) => {
      for (const o of a.issues)
        if (o.code === "invalid_union")
          o.unionErrors.map(i);
        else if (o.code === "invalid_return_type")
          i(o.returnTypeError);
        else if (o.code === "invalid_arguments")
          i(o.argumentsError);
        else if (o.path.length === 0)
          n._errors.push(r(o));
        else {
          let s = n, u = 0;
          for (; u < o.path.length; ) {
            const l = o.path[u];
            u === o.path.length - 1 ? (s[l] = s[l] || { _errors: [] }, s[l]._errors.push(r(o))) : s[l] = s[l] || { _errors: [] }, s = s[l], u++;
          }
        }
    };
    return i(this), n;
  }
  static assert(t) {
    if (!(t instanceof It))
      throw new Error(`Not a ZodError: ${t}`);
  }
  toString() {
    return this.message;
  }
  get message() {
    return JSON.stringify(this.issues, Se.jsonStringifyReplacer, 2);
  }
  get isEmpty() {
    return this.issues.length === 0;
  }
  flatten(t = (r) => r.message) {
    const r = {}, n = [];
    for (const i of this.issues)
      i.path.length > 0 ? (r[i.path[0]] = r[i.path[0]] || [], r[i.path[0]].push(t(i))) : n.push(t(i));
    return { formErrors: n, fieldErrors: r };
  }
  get formErrors() {
    return this.flatten();
  }
}
It.create = (e) => new It(e);
const Ca = (e, t) => {
  let r;
  switch (e.code) {
    case H.invalid_type:
      e.received === J.undefined ? r = "Required" : r = `Expected ${e.expected}, received ${e.received}`;
      break;
    case H.invalid_literal:
      r = `Invalid literal value, expected ${JSON.stringify(e.expected, Se.jsonStringifyReplacer)}`;
      break;
    case H.unrecognized_keys:
      r = `Unrecognized key(s) in object: ${Se.joinValues(e.keys, ", ")}`;
      break;
    case H.invalid_union:
      r = "Invalid input";
      break;
    case H.invalid_union_discriminator:
      r = `Invalid discriminator value. Expected ${Se.joinValues(e.options)}`;
      break;
    case H.invalid_enum_value:
      r = `Invalid enum value. Expected ${Se.joinValues(e.options)}, received '${e.received}'`;
      break;
    case H.invalid_arguments:
      r = "Invalid function arguments";
      break;
    case H.invalid_return_type:
      r = "Invalid function return type";
      break;
    case H.invalid_date:
      r = "Invalid date";
      break;
    case H.invalid_string:
      typeof e.validation == "object" ? "includes" in e.validation ? (r = `Invalid input: must include "${e.validation.includes}"`, typeof e.validation.position == "number" && (r = `${r} at one or more positions greater than or equal to ${e.validation.position}`)) : "startsWith" in e.validation ? r = `Invalid input: must start with "${e.validation.startsWith}"` : "endsWith" in e.validation ? r = `Invalid input: must end with "${e.validation.endsWith}"` : Se.assertNever(e.validation) : e.validation !== "regex" ? r = `Invalid ${e.validation}` : r = "Invalid";
      break;
    case H.too_small:
      e.type === "array" ? r = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "more than"} ${e.minimum} element(s)` : e.type === "string" ? r = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "over"} ${e.minimum} character(s)` : e.type === "number" ? r = `Number must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "greater than "}${e.minimum}` : e.type === "date" ? r = `Date must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(e.minimum))}` : r = "Invalid input";
      break;
    case H.too_big:
      e.type === "array" ? r = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "less than"} ${e.maximum} element(s)` : e.type === "string" ? r = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "under"} ${e.maximum} character(s)` : e.type === "number" ? r = `Number must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` : e.type === "bigint" ? r = `BigInt must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` : e.type === "date" ? r = `Date must be ${e.exact ? "exactly" : e.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(e.maximum))}` : r = "Invalid input";
      break;
    case H.custom:
      r = "Invalid input";
      break;
    case H.invalid_intersection_types:
      r = "Intersection results could not be merged";
      break;
    case H.not_multiple_of:
      r = `Number must be a multiple of ${e.multipleOf}`;
      break;
    case H.not_finite:
      r = "Number must be finite";
      break;
    default:
      r = t.defaultError, Se.assertNever(e);
  }
  return { message: r };
};
let q8 = Ca;
function Ec() {
  return q8;
}
const wc = (e) => {
  const { data: t, path: r, errorMaps: n, issueData: i } = e, a = [...r, ...i.path || []], o = {
    ...i,
    path: a
  };
  if (i.message !== void 0)
    return {
      ...i,
      path: a,
      message: i.message
    };
  let s = "";
  const u = n.filter((l) => !!l).slice().reverse();
  for (const l of u)
    s = l(o, { data: t, defaultError: s }).message;
  return {
    ...i,
    path: a,
    message: s
  };
};
function Y(e, t) {
  const r = Ec(), n = wc({
    issueData: t,
    data: e.data,
    path: e.path,
    errorMaps: [
      e.common.contextualErrorMap,
      e.schemaErrorMap,
      r,
      r === Ca ? void 0 : Ca
      // then global default map
    ].filter((i) => !!i)
  });
  e.common.issues.push(n);
}
class pt {
  constructor() {
    this.value = "valid";
  }
  dirty() {
    this.value === "valid" && (this.value = "dirty");
  }
  abort() {
    this.value !== "aborted" && (this.value = "aborted");
  }
  static mergeArray(t, r) {
    const n = [];
    for (const i of r) {
      if (i.status === "aborted")
        return he;
      i.status === "dirty" && t.dirty(), n.push(i.value);
    }
    return { status: t.value, value: n };
  }
  static async mergeObjectAsync(t, r) {
    const n = [];
    for (const i of r) {
      const a = await i.key, o = await i.value;
      n.push({
        key: a,
        value: o
      });
    }
    return pt.mergeObjectSync(t, n);
  }
  static mergeObjectSync(t, r) {
    const n = {};
    for (const i of r) {
      const { key: a, value: o } = i;
      if (a.status === "aborted" || o.status === "aborted")
        return he;
      a.status === "dirty" && t.dirty(), o.status === "dirty" && t.dirty(), a.value !== "__proto__" && (typeof o.value < "u" || i.alwaysSet) && (n[a.value] = o.value);
    }
    return { status: t.value, value: n };
  }
}
const he = Object.freeze({
  status: "aborted"
}), zi = (e) => ({ status: "dirty", value: e }), xt = (e) => ({ status: "valid", value: e }), Lp = (e) => e.status === "aborted", Vp = (e) => e.status === "dirty", ss = (e) => e.status === "valid", us = (e) => typeof Promise < "u" && e instanceof Promise;
function ls(e, t, r, n) {
  if (typeof t == "function" ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return t.get(e);
}
function w$(e, t, r, n, i) {
  if (typeof t == "function" ? e !== t || !i : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return t.set(e, r), r;
}
var se;
(function(e) {
  e.errToObj = (t) => typeof t == "string" ? { message: t } : t || {}, e.toString = (t) => typeof t == "string" ? t : t == null ? void 0 : t.message;
})(se || (se = {}));
var Ki, Ui;
class rr {
  constructor(t, r, n, i) {
    this._cachedPath = [], this.parent = t, this.data = r, this._path = n, this._key = i;
  }
  get path() {
    return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath;
  }
}
const jp = (e, t) => {
  if (ss(t))
    return { success: !0, data: t.value };
  if (!e.common.issues.length)
    throw new Error("Validation failed but no issues detected.");
  return {
    success: !1,
    get error() {
      if (this._error)
        return this._error;
      const r = new It(e.common.issues);
      return this._error = r, this._error;
    }
  };
};
function pe(e) {
  if (!e)
    return {};
  const { errorMap: t, invalid_type_error: r, required_error: n, description: i } = e;
  if (t && (r || n))
    throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
  return t ? { errorMap: t, description: i } : { errorMap: (o, s) => {
    var u, l;
    const { message: c } = e;
    return o.code === "invalid_enum_value" ? { message: c ?? s.defaultError } : typeof s.data > "u" ? { message: (u = c ?? n) !== null && u !== void 0 ? u : s.defaultError } : o.code !== "invalid_type" ? { message: s.defaultError } : { message: (l = c ?? r) !== null && l !== void 0 ? l : s.defaultError };
  }, description: i };
}
class $e {
  constructor(t) {
    this.spa = this.safeParseAsync, this._def = t, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this);
  }
  get description() {
    return this._def.description;
  }
  _getType(t) {
    return tn(t.data);
  }
  _getOrReturnCtx(t, r) {
    return r || {
      common: t.parent.common,
      data: t.data,
      parsedType: tn(t.data),
      schemaErrorMap: this._def.errorMap,
      path: t.path,
      parent: t.parent
    };
  }
  _processInputParams(t) {
    return {
      status: new pt(),
      ctx: {
        common: t.parent.common,
        data: t.data,
        parsedType: tn(t.data),
        schemaErrorMap: this._def.errorMap,
        path: t.path,
        parent: t.parent
      }
    };
  }
  _parseSync(t) {
    const r = this._parse(t);
    if (us(r))
      throw new Error("Synchronous parse encountered promise.");
    return r;
  }
  _parseAsync(t) {
    const r = this._parse(t);
    return Promise.resolve(r);
  }
  parse(t, r) {
    const n = this.safeParse(t, r);
    if (n.success)
      return n.data;
    throw n.error;
  }
  safeParse(t, r) {
    var n;
    const i = {
      common: {
        issues: [],
        async: (n = r == null ? void 0 : r.async) !== null && n !== void 0 ? n : !1,
        contextualErrorMap: r == null ? void 0 : r.errorMap
      },
      path: (r == null ? void 0 : r.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: t,
      parsedType: tn(t)
    }, a = this._parseSync({ data: t, path: i.path, parent: i });
    return jp(i, a);
  }
  async parseAsync(t, r) {
    const n = await this.safeParseAsync(t, r);
    if (n.success)
      return n.data;
    throw n.error;
  }
  async safeParseAsync(t, r) {
    const n = {
      common: {
        issues: [],
        contextualErrorMap: r == null ? void 0 : r.errorMap,
        async: !0
      },
      path: (r == null ? void 0 : r.path) || [],
      schemaErrorMap: this._def.errorMap,
      parent: null,
      data: t,
      parsedType: tn(t)
    }, i = this._parse({ data: t, path: n.path, parent: n }), a = await (us(i) ? i : Promise.resolve(i));
    return jp(n, a);
  }
  refine(t, r) {
    const n = (i) => typeof r == "string" || typeof r > "u" ? { message: r } : typeof r == "function" ? r(i) : r;
    return this._refinement((i, a) => {
      const o = t(i), s = () => a.addIssue({
        code: H.custom,
        ...n(i)
      });
      return typeof Promise < "u" && o instanceof Promise ? o.then((u) => u ? !0 : (s(), !1)) : o ? !0 : (s(), !1);
    });
  }
  refinement(t, r) {
    return this._refinement((n, i) => t(n) ? !0 : (i.addIssue(typeof r == "function" ? r(n, i) : r), !1));
  }
  _refinement(t) {
    return new Dr({
      schema: this,
      typeName: fe.ZodEffects,
      effect: { type: "refinement", refinement: t }
    });
  }
  superRefine(t) {
    return this._refinement(t);
  }
  optional() {
    return mr.create(this, this._def);
  }
  nullable() {
    return $n.create(this, this._def);
  }
  nullish() {
    return this.nullable().optional();
  }
  array() {
    return Jt.create(this, this._def);
  }
  promise() {
    return ka.create(this, this._def);
  }
  or(t) {
    return fs.create([this, t], this._def);
  }
  and(t) {
    return hs.create(this, t, this._def);
  }
  transform(t) {
    return new Dr({
      ...pe(this._def),
      schema: this,
      typeName: fe.ZodEffects,
      effect: { type: "transform", transform: t }
    });
  }
  default(t) {
    const r = typeof t == "function" ? t : () => t;
    return new gs({
      ...pe(this._def),
      innerType: this,
      defaultValue: r,
      typeName: fe.ZodDefault
    });
  }
  brand() {
    return new P$({
      typeName: fe.ZodBranded,
      type: this,
      ...pe(this._def)
    });
  }
  catch(t) {
    const r = typeof t == "function" ? t : () => t;
    return new bs({
      ...pe(this._def),
      innerType: this,
      catchValue: r,
      typeName: fe.ZodCatch
    });
  }
  describe(t) {
    const r = this.constructor;
    return new r({
      ...this._def,
      description: t
    });
  }
  pipe(t) {
    return au.create(this, t);
  }
  readonly() {
    return $s.create(this);
  }
  isOptional() {
    return this.safeParse(void 0).success;
  }
  isNullable() {
    return this.safeParse(null).success;
  }
}
const H8 = /^c[^\s-]{8,}$/i, W8 = /^[0-9a-z]+$/, Q8 = /^[0-9A-HJKMNP-TV-Z]{26}$/, G8 = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i, Z8 = /^[a-z0-9_-]{21}$/i, Y8 = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/, J8 = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, X8 = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
let cl;
const eP = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, tP = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/, rP = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, C$ = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", nP = new RegExp(`^${C$}$`);
function S$(e) {
  let t = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
  return e.precision ? t = `${t}\\.\\d{${e.precision}}` : e.precision == null && (t = `${t}(\\.\\d+)?`), t;
}
function iP(e) {
  return new RegExp(`^${S$(e)}$`);
}
function aP(e) {
  let t = `${C$}T${S$(e)}`;
  const r = [];
  return r.push(e.local ? "Z?" : "Z"), e.offset && r.push("([+-]\\d{2}:?\\d{2})"), t = `${t}(${r.join("|")})`, new RegExp(`^${t}$`);
}
function oP(e, t) {
  return !!((t === "v4" || !t) && eP.test(e) || (t === "v6" || !t) && tP.test(e));
}
class pr extends $e {
  _parse(t) {
    if (this._def.coerce && (t.data = String(t.data)), this._getType(t) !== J.string) {
      const a = this._getOrReturnCtx(t);
      return Y(a, {
        code: H.invalid_type,
        expected: J.string,
        received: a.parsedType
      }), he;
    }
    const n = new pt();
    let i;
    for (const a of this._def.checks)
      if (a.kind === "min")
        t.data.length < a.value && (i = this._getOrReturnCtx(t, i), Y(i, {
          code: H.too_small,
          minimum: a.value,
          type: "string",
          inclusive: !0,
          exact: !1,
          message: a.message
        }), n.dirty());
      else if (a.kind === "max")
        t.data.length > a.value && (i = this._getOrReturnCtx(t, i), Y(i, {
          code: H.too_big,
          maximum: a.value,
          type: "string",
          inclusive: !0,
          exact: !1,
          message: a.message
        }), n.dirty());
      else if (a.kind === "length") {
        const o = t.data.length > a.value, s = t.data.length < a.value;
        (o || s) && (i = this._getOrReturnCtx(t, i), o ? Y(i, {
          code: H.too_big,
          maximum: a.value,
          type: "string",
          inclusive: !0,
          exact: !0,
          message: a.message
        }) : s && Y(i, {
          code: H.too_small,
          minimum: a.value,
          type: "string",
          inclusive: !0,
          exact: !0,
          message: a.message
        }), n.dirty());
      } else if (a.kind === "email")
        J8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "email",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "emoji")
        cl || (cl = new RegExp(X8, "u")), cl.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "emoji",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "uuid")
        G8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "uuid",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "nanoid")
        Z8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "nanoid",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "cuid")
        H8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "cuid",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "cuid2")
        W8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "cuid2",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "ulid")
        Q8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
          validation: "ulid",
          code: H.invalid_string,
          message: a.message
        }), n.dirty());
      else if (a.kind === "url")
        try {
          new URL(t.data);
        } catch {
          i = this._getOrReturnCtx(t, i), Y(i, {
            validation: "url",
            code: H.invalid_string,
            message: a.message
          }), n.dirty();
        }
      else a.kind === "regex" ? (a.regex.lastIndex = 0, a.regex.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        validation: "regex",
        code: H.invalid_string,
        message: a.message
      }), n.dirty())) : a.kind === "trim" ? t.data = t.data.trim() : a.kind === "includes" ? t.data.includes(a.value, a.position) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: { includes: a.value, position: a.position },
        message: a.message
      }), n.dirty()) : a.kind === "toLowerCase" ? t.data = t.data.toLowerCase() : a.kind === "toUpperCase" ? t.data = t.data.toUpperCase() : a.kind === "startsWith" ? t.data.startsWith(a.value) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: { startsWith: a.value },
        message: a.message
      }), n.dirty()) : a.kind === "endsWith" ? t.data.endsWith(a.value) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: { endsWith: a.value },
        message: a.message
      }), n.dirty()) : a.kind === "datetime" ? aP(a).test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: "datetime",
        message: a.message
      }), n.dirty()) : a.kind === "date" ? nP.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: "date",
        message: a.message
      }), n.dirty()) : a.kind === "time" ? iP(a).test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.invalid_string,
        validation: "time",
        message: a.message
      }), n.dirty()) : a.kind === "duration" ? Y8.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        validation: "duration",
        code: H.invalid_string,
        message: a.message
      }), n.dirty()) : a.kind === "ip" ? oP(t.data, a.version) || (i = this._getOrReturnCtx(t, i), Y(i, {
        validation: "ip",
        code: H.invalid_string,
        message: a.message
      }), n.dirty()) : a.kind === "base64" ? rP.test(t.data) || (i = this._getOrReturnCtx(t, i), Y(i, {
        validation: "base64",
        code: H.invalid_string,
        message: a.message
      }), n.dirty()) : Se.assertNever(a);
    return { status: n.value, value: t.data };
  }
  _regex(t, r, n) {
    return this.refinement((i) => t.test(i), {
      validation: r,
      code: H.invalid_string,
      ...se.errToObj(n)
    });
  }
  _addCheck(t) {
    return new pr({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  email(t) {
    return this._addCheck({ kind: "email", ...se.errToObj(t) });
  }
  url(t) {
    return this._addCheck({ kind: "url", ...se.errToObj(t) });
  }
  emoji(t) {
    return this._addCheck({ kind: "emoji", ...se.errToObj(t) });
  }
  uuid(t) {
    return this._addCheck({ kind: "uuid", ...se.errToObj(t) });
  }
  nanoid(t) {
    return this._addCheck({ kind: "nanoid", ...se.errToObj(t) });
  }
  cuid(t) {
    return this._addCheck({ kind: "cuid", ...se.errToObj(t) });
  }
  cuid2(t) {
    return this._addCheck({ kind: "cuid2", ...se.errToObj(t) });
  }
  ulid(t) {
    return this._addCheck({ kind: "ulid", ...se.errToObj(t) });
  }
  base64(t) {
    return this._addCheck({ kind: "base64", ...se.errToObj(t) });
  }
  ip(t) {
    return this._addCheck({ kind: "ip", ...se.errToObj(t) });
  }
  datetime(t) {
    var r, n;
    return typeof t == "string" ? this._addCheck({
      kind: "datetime",
      precision: null,
      offset: !1,
      local: !1,
      message: t
    }) : this._addCheck({
      kind: "datetime",
      precision: typeof (t == null ? void 0 : t.precision) > "u" ? null : t == null ? void 0 : t.precision,
      offset: (r = t == null ? void 0 : t.offset) !== null && r !== void 0 ? r : !1,
      local: (n = t == null ? void 0 : t.local) !== null && n !== void 0 ? n : !1,
      ...se.errToObj(t == null ? void 0 : t.message)
    });
  }
  date(t) {
    return this._addCheck({ kind: "date", message: t });
  }
  time(t) {
    return typeof t == "string" ? this._addCheck({
      kind: "time",
      precision: null,
      message: t
    }) : this._addCheck({
      kind: "time",
      precision: typeof (t == null ? void 0 : t.precision) > "u" ? null : t == null ? void 0 : t.precision,
      ...se.errToObj(t == null ? void 0 : t.message)
    });
  }
  duration(t) {
    return this._addCheck({ kind: "duration", ...se.errToObj(t) });
  }
  regex(t, r) {
    return this._addCheck({
      kind: "regex",
      regex: t,
      ...se.errToObj(r)
    });
  }
  includes(t, r) {
    return this._addCheck({
      kind: "includes",
      value: t,
      position: r == null ? void 0 : r.position,
      ...se.errToObj(r == null ? void 0 : r.message)
    });
  }
  startsWith(t, r) {
    return this._addCheck({
      kind: "startsWith",
      value: t,
      ...se.errToObj(r)
    });
  }
  endsWith(t, r) {
    return this._addCheck({
      kind: "endsWith",
      value: t,
      ...se.errToObj(r)
    });
  }
  min(t, r) {
    return this._addCheck({
      kind: "min",
      value: t,
      ...se.errToObj(r)
    });
  }
  max(t, r) {
    return this._addCheck({
      kind: "max",
      value: t,
      ...se.errToObj(r)
    });
  }
  length(t, r) {
    return this._addCheck({
      kind: "length",
      value: t,
      ...se.errToObj(r)
    });
  }
  /**
   * @deprecated Use z.string().min(1) instead.
   * @see {@link ZodString.min}
   */
  nonempty(t) {
    return this.min(1, se.errToObj(t));
  }
  trim() {
    return new pr({
      ...this._def,
      checks: [...this._def.checks, { kind: "trim" }]
    });
  }
  toLowerCase() {
    return new pr({
      ...this._def,
      checks: [...this._def.checks, { kind: "toLowerCase" }]
    });
  }
  toUpperCase() {
    return new pr({
      ...this._def,
      checks: [...this._def.checks, { kind: "toUpperCase" }]
    });
  }
  get isDatetime() {
    return !!this._def.checks.find((t) => t.kind === "datetime");
  }
  get isDate() {
    return !!this._def.checks.find((t) => t.kind === "date");
  }
  get isTime() {
    return !!this._def.checks.find((t) => t.kind === "time");
  }
  get isDuration() {
    return !!this._def.checks.find((t) => t.kind === "duration");
  }
  get isEmail() {
    return !!this._def.checks.find((t) => t.kind === "email");
  }
  get isURL() {
    return !!this._def.checks.find((t) => t.kind === "url");
  }
  get isEmoji() {
    return !!this._def.checks.find((t) => t.kind === "emoji");
  }
  get isUUID() {
    return !!this._def.checks.find((t) => t.kind === "uuid");
  }
  get isNANOID() {
    return !!this._def.checks.find((t) => t.kind === "nanoid");
  }
  get isCUID() {
    return !!this._def.checks.find((t) => t.kind === "cuid");
  }
  get isCUID2() {
    return !!this._def.checks.find((t) => t.kind === "cuid2");
  }
  get isULID() {
    return !!this._def.checks.find((t) => t.kind === "ulid");
  }
  get isIP() {
    return !!this._def.checks.find((t) => t.kind === "ip");
  }
  get isBase64() {
    return !!this._def.checks.find((t) => t.kind === "base64");
  }
  get minLength() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "min" && (t === null || r.value > t) && (t = r.value);
    return t;
  }
  get maxLength() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "max" && (t === null || r.value < t) && (t = r.value);
    return t;
  }
}
pr.create = (e) => {
  var t;
  return new pr({
    checks: [],
    typeName: fe.ZodString,
    coerce: (t = e == null ? void 0 : e.coerce) !== null && t !== void 0 ? t : !1,
    ...pe(e)
  });
};
function sP(e, t) {
  const r = (e.toString().split(".")[1] || "").length, n = (t.toString().split(".")[1] || "").length, i = r > n ? r : n, a = parseInt(e.toFixed(i).replace(".", "")), o = parseInt(t.toFixed(i).replace(".", ""));
  return a % o / Math.pow(10, i);
}
class fi extends $e {
  constructor() {
    super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
  }
  _parse(t) {
    if (this._def.coerce && (t.data = Number(t.data)), this._getType(t) !== J.number) {
      const a = this._getOrReturnCtx(t);
      return Y(a, {
        code: H.invalid_type,
        expected: J.number,
        received: a.parsedType
      }), he;
    }
    let n;
    const i = new pt();
    for (const a of this._def.checks)
      a.kind === "int" ? Se.isInteger(t.data) || (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.invalid_type,
        expected: "integer",
        received: "float",
        message: a.message
      }), i.dirty()) : a.kind === "min" ? (a.inclusive ? t.data < a.value : t.data <= a.value) && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.too_small,
        minimum: a.value,
        type: "number",
        inclusive: a.inclusive,
        exact: !1,
        message: a.message
      }), i.dirty()) : a.kind === "max" ? (a.inclusive ? t.data > a.value : t.data >= a.value) && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.too_big,
        maximum: a.value,
        type: "number",
        inclusive: a.inclusive,
        exact: !1,
        message: a.message
      }), i.dirty()) : a.kind === "multipleOf" ? sP(t.data, a.value) !== 0 && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.not_multiple_of,
        multipleOf: a.value,
        message: a.message
      }), i.dirty()) : a.kind === "finite" ? Number.isFinite(t.data) || (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.not_finite,
        message: a.message
      }), i.dirty()) : Se.assertNever(a);
    return { status: i.value, value: t.data };
  }
  gte(t, r) {
    return this.setLimit("min", t, !0, se.toString(r));
  }
  gt(t, r) {
    return this.setLimit("min", t, !1, se.toString(r));
  }
  lte(t, r) {
    return this.setLimit("max", t, !0, se.toString(r));
  }
  lt(t, r) {
    return this.setLimit("max", t, !1, se.toString(r));
  }
  setLimit(t, r, n, i) {
    return new fi({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind: t,
          value: r,
          inclusive: n,
          message: se.toString(i)
        }
      ]
    });
  }
  _addCheck(t) {
    return new fi({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  int(t) {
    return this._addCheck({
      kind: "int",
      message: se.toString(t)
    });
  }
  positive(t) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !1,
      message: se.toString(t)
    });
  }
  negative(t) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !1,
      message: se.toString(t)
    });
  }
  nonpositive(t) {
    return this._addCheck({
      kind: "max",
      value: 0,
      inclusive: !0,
      message: se.toString(t)
    });
  }
  nonnegative(t) {
    return this._addCheck({
      kind: "min",
      value: 0,
      inclusive: !0,
      message: se.toString(t)
    });
  }
  multipleOf(t, r) {
    return this._addCheck({
      kind: "multipleOf",
      value: t,
      message: se.toString(r)
    });
  }
  finite(t) {
    return this._addCheck({
      kind: "finite",
      message: se.toString(t)
    });
  }
  safe(t) {
    return this._addCheck({
      kind: "min",
      inclusive: !0,
      value: Number.MIN_SAFE_INTEGER,
      message: se.toString(t)
    })._addCheck({
      kind: "max",
      inclusive: !0,
      value: Number.MAX_SAFE_INTEGER,
      message: se.toString(t)
    });
  }
  get minValue() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "min" && (t === null || r.value > t) && (t = r.value);
    return t;
  }
  get maxValue() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "max" && (t === null || r.value < t) && (t = r.value);
    return t;
  }
  get isInt() {
    return !!this._def.checks.find((t) => t.kind === "int" || t.kind === "multipleOf" && Se.isInteger(t.value));
  }
  get isFinite() {
    let t = null, r = null;
    for (const n of this._def.checks) {
      if (n.kind === "finite" || n.kind === "int" || n.kind === "multipleOf")
        return !0;
      n.kind === "min" ? (r === null || n.value > r) && (r = n.value) : n.kind === "max" && (t === null || n.value < t) && (t = n.value);
    }
    return Number.isFinite(r) && Number.isFinite(t);
  }
}
fi.create = (e) => new fi({
  checks: [],
  typeName: fe.ZodNumber,
  coerce: (e == null ? void 0 : e.coerce) || !1,
  ...pe(e)
});
class hi extends $e {
  constructor() {
    super(...arguments), this.min = this.gte, this.max = this.lte;
  }
  _parse(t) {
    if (this._def.coerce && (t.data = BigInt(t.data)), this._getType(t) !== J.bigint) {
      const a = this._getOrReturnCtx(t);
      return Y(a, {
        code: H.invalid_type,
        expected: J.bigint,
        received: a.parsedType
      }), he;
    }
    let n;
    const i = new pt();
    for (const a of this._def.checks)
      a.kind === "min" ? (a.inclusive ? t.data < a.value : t.data <= a.value) && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.too_small,
        type: "bigint",
        minimum: a.value,
        inclusive: a.inclusive,
        message: a.message
      }), i.dirty()) : a.kind === "max" ? (a.inclusive ? t.data > a.value : t.data >= a.value) && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.too_big,
        type: "bigint",
        maximum: a.value,
        inclusive: a.inclusive,
        message: a.message
      }), i.dirty()) : a.kind === "multipleOf" ? t.data % a.value !== BigInt(0) && (n = this._getOrReturnCtx(t, n), Y(n, {
        code: H.not_multiple_of,
        multipleOf: a.value,
        message: a.message
      }), i.dirty()) : Se.assertNever(a);
    return { status: i.value, value: t.data };
  }
  gte(t, r) {
    return this.setLimit("min", t, !0, se.toString(r));
  }
  gt(t, r) {
    return this.setLimit("min", t, !1, se.toString(r));
  }
  lte(t, r) {
    return this.setLimit("max", t, !0, se.toString(r));
  }
  lt(t, r) {
    return this.setLimit("max", t, !1, se.toString(r));
  }
  setLimit(t, r, n, i) {
    return new hi({
      ...this._def,
      checks: [
        ...this._def.checks,
        {
          kind: t,
          value: r,
          inclusive: n,
          message: se.toString(i)
        }
      ]
    });
  }
  _addCheck(t) {
    return new hi({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  positive(t) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !1,
      message: se.toString(t)
    });
  }
  negative(t) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !1,
      message: se.toString(t)
    });
  }
  nonpositive(t) {
    return this._addCheck({
      kind: "max",
      value: BigInt(0),
      inclusive: !0,
      message: se.toString(t)
    });
  }
  nonnegative(t) {
    return this._addCheck({
      kind: "min",
      value: BigInt(0),
      inclusive: !0,
      message: se.toString(t)
    });
  }
  multipleOf(t, r) {
    return this._addCheck({
      kind: "multipleOf",
      value: t,
      message: se.toString(r)
    });
  }
  get minValue() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "min" && (t === null || r.value > t) && (t = r.value);
    return t;
  }
  get maxValue() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "max" && (t === null || r.value < t) && (t = r.value);
    return t;
  }
}
hi.create = (e) => {
  var t;
  return new hi({
    checks: [],
    typeName: fe.ZodBigInt,
    coerce: (t = e == null ? void 0 : e.coerce) !== null && t !== void 0 ? t : !1,
    ...pe(e)
  });
};
class Cc extends $e {
  _parse(t) {
    if (this._def.coerce && (t.data = !!t.data), this._getType(t) !== J.boolean) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.boolean,
        received: n.parsedType
      }), he;
    }
    return xt(t.data);
  }
}
Cc.create = (e) => new Cc({
  typeName: fe.ZodBoolean,
  coerce: (e == null ? void 0 : e.coerce) || !1,
  ...pe(e)
});
class Sa extends $e {
  _parse(t) {
    if (this._def.coerce && (t.data = new Date(t.data)), this._getType(t) !== J.date) {
      const a = this._getOrReturnCtx(t);
      return Y(a, {
        code: H.invalid_type,
        expected: J.date,
        received: a.parsedType
      }), he;
    }
    if (isNaN(t.data.getTime())) {
      const a = this._getOrReturnCtx(t);
      return Y(a, {
        code: H.invalid_date
      }), he;
    }
    const n = new pt();
    let i;
    for (const a of this._def.checks)
      a.kind === "min" ? t.data.getTime() < a.value && (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.too_small,
        message: a.message,
        inclusive: !0,
        exact: !1,
        minimum: a.value,
        type: "date"
      }), n.dirty()) : a.kind === "max" ? t.data.getTime() > a.value && (i = this._getOrReturnCtx(t, i), Y(i, {
        code: H.too_big,
        message: a.message,
        inclusive: !0,
        exact: !1,
        maximum: a.value,
        type: "date"
      }), n.dirty()) : Se.assertNever(a);
    return {
      status: n.value,
      value: new Date(t.data.getTime())
    };
  }
  _addCheck(t) {
    return new Sa({
      ...this._def,
      checks: [...this._def.checks, t]
    });
  }
  min(t, r) {
    return this._addCheck({
      kind: "min",
      value: t.getTime(),
      message: se.toString(r)
    });
  }
  max(t, r) {
    return this._addCheck({
      kind: "max",
      value: t.getTime(),
      message: se.toString(r)
    });
  }
  get minDate() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "min" && (t === null || r.value > t) && (t = r.value);
    return t != null ? new Date(t) : null;
  }
  get maxDate() {
    let t = null;
    for (const r of this._def.checks)
      r.kind === "max" && (t === null || r.value < t) && (t = r.value);
    return t != null ? new Date(t) : null;
  }
}
Sa.create = (e) => new Sa({
  checks: [],
  coerce: (e == null ? void 0 : e.coerce) || !1,
  typeName: fe.ZodDate,
  ...pe(e)
});
class Sc extends $e {
  _parse(t) {
    if (this._getType(t) !== J.symbol) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.symbol,
        received: n.parsedType
      }), he;
    }
    return xt(t.data);
  }
}
Sc.create = (e) => new Sc({
  typeName: fe.ZodSymbol,
  ...pe(e)
});
class cs extends $e {
  _parse(t) {
    if (this._getType(t) !== J.undefined) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.undefined,
        received: n.parsedType
      }), he;
    }
    return xt(t.data);
  }
}
cs.create = (e) => new cs({
  typeName: fe.ZodUndefined,
  ...pe(e)
});
class ds extends $e {
  _parse(t) {
    if (this._getType(t) !== J.null) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.null,
        received: n.parsedType
      }), he;
    }
    return xt(t.data);
  }
}
ds.create = (e) => new ds({
  typeName: fe.ZodNull,
  ...pe(e)
});
class kc extends $e {
  constructor() {
    super(...arguments), this._any = !0;
  }
  _parse(t) {
    return xt(t.data);
  }
}
kc.create = (e) => new kc({
  typeName: fe.ZodAny,
  ...pe(e)
});
class ri extends $e {
  constructor() {
    super(...arguments), this._unknown = !0;
  }
  _parse(t) {
    return xt(t.data);
  }
}
ri.create = (e) => new ri({
  typeName: fe.ZodUnknown,
  ...pe(e)
});
class Hr extends $e {
  _parse(t) {
    const r = this._getOrReturnCtx(t);
    return Y(r, {
      code: H.invalid_type,
      expected: J.never,
      received: r.parsedType
    }), he;
  }
}
Hr.create = (e) => new Hr({
  typeName: fe.ZodNever,
  ...pe(e)
});
class Pc extends $e {
  _parse(t) {
    if (this._getType(t) !== J.undefined) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.void,
        received: n.parsedType
      }), he;
    }
    return xt(t.data);
  }
}
Pc.create = (e) => new Pc({
  typeName: fe.ZodVoid,
  ...pe(e)
});
class Jt extends $e {
  _parse(t) {
    const { ctx: r, status: n } = this._processInputParams(t), i = this._def;
    if (r.parsedType !== J.array)
      return Y(r, {
        code: H.invalid_type,
        expected: J.array,
        received: r.parsedType
      }), he;
    if (i.exactLength !== null) {
      const o = r.data.length > i.exactLength.value, s = r.data.length < i.exactLength.value;
      (o || s) && (Y(r, {
        code: o ? H.too_big : H.too_small,
        minimum: s ? i.exactLength.value : void 0,
        maximum: o ? i.exactLength.value : void 0,
        type: "array",
        inclusive: !0,
        exact: !0,
        message: i.exactLength.message
      }), n.dirty());
    }
    if (i.minLength !== null && r.data.length < i.minLength.value && (Y(r, {
      code: H.too_small,
      minimum: i.minLength.value,
      type: "array",
      inclusive: !0,
      exact: !1,
      message: i.minLength.message
    }), n.dirty()), i.maxLength !== null && r.data.length > i.maxLength.value && (Y(r, {
      code: H.too_big,
      maximum: i.maxLength.value,
      type: "array",
      inclusive: !0,
      exact: !1,
      message: i.maxLength.message
    }), n.dirty()), r.common.async)
      return Promise.all([...r.data].map((o, s) => i.type._parseAsync(new rr(r, o, r.path, s)))).then((o) => pt.mergeArray(n, o));
    const a = [...r.data].map((o, s) => i.type._parseSync(new rr(r, o, r.path, s)));
    return pt.mergeArray(n, a);
  }
  get element() {
    return this._def.type;
  }
  min(t, r) {
    return new Jt({
      ...this._def,
      minLength: { value: t, message: se.toString(r) }
    });
  }
  max(t, r) {
    return new Jt({
      ...this._def,
      maxLength: { value: t, message: se.toString(r) }
    });
  }
  length(t, r) {
    return new Jt({
      ...this._def,
      exactLength: { value: t, message: se.toString(r) }
    });
  }
  nonempty(t) {
    return this.min(1, t);
  }
}
Jt.create = (e, t) => new Jt({
  type: e,
  minLength: null,
  maxLength: null,
  exactLength: null,
  typeName: fe.ZodArray,
  ...pe(t)
});
function Bn(e) {
  if (e instanceof Ke) {
    const t = {};
    for (const r in e.shape) {
      const n = e.shape[r];
      t[r] = mr.create(Bn(n));
    }
    return new Ke({
      ...e._def,
      shape: () => t
    });
  } else return e instanceof Jt ? new Jt({
    ...e._def,
    type: Bn(e.element)
  }) : e instanceof mr ? mr.create(Bn(e.unwrap())) : e instanceof $n ? $n.create(Bn(e.unwrap())) : e instanceof xr ? xr.create(e.items.map((t) => Bn(t))) : e;
}
class Ke extends $e {
  constructor() {
    super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
  }
  _getCached() {
    if (this._cached !== null)
      return this._cached;
    const t = this._def.shape(), r = Se.objectKeys(t);
    return this._cached = { shape: t, keys: r };
  }
  _parse(t) {
    if (this._getType(t) !== J.object) {
      const l = this._getOrReturnCtx(t);
      return Y(l, {
        code: H.invalid_type,
        expected: J.object,
        received: l.parsedType
      }), he;
    }
    const { status: n, ctx: i } = this._processInputParams(t), { shape: a, keys: o } = this._getCached(), s = [];
    if (!(this._def.catchall instanceof Hr && this._def.unknownKeys === "strip"))
      for (const l in i.data)
        o.includes(l) || s.push(l);
    const u = [];
    for (const l of o) {
      const c = a[l], d = i.data[l];
      u.push({
        key: { status: "valid", value: l },
        value: c._parse(new rr(i, d, i.path, l)),
        alwaysSet: l in i.data
      });
    }
    if (this._def.catchall instanceof Hr) {
      const l = this._def.unknownKeys;
      if (l === "passthrough")
        for (const c of s)
          u.push({
            key: { status: "valid", value: c },
            value: { status: "valid", value: i.data[c] }
          });
      else if (l === "strict")
        s.length > 0 && (Y(i, {
          code: H.unrecognized_keys,
          keys: s
        }), n.dirty());
      else if (l !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.");
    } else {
      const l = this._def.catchall;
      for (const c of s) {
        const d = i.data[c];
        u.push({
          key: { status: "valid", value: c },
          value: l._parse(
            new rr(i, d, i.path, c)
            //, ctx.child(key), value, getParsedType(value)
          ),
          alwaysSet: c in i.data
        });
      }
    }
    return i.common.async ? Promise.resolve().then(async () => {
      const l = [];
      for (const c of u) {
        const d = await c.key, f = await c.value;
        l.push({
          key: d,
          value: f,
          alwaysSet: c.alwaysSet
        });
      }
      return l;
    }).then((l) => pt.mergeObjectSync(n, l)) : pt.mergeObjectSync(n, u);
  }
  get shape() {
    return this._def.shape();
  }
  strict(t) {
    return se.errToObj, new Ke({
      ...this._def,
      unknownKeys: "strict",
      ...t !== void 0 ? {
        errorMap: (r, n) => {
          var i, a, o, s;
          const u = (o = (a = (i = this._def).errorMap) === null || a === void 0 ? void 0 : a.call(i, r, n).message) !== null && o !== void 0 ? o : n.defaultError;
          return r.code === "unrecognized_keys" ? {
            message: (s = se.errToObj(t).message) !== null && s !== void 0 ? s : u
          } : {
            message: u
          };
        }
      } : {}
    });
  }
  strip() {
    return new Ke({
      ...this._def,
      unknownKeys: "strip"
    });
  }
  passthrough() {
    return new Ke({
      ...this._def,
      unknownKeys: "passthrough"
    });
  }
  // const AugmentFactory =
  //   <Def extends ZodObjectDef>(def: Def) =>
  //   <Augmentation extends ZodRawShape>(
  //     augmentation: Augmentation
  //   ): ZodObject<
  //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
  //     Def["unknownKeys"],
  //     Def["catchall"]
  //   > => {
  //     return new ZodObject({
  //       ...def,
  //       shape: () => ({
  //         ...def.shape(),
  //         ...augmentation,
  //       }),
  //     }) as any;
  //   };
  extend(t) {
    return new Ke({
      ...this._def,
      shape: () => ({
        ...this._def.shape(),
        ...t
      })
    });
  }
  /**
   * Prior to zod@1.0.12 there was a bug in the
   * inferred type of merged objects. Please
   * upgrade if you are experiencing issues.
   */
  merge(t) {
    return new Ke({
      unknownKeys: t._def.unknownKeys,
      catchall: t._def.catchall,
      shape: () => ({
        ...this._def.shape(),
        ...t._def.shape()
      }),
      typeName: fe.ZodObject
    });
  }
  // merge<
  //   Incoming extends AnyZodObject,
  //   Augmentation extends Incoming["shape"],
  //   NewOutput extends {
  //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
  //       ? Augmentation[k]["_output"]
  //       : k extends keyof Output
  //       ? Output[k]
  //       : never;
  //   },
  //   NewInput extends {
  //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
  //       ? Augmentation[k]["_input"]
  //       : k extends keyof Input
  //       ? Input[k]
  //       : never;
  //   }
  // >(
  //   merging: Incoming
  // ): ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"],
  //   NewOutput,
  //   NewInput
  // > {
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  setKey(t, r) {
    return this.augment({ [t]: r });
  }
  // merge<Incoming extends AnyZodObject>(
  //   merging: Incoming
  // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
  // ZodObject<
  //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
  //   Incoming["_def"]["unknownKeys"],
  //   Incoming["_def"]["catchall"]
  // > {
  //   // const mergedShape = objectUtil.mergeShapes(
  //   //   this._def.shape(),
  //   //   merging._def.shape()
  //   // );
  //   const merged: any = new ZodObject({
  //     unknownKeys: merging._def.unknownKeys,
  //     catchall: merging._def.catchall,
  //     shape: () =>
  //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
  //     typeName: ZodFirstPartyTypeKind.ZodObject,
  //   }) as any;
  //   return merged;
  // }
  catchall(t) {
    return new Ke({
      ...this._def,
      catchall: t
    });
  }
  pick(t) {
    const r = {};
    return Se.objectKeys(t).forEach((n) => {
      t[n] && this.shape[n] && (r[n] = this.shape[n]);
    }), new Ke({
      ...this._def,
      shape: () => r
    });
  }
  omit(t) {
    const r = {};
    return Se.objectKeys(this.shape).forEach((n) => {
      t[n] || (r[n] = this.shape[n]);
    }), new Ke({
      ...this._def,
      shape: () => r
    });
  }
  /**
   * @deprecated
   */
  deepPartial() {
    return Bn(this);
  }
  partial(t) {
    const r = {};
    return Se.objectKeys(this.shape).forEach((n) => {
      const i = this.shape[n];
      t && !t[n] ? r[n] = i : r[n] = i.optional();
    }), new Ke({
      ...this._def,
      shape: () => r
    });
  }
  required(t) {
    const r = {};
    return Se.objectKeys(this.shape).forEach((n) => {
      if (t && !t[n])
        r[n] = this.shape[n];
      else {
        let a = this.shape[n];
        for (; a instanceof mr; )
          a = a._def.innerType;
        r[n] = a;
      }
    }), new Ke({
      ...this._def,
      shape: () => r
    });
  }
  keyof() {
    return k$(Se.objectKeys(this.shape));
  }
}
Ke.create = (e, t) => new Ke({
  shape: () => e,
  unknownKeys: "strip",
  catchall: Hr.create(),
  typeName: fe.ZodObject,
  ...pe(t)
});
Ke.strictCreate = (e, t) => new Ke({
  shape: () => e,
  unknownKeys: "strict",
  catchall: Hr.create(),
  typeName: fe.ZodObject,
  ...pe(t)
});
Ke.lazycreate = (e, t) => new Ke({
  shape: e,
  unknownKeys: "strip",
  catchall: Hr.create(),
  typeName: fe.ZodObject,
  ...pe(t)
});
class fs extends $e {
  _parse(t) {
    const { ctx: r } = this._processInputParams(t), n = this._def.options;
    function i(a) {
      for (const s of a)
        if (s.result.status === "valid")
          return s.result;
      for (const s of a)
        if (s.result.status === "dirty")
          return r.common.issues.push(...s.ctx.common.issues), s.result;
      const o = a.map((s) => new It(s.ctx.common.issues));
      return Y(r, {
        code: H.invalid_union,
        unionErrors: o
      }), he;
    }
    if (r.common.async)
      return Promise.all(n.map(async (a) => {
        const o = {
          ...r,
          common: {
            ...r.common,
            issues: []
          },
          parent: null
        };
        return {
          result: await a._parseAsync({
            data: r.data,
            path: r.path,
            parent: o
          }),
          ctx: o
        };
      })).then(i);
    {
      let a;
      const o = [];
      for (const u of n) {
        const l = {
          ...r,
          common: {
            ...r.common,
            issues: []
          },
          parent: null
        }, c = u._parseSync({
          data: r.data,
          path: r.path,
          parent: l
        });
        if (c.status === "valid")
          return c;
        c.status === "dirty" && !a && (a = { result: c, ctx: l }), l.common.issues.length && o.push(l.common.issues);
      }
      if (a)
        return r.common.issues.push(...a.ctx.common.issues), a.result;
      const s = o.map((u) => new It(u));
      return Y(r, {
        code: H.invalid_union,
        unionErrors: s
      }), he;
    }
  }
  get options() {
    return this._def.options;
  }
}
fs.create = (e, t) => new fs({
  options: e,
  typeName: fe.ZodUnion,
  ...pe(t)
});
const sr = (e) => e instanceof ms ? sr(e.schema) : e instanceof Dr ? sr(e.innerType()) : e instanceof vs ? [e.value] : e instanceof bn ? e.options : e instanceof ys ? Se.objectValues(e.enum) : e instanceof gs ? sr(e._def.innerType) : e instanceof cs ? [void 0] : e instanceof ds ? [null] : e instanceof mr ? [void 0, ...sr(e.unwrap())] : e instanceof $n ? [null, ...sr(e.unwrap())] : e instanceof P$ || e instanceof $s ? sr(e.unwrap()) : e instanceof bs ? sr(e._def.innerType) : [];
class rf extends $e {
  _parse(t) {
    const { ctx: r } = this._processInputParams(t);
    if (r.parsedType !== J.object)
      return Y(r, {
        code: H.invalid_type,
        expected: J.object,
        received: r.parsedType
      }), he;
    const n = this.discriminator, i = r.data[n], a = this.optionsMap.get(i);
    return a ? r.common.async ? a._parseAsync({
      data: r.data,
      path: r.path,
      parent: r
    }) : a._parseSync({
      data: r.data,
      path: r.path,
      parent: r
    }) : (Y(r, {
      code: H.invalid_union_discriminator,
      options: Array.from(this.optionsMap.keys()),
      path: [n]
    }), he);
  }
  get discriminator() {
    return this._def.discriminator;
  }
  get options() {
    return this._def.options;
  }
  get optionsMap() {
    return this._def.optionsMap;
  }
  /**
   * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
   * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
   * have a different value for each object in the union.
   * @param discriminator the name of the discriminator property
   * @param types an array of object schemas
   * @param params
   */
  static create(t, r, n) {
    const i = /* @__PURE__ */ new Map();
    for (const a of r) {
      const o = sr(a.shape[t]);
      if (!o.length)
        throw new Error(`A discriminator value for key \`${t}\` could not be extracted from all schema options`);
      for (const s of o) {
        if (i.has(s))
          throw new Error(`Discriminator property ${String(t)} has duplicate value ${String(s)}`);
        i.set(s, a);
      }
    }
    return new rf({
      typeName: fe.ZodDiscriminatedUnion,
      discriminator: t,
      options: r,
      optionsMap: i,
      ...pe(n)
    });
  }
}
function Tc(e, t) {
  const r = tn(e), n = tn(t);
  if (e === t)
    return { valid: !0, data: e };
  if (r === J.object && n === J.object) {
    const i = Se.objectKeys(t), a = Se.objectKeys(e).filter((s) => i.indexOf(s) !== -1), o = { ...e, ...t };
    for (const s of a) {
      const u = Tc(e[s], t[s]);
      if (!u.valid)
        return { valid: !1 };
      o[s] = u.data;
    }
    return { valid: !0, data: o };
  } else if (r === J.array && n === J.array) {
    if (e.length !== t.length)
      return { valid: !1 };
    const i = [];
    for (let a = 0; a < e.length; a++) {
      const o = e[a], s = t[a], u = Tc(o, s);
      if (!u.valid)
        return { valid: !1 };
      i.push(u.data);
    }
    return { valid: !0, data: i };
  } else return r === J.date && n === J.date && +e == +t ? { valid: !0, data: e } : { valid: !1 };
}
class hs extends $e {
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t), i = (a, o) => {
      if (Lp(a) || Lp(o))
        return he;
      const s = Tc(a.value, o.value);
      return s.valid ? ((Vp(a) || Vp(o)) && r.dirty(), { status: r.value, value: s.data }) : (Y(n, {
        code: H.invalid_intersection_types
      }), he);
    };
    return n.common.async ? Promise.all([
      this._def.left._parseAsync({
        data: n.data,
        path: n.path,
        parent: n
      }),
      this._def.right._parseAsync({
        data: n.data,
        path: n.path,
        parent: n
      })
    ]).then(([a, o]) => i(a, o)) : i(this._def.left._parseSync({
      data: n.data,
      path: n.path,
      parent: n
    }), this._def.right._parseSync({
      data: n.data,
      path: n.path,
      parent: n
    }));
  }
}
hs.create = (e, t, r) => new hs({
  left: e,
  right: t,
  typeName: fe.ZodIntersection,
  ...pe(r)
});
class xr extends $e {
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t);
    if (n.parsedType !== J.array)
      return Y(n, {
        code: H.invalid_type,
        expected: J.array,
        received: n.parsedType
      }), he;
    if (n.data.length < this._def.items.length)
      return Y(n, {
        code: H.too_small,
        minimum: this._def.items.length,
        inclusive: !0,
        exact: !1,
        type: "array"
      }), he;
    !this._def.rest && n.data.length > this._def.items.length && (Y(n, {
      code: H.too_big,
      maximum: this._def.items.length,
      inclusive: !0,
      exact: !1,
      type: "array"
    }), r.dirty());
    const a = [...n.data].map((o, s) => {
      const u = this._def.items[s] || this._def.rest;
      return u ? u._parse(new rr(n, o, n.path, s)) : null;
    }).filter((o) => !!o);
    return n.common.async ? Promise.all(a).then((o) => pt.mergeArray(r, o)) : pt.mergeArray(r, a);
  }
  get items() {
    return this._def.items;
  }
  rest(t) {
    return new xr({
      ...this._def,
      rest: t
    });
  }
}
xr.create = (e, t) => {
  if (!Array.isArray(e))
    throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
  return new xr({
    items: e,
    typeName: fe.ZodTuple,
    rest: null,
    ...pe(t)
  });
};
class ps extends $e {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t);
    if (n.parsedType !== J.object)
      return Y(n, {
        code: H.invalid_type,
        expected: J.object,
        received: n.parsedType
      }), he;
    const i = [], a = this._def.keyType, o = this._def.valueType;
    for (const s in n.data)
      i.push({
        key: a._parse(new rr(n, s, n.path, s)),
        value: o._parse(new rr(n, n.data[s], n.path, s)),
        alwaysSet: s in n.data
      });
    return n.common.async ? pt.mergeObjectAsync(r, i) : pt.mergeObjectSync(r, i);
  }
  get element() {
    return this._def.valueType;
  }
  static create(t, r, n) {
    return r instanceof $e ? new ps({
      keyType: t,
      valueType: r,
      typeName: fe.ZodRecord,
      ...pe(n)
    }) : new ps({
      keyType: pr.create(),
      valueType: t,
      typeName: fe.ZodRecord,
      ...pe(r)
    });
  }
}
class Ac extends $e {
  get keySchema() {
    return this._def.keyType;
  }
  get valueSchema() {
    return this._def.valueType;
  }
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t);
    if (n.parsedType !== J.map)
      return Y(n, {
        code: H.invalid_type,
        expected: J.map,
        received: n.parsedType
      }), he;
    const i = this._def.keyType, a = this._def.valueType, o = [...n.data.entries()].map(([s, u], l) => ({
      key: i._parse(new rr(n, s, n.path, [l, "key"])),
      value: a._parse(new rr(n, u, n.path, [l, "value"]))
    }));
    if (n.common.async) {
      const s = /* @__PURE__ */ new Map();
      return Promise.resolve().then(async () => {
        for (const u of o) {
          const l = await u.key, c = await u.value;
          if (l.status === "aborted" || c.status === "aborted")
            return he;
          (l.status === "dirty" || c.status === "dirty") && r.dirty(), s.set(l.value, c.value);
        }
        return { status: r.value, value: s };
      });
    } else {
      const s = /* @__PURE__ */ new Map();
      for (const u of o) {
        const l = u.key, c = u.value;
        if (l.status === "aborted" || c.status === "aborted")
          return he;
        (l.status === "dirty" || c.status === "dirty") && r.dirty(), s.set(l.value, c.value);
      }
      return { status: r.value, value: s };
    }
  }
}
Ac.create = (e, t, r) => new Ac({
  valueType: t,
  keyType: e,
  typeName: fe.ZodMap,
  ...pe(r)
});
class pi extends $e {
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t);
    if (n.parsedType !== J.set)
      return Y(n, {
        code: H.invalid_type,
        expected: J.set,
        received: n.parsedType
      }), he;
    const i = this._def;
    i.minSize !== null && n.data.size < i.minSize.value && (Y(n, {
      code: H.too_small,
      minimum: i.minSize.value,
      type: "set",
      inclusive: !0,
      exact: !1,
      message: i.minSize.message
    }), r.dirty()), i.maxSize !== null && n.data.size > i.maxSize.value && (Y(n, {
      code: H.too_big,
      maximum: i.maxSize.value,
      type: "set",
      inclusive: !0,
      exact: !1,
      message: i.maxSize.message
    }), r.dirty());
    const a = this._def.valueType;
    function o(u) {
      const l = /* @__PURE__ */ new Set();
      for (const c of u) {
        if (c.status === "aborted")
          return he;
        c.status === "dirty" && r.dirty(), l.add(c.value);
      }
      return { status: r.value, value: l };
    }
    const s = [...n.data.values()].map((u, l) => a._parse(new rr(n, u, n.path, l)));
    return n.common.async ? Promise.all(s).then((u) => o(u)) : o(s);
  }
  min(t, r) {
    return new pi({
      ...this._def,
      minSize: { value: t, message: se.toString(r) }
    });
  }
  max(t, r) {
    return new pi({
      ...this._def,
      maxSize: { value: t, message: se.toString(r) }
    });
  }
  size(t, r) {
    return this.min(t, r).max(t, r);
  }
  nonempty(t) {
    return this.min(1, t);
  }
}
pi.create = (e, t) => new pi({
  valueType: e,
  minSize: null,
  maxSize: null,
  typeName: fe.ZodSet,
  ...pe(t)
});
class ta extends $e {
  constructor() {
    super(...arguments), this.validate = this.implement;
  }
  _parse(t) {
    const { ctx: r } = this._processInputParams(t);
    if (r.parsedType !== J.function)
      return Y(r, {
        code: H.invalid_type,
        expected: J.function,
        received: r.parsedType
      }), he;
    function n(s, u) {
      return wc({
        data: s,
        path: r.path,
        errorMaps: [
          r.common.contextualErrorMap,
          r.schemaErrorMap,
          Ec(),
          Ca
        ].filter((l) => !!l),
        issueData: {
          code: H.invalid_arguments,
          argumentsError: u
        }
      });
    }
    function i(s, u) {
      return wc({
        data: s,
        path: r.path,
        errorMaps: [
          r.common.contextualErrorMap,
          r.schemaErrorMap,
          Ec(),
          Ca
        ].filter((l) => !!l),
        issueData: {
          code: H.invalid_return_type,
          returnTypeError: u
        }
      });
    }
    const a = { errorMap: r.common.contextualErrorMap }, o = r.data;
    if (this._def.returns instanceof ka) {
      const s = this;
      return xt(async function(...u) {
        const l = new It([]), c = await s._def.args.parseAsync(u, a).catch((h) => {
          throw l.addIssue(n(u, h)), l;
        }), d = await Reflect.apply(o, this, c);
        return await s._def.returns._def.type.parseAsync(d, a).catch((h) => {
          throw l.addIssue(i(d, h)), l;
        });
      });
    } else {
      const s = this;
      return xt(function(...u) {
        const l = s._def.args.safeParse(u, a);
        if (!l.success)
          throw new It([n(u, l.error)]);
        const c = Reflect.apply(o, this, l.data), d = s._def.returns.safeParse(c, a);
        if (!d.success)
          throw new It([i(c, d.error)]);
        return d.data;
      });
    }
  }
  parameters() {
    return this._def.args;
  }
  returnType() {
    return this._def.returns;
  }
  args(...t) {
    return new ta({
      ...this._def,
      args: xr.create(t).rest(ri.create())
    });
  }
  returns(t) {
    return new ta({
      ...this._def,
      returns: t
    });
  }
  implement(t) {
    return this.parse(t);
  }
  strictImplement(t) {
    return this.parse(t);
  }
  static create(t, r, n) {
    return new ta({
      args: t || xr.create([]).rest(ri.create()),
      returns: r || ri.create(),
      typeName: fe.ZodFunction,
      ...pe(n)
    });
  }
}
class ms extends $e {
  get schema() {
    return this._def.getter();
  }
  _parse(t) {
    const { ctx: r } = this._processInputParams(t);
    return this._def.getter()._parse({ data: r.data, path: r.path, parent: r });
  }
}
ms.create = (e, t) => new ms({
  getter: e,
  typeName: fe.ZodLazy,
  ...pe(t)
});
class vs extends $e {
  _parse(t) {
    if (t.data !== this._def.value) {
      const r = this._getOrReturnCtx(t);
      return Y(r, {
        received: r.data,
        code: H.invalid_literal,
        expected: this._def.value
      }), he;
    }
    return { status: "valid", value: t.data };
  }
  get value() {
    return this._def.value;
  }
}
vs.create = (e, t) => new vs({
  value: e,
  typeName: fe.ZodLiteral,
  ...pe(t)
});
function k$(e, t) {
  return new bn({
    values: e,
    typeName: fe.ZodEnum,
    ...pe(t)
  });
}
class bn extends $e {
  constructor() {
    super(...arguments), Ki.set(this, void 0);
  }
  _parse(t) {
    if (typeof t.data != "string") {
      const r = this._getOrReturnCtx(t), n = this._def.values;
      return Y(r, {
        expected: Se.joinValues(n),
        received: r.parsedType,
        code: H.invalid_type
      }), he;
    }
    if (ls(this, Ki) || w$(this, Ki, new Set(this._def.values)), !ls(this, Ki).has(t.data)) {
      const r = this._getOrReturnCtx(t), n = this._def.values;
      return Y(r, {
        received: r.data,
        code: H.invalid_enum_value,
        options: n
      }), he;
    }
    return xt(t.data);
  }
  get options() {
    return this._def.values;
  }
  get enum() {
    const t = {};
    for (const r of this._def.values)
      t[r] = r;
    return t;
  }
  get Values() {
    const t = {};
    for (const r of this._def.values)
      t[r] = r;
    return t;
  }
  get Enum() {
    const t = {};
    for (const r of this._def.values)
      t[r] = r;
    return t;
  }
  extract(t, r = this._def) {
    return bn.create(t, {
      ...this._def,
      ...r
    });
  }
  exclude(t, r = this._def) {
    return bn.create(this.options.filter((n) => !t.includes(n)), {
      ...this._def,
      ...r
    });
  }
}
Ki = /* @__PURE__ */ new WeakMap();
bn.create = k$;
class ys extends $e {
  constructor() {
    super(...arguments), Ui.set(this, void 0);
  }
  _parse(t) {
    const r = Se.getValidEnumValues(this._def.values), n = this._getOrReturnCtx(t);
    if (n.parsedType !== J.string && n.parsedType !== J.number) {
      const i = Se.objectValues(r);
      return Y(n, {
        expected: Se.joinValues(i),
        received: n.parsedType,
        code: H.invalid_type
      }), he;
    }
    if (ls(this, Ui) || w$(this, Ui, new Set(Se.getValidEnumValues(this._def.values))), !ls(this, Ui).has(t.data)) {
      const i = Se.objectValues(r);
      return Y(n, {
        received: n.data,
        code: H.invalid_enum_value,
        options: i
      }), he;
    }
    return xt(t.data);
  }
  get enum() {
    return this._def.values;
  }
}
Ui = /* @__PURE__ */ new WeakMap();
ys.create = (e, t) => new ys({
  values: e,
  typeName: fe.ZodNativeEnum,
  ...pe(t)
});
class ka extends $e {
  unwrap() {
    return this._def.type;
  }
  _parse(t) {
    const { ctx: r } = this._processInputParams(t);
    if (r.parsedType !== J.promise && r.common.async === !1)
      return Y(r, {
        code: H.invalid_type,
        expected: J.promise,
        received: r.parsedType
      }), he;
    const n = r.parsedType === J.promise ? r.data : Promise.resolve(r.data);
    return xt(n.then((i) => this._def.type.parseAsync(i, {
      path: r.path,
      errorMap: r.common.contextualErrorMap
    })));
  }
}
ka.create = (e, t) => new ka({
  type: e,
  typeName: fe.ZodPromise,
  ...pe(t)
});
class Dr extends $e {
  innerType() {
    return this._def.schema;
  }
  sourceType() {
    return this._def.schema._def.typeName === fe.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
  }
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t), i = this._def.effect || null, a = {
      addIssue: (o) => {
        Y(n, o), o.fatal ? r.abort() : r.dirty();
      },
      get path() {
        return n.path;
      }
    };
    if (a.addIssue = a.addIssue.bind(a), i.type === "preprocess") {
      const o = i.transform(n.data, a);
      if (n.common.async)
        return Promise.resolve(o).then(async (s) => {
          if (r.value === "aborted")
            return he;
          const u = await this._def.schema._parseAsync({
            data: s,
            path: n.path,
            parent: n
          });
          return u.status === "aborted" ? he : u.status === "dirty" || r.value === "dirty" ? zi(u.value) : u;
        });
      {
        if (r.value === "aborted")
          return he;
        const s = this._def.schema._parseSync({
          data: o,
          path: n.path,
          parent: n
        });
        return s.status === "aborted" ? he : s.status === "dirty" || r.value === "dirty" ? zi(s.value) : s;
      }
    }
    if (i.type === "refinement") {
      const o = (s) => {
        const u = i.refinement(s, a);
        if (n.common.async)
          return Promise.resolve(u);
        if (u instanceof Promise)
          throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
        return s;
      };
      if (n.common.async === !1) {
        const s = this._def.schema._parseSync({
          data: n.data,
          path: n.path,
          parent: n
        });
        return s.status === "aborted" ? he : (s.status === "dirty" && r.dirty(), o(s.value), { status: r.value, value: s.value });
      } else
        return this._def.schema._parseAsync({ data: n.data, path: n.path, parent: n }).then((s) => s.status === "aborted" ? he : (s.status === "dirty" && r.dirty(), o(s.value).then(() => ({ status: r.value, value: s.value }))));
    }
    if (i.type === "transform")
      if (n.common.async === !1) {
        const o = this._def.schema._parseSync({
          data: n.data,
          path: n.path,
          parent: n
        });
        if (!ss(o))
          return o;
        const s = i.transform(o.value, a);
        if (s instanceof Promise)
          throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
        return { status: r.value, value: s };
      } else
        return this._def.schema._parseAsync({ data: n.data, path: n.path, parent: n }).then((o) => ss(o) ? Promise.resolve(i.transform(o.value, a)).then((s) => ({ status: r.value, value: s })) : o);
    Se.assertNever(i);
  }
}
Dr.create = (e, t, r) => new Dr({
  schema: e,
  typeName: fe.ZodEffects,
  effect: t,
  ...pe(r)
});
Dr.createWithPreprocess = (e, t, r) => new Dr({
  schema: t,
  effect: { type: "preprocess", transform: e },
  typeName: fe.ZodEffects,
  ...pe(r)
});
class mr extends $e {
  _parse(t) {
    return this._getType(t) === J.undefined ? xt(void 0) : this._def.innerType._parse(t);
  }
  unwrap() {
    return this._def.innerType;
  }
}
mr.create = (e, t) => new mr({
  innerType: e,
  typeName: fe.ZodOptional,
  ...pe(t)
});
class $n extends $e {
  _parse(t) {
    return this._getType(t) === J.null ? xt(null) : this._def.innerType._parse(t);
  }
  unwrap() {
    return this._def.innerType;
  }
}
$n.create = (e, t) => new $n({
  innerType: e,
  typeName: fe.ZodNullable,
  ...pe(t)
});
class gs extends $e {
  _parse(t) {
    const { ctx: r } = this._processInputParams(t);
    let n = r.data;
    return r.parsedType === J.undefined && (n = this._def.defaultValue()), this._def.innerType._parse({
      data: n,
      path: r.path,
      parent: r
    });
  }
  removeDefault() {
    return this._def.innerType;
  }
}
gs.create = (e, t) => new gs({
  innerType: e,
  typeName: fe.ZodDefault,
  defaultValue: typeof t.default == "function" ? t.default : () => t.default,
  ...pe(t)
});
class bs extends $e {
  _parse(t) {
    const { ctx: r } = this._processInputParams(t), n = {
      ...r,
      common: {
        ...r.common,
        issues: []
      }
    }, i = this._def.innerType._parse({
      data: n.data,
      path: n.path,
      parent: {
        ...n
      }
    });
    return us(i) ? i.then((a) => ({
      status: "valid",
      value: a.status === "valid" ? a.value : this._def.catchValue({
        get error() {
          return new It(n.common.issues);
        },
        input: n.data
      })
    })) : {
      status: "valid",
      value: i.status === "valid" ? i.value : this._def.catchValue({
        get error() {
          return new It(n.common.issues);
        },
        input: n.data
      })
    };
  }
  removeCatch() {
    return this._def.innerType;
  }
}
bs.create = (e, t) => new bs({
  innerType: e,
  typeName: fe.ZodCatch,
  catchValue: typeof t.catch == "function" ? t.catch : () => t.catch,
  ...pe(t)
});
class _c extends $e {
  _parse(t) {
    if (this._getType(t) !== J.nan) {
      const n = this._getOrReturnCtx(t);
      return Y(n, {
        code: H.invalid_type,
        expected: J.nan,
        received: n.parsedType
      }), he;
    }
    return { status: "valid", value: t.data };
  }
}
_c.create = (e) => new _c({
  typeName: fe.ZodNaN,
  ...pe(e)
});
class P$ extends $e {
  _parse(t) {
    const { ctx: r } = this._processInputParams(t), n = r.data;
    return this._def.type._parse({
      data: n,
      path: r.path,
      parent: r
    });
  }
  unwrap() {
    return this._def.type;
  }
}
class au extends $e {
  _parse(t) {
    const { status: r, ctx: n } = this._processInputParams(t);
    if (n.common.async)
      return (async () => {
        const a = await this._def.in._parseAsync({
          data: n.data,
          path: n.path,
          parent: n
        });
        return a.status === "aborted" ? he : a.status === "dirty" ? (r.dirty(), zi(a.value)) : this._def.out._parseAsync({
          data: a.value,
          path: n.path,
          parent: n
        });
      })();
    {
      const i = this._def.in._parseSync({
        data: n.data,
        path: n.path,
        parent: n
      });
      return i.status === "aborted" ? he : i.status === "dirty" ? (r.dirty(), {
        status: "dirty",
        value: i.value
      }) : this._def.out._parseSync({
        data: i.value,
        path: n.path,
        parent: n
      });
    }
  }
  static create(t, r) {
    return new au({
      in: t,
      out: r,
      typeName: fe.ZodPipeline
    });
  }
}
class $s extends $e {
  _parse(t) {
    const r = this._def.innerType._parse(t), n = (i) => (ss(i) && (i.value = Object.freeze(i.value)), i);
    return us(r) ? r.then((i) => n(i)) : n(r);
  }
  unwrap() {
    return this._def.innerType;
  }
}
$s.create = (e, t) => new $s({
  innerType: e,
  typeName: fe.ZodReadonly,
  ...pe(t)
});
Ke.lazycreate;
var fe;
(function(e) {
  e.ZodString = "ZodString", e.ZodNumber = "ZodNumber", e.ZodNaN = "ZodNaN", e.ZodBigInt = "ZodBigInt", e.ZodBoolean = "ZodBoolean", e.ZodDate = "ZodDate", e.ZodSymbol = "ZodSymbol", e.ZodUndefined = "ZodUndefined", e.ZodNull = "ZodNull", e.ZodAny = "ZodAny", e.ZodUnknown = "ZodUnknown", e.ZodNever = "ZodNever", e.ZodVoid = "ZodVoid", e.ZodArray = "ZodArray", e.ZodObject = "ZodObject", e.ZodUnion = "ZodUnion", e.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", e.ZodIntersection = "ZodIntersection", e.ZodTuple = "ZodTuple", e.ZodRecord = "ZodRecord", e.ZodMap = "ZodMap", e.ZodSet = "ZodSet", e.ZodFunction = "ZodFunction", e.ZodLazy = "ZodLazy", e.ZodLiteral = "ZodLiteral", e.ZodEnum = "ZodEnum", e.ZodEffects = "ZodEffects", e.ZodNativeEnum = "ZodNativeEnum", e.ZodOptional = "ZodOptional", e.ZodNullable = "ZodNullable", e.ZodDefault = "ZodDefault", e.ZodCatch = "ZodCatch", e.ZodPromise = "ZodPromise", e.ZodBranded = "ZodBranded", e.ZodPipeline = "ZodPipeline", e.ZodReadonly = "ZodReadonly";
})(fe || (fe = {}));
const xs = pr.create;
fi.create;
_c.create;
hi.create;
Cc.create;
Sa.create;
Sc.create;
cs.create;
ds.create;
kc.create;
ri.create;
Hr.create;
Pc.create;
Jt.create;
const T$ = Ke.create;
Ke.strictCreate;
fs.create;
rf.create;
hs.create;
xr.create;
ps.create;
Ac.create;
pi.create;
ta.create;
ms.create;
vs.create;
bn.create;
ys.create;
ka.create;
Dr.create;
mr.create;
$n.create;
Dr.createWithPreprocess;
au.create;
const uP = er`
  mutation GenerateAIReply($senalysisBusinessId: String, $spilloverBusinessId: String, $message: String!, $type: String!, $n: Int) {
    generateAiReply(input: {
      senalysisBusinessId: $senalysisBusinessId,
      spilloverBusinessId: $spilloverBusinessId,
      message: $message,
      type: $type,
      n: $n
    }) {
      replies
      errors {
        message
      }
    }
  }
`;
function nf() {
  var a, o;
  const { senalysisBusinessId: e, spilloverBusinessId: t } = PE(), [r, n] = EE(uP);
  return n.generatedOptions = (o = (a = n.data) == null ? void 0 : a.generateAiReply) == null ? void 0 : o.replies, [async (s, u, l = { n: 1 }) => {
    try {
      const { data: c } = await r({
        variables: {
          type: s,
          message: u,
          senalysisBusinessId: e,
          spilloverBusinessId: t,
          n: l.n
        }
      }), d = (c == null ? void 0 : c.generateAiReply.errors) || [];
      for (const f of d)
        console.error(`AI Error: ${f.message}`), Ie.error(f.message, { position: "bottom-right" });
      return c.generateAiReply.replies;
    } catch {
      return null;
    }
  }, n];
}
const lP = Dt({
  extend: Cn,
  base: "flex flex-row items-center justify-center gap-1.5 h-10 px-3 text-sm shadow-md pressed:shadow-none transition rounded-md cursor-pointer",
  variants: {
    variant: {
      primary: "bg-spillover-700 hover:bg-spillover-500 pressed:bg-spillover-400 text-white",
      secondary: "bg-gray-100 hover:bg-gray-200 pressed:bg-gray-300 text-gray-800 dark:bg-zinc-600 dark:hover:bg-zinc-500 dark:pressed:bg-zinc-400 dark:text-zinc-100 shadow-sm",
      destructive: "bg-orange-700 hover:bg-orange-800 pressed:bg-orange-900 text-white",
      icon: "text-gray-500 p-0 shadow-none"
    },
    isDisabled: {
      true: "bg-gray-100 dark:bg-zinc-800 text-gray-300 dark:text-zinc-600 forced-colors:text-[GrayText] border-black/5 dark:border-white/5 cursor-not-allowed"
    },
    isLoading: {
      true: "cursor-wait"
    },
    reverse: {
      true: "flex-row-reverse"
    },
    circle: {
      true: "rounded-full w-10 h-10"
    }
  },
  defaultVariants: {
    variant: "primary"
  }
});
function Rt({
  Icon: e,
  isLoading: t,
  reverse: r,
  circle: n,
  children: i,
  ...a
}) {
  return /* @__PURE__ */ ge(
    d3,
    {
      ...a,
      isDisabled: a.isDisabled || t,
      className: Na(
        a.className,
        (o, s) => lP({
          ...s,
          variant: a.variant,
          reverse: r,
          circle: n,
          isLoading: t,
          className: o
        })
      ),
      children: [
        e && (t ? /* @__PURE__ */ R(Vv, { size: 20, className: "animate-spin" }) : /* @__PURE__ */ R(e, { size: 20 })),
        i
      ]
    }
  );
}
function af({ option: e, type: t, onClick: r }) {
  const n = () => {
    r && r(e, t);
  };
  return /* @__PURE__ */ R(
    "div",
    {
      className: `p-3 bg-gray-100 rounded-md text-gray-600 hover:bg-gray-200 transition duration-200 text-sm ${r && "cursor-pointer"} whitespace-pre-line`,
      ...rs(n),
      children: e
    }
  );
}
const cP = T$({
  context: xs().min(5, "Please provide some more context")
});
function dP({ onOptionSelected: e }) {
  const [t, { generatedOptions: r, loading: n }] = nf(), {
    register: i,
    handleSubmit: a,
    formState: { errors: o }
  } = x$({ resolver: E$(cP) }), s = ({ context: l }) => t("text", l, { n: 3 }), u = r || [];
  return /* @__PURE__ */ ge(
    "form",
    {
      onSubmit: a(s),
      className: "flex flex-col gap-4 py-2 px-4 w-full box-border",
      children: [
        /* @__PURE__ */ ge("div", { className: "w-full flex flex-col gap-1", children: [
          /* @__PURE__ */ R("label", { className: "text-sm text-gray-700", children: "Give us some context..." }),
          /* @__PURE__ */ R("div", { className: "w-full flex flex-col gap-4", children: /* @__PURE__ */ R(
            "textarea",
            {
              className: "box-border w-full h-20 border border-gray-300 rounded-md p-2",
              ...i("context"),
              autoFocus: !0
            }
          ) }),
          o.context && /* @__PURE__ */ R("div", { className: "text-red-500 text-sm", children: o.context.message })
        ] }),
        /* @__PURE__ */ R(
          Rt,
          {
            isDisabled: n,
            isLoading: n,
            Icon: Rs,
            onPress: a(s),
            children: "Generate Text"
          }
        ),
        u.length > 0 && /* @__PURE__ */ ge("div", { className: "w-full flex flex-col gap-4 mt-4", children: [
          /* @__PURE__ */ R("div", { className: "text-gray-700", children: "Pick an option or try again for new options" }),
          u.map((l, c) => /* @__PURE__ */ R(
            af,
            {
              option: l,
              type: "text",
              onClick: e
            },
            c
          ))
        ] })
      ]
    }
  );
}
const fP = T$({
  context: xs().min(5, "Please provide some more context")
});
function hP({ onOptionSelected: e }) {
  const [t, { generatedOptions: r, loading: n }] = nf(), {
    register: i,
    handleSubmit: a,
    formState: { errors: o }
  } = x$({ resolver: E$(fP) }), s = ({ context: l }) => t("post_caption", l, { n: 3 }), u = r || [];
  return /* @__PURE__ */ ge(
    "form",
    {
      onSubmit: a(s),
      className: "flex flex-col gap-4 py-2 px-4 w-full box-border",
      children: [
        /* @__PURE__ */ ge("div", { className: "w-full flex flex-col gap-1", children: [
          /* @__PURE__ */ R("label", { className: "text-sm text-gray-700", children: "Give us some context..." }),
          /* @__PURE__ */ R("div", { className: "w-full flex flex-col gap-4", children: /* @__PURE__ */ R(
            "textarea",
            {
              className: "box-border w-full h-20 border border-gray-300 rounded-md p-2",
              ...i("context"),
              autoFocus: !0
            }
          ) }),
          o.context && /* @__PURE__ */ R("div", { className: "text-red-500 text-sm", children: o.context.message })
        ] }),
        /* @__PURE__ */ R(
          Rt,
          {
            isLoading: n,
            isDisabled: n,
            Icon: Rs,
            onPress: a(s),
            children: "Generate Caption"
          }
        ),
        u.length > 0 && /* @__PURE__ */ ge("div", { className: "w-full flex flex-col gap-4 mt-4", children: [
          /* @__PURE__ */ R("div", { className: "text-gray-700", children: "Pick an option or try again for new options" }),
          u.map((l, c) => /* @__PURE__ */ R(
            af,
            {
              option: l,
              type: "post_caption",
              onClick: e
            },
            c
          ))
        ] })
      ]
    }
  );
}
function Ht({
  type: e,
  text: t,
  onOptionSelected: r,
  loadingMsg: n,
  children: i,
  autoRun: a = !0,
  retry: o = !0,
  n: s = 1
}) {
  const [u, { generatedOptions: l, loading: c }] = nf(), d = () => {
    t && t.trim().length > 0 && u(e, t, { n: s });
  };
  return oe(() => {
    a && d();
  }, []), /* @__PURE__ */ ge("div", { className: "w-full flex flex-col gap-4 py-2 px-4 box-border", children: [
    i,
    c ? /* @__PURE__ */ ge("div", { className: "text-gray-700 flex flex-row items-center gap-2", children: [
      /* @__PURE__ */ R(KE, { className: "animate-spin" }),
      n || "Loading..."
    ] }) : o && /* @__PURE__ */ R(Rt, { variant: "secondary", Icon: qE, onPress: d, children: "Retry" }),
    l == null ? void 0 : l.map((f, h) => /* @__PURE__ */ R(
      af,
      {
        type: e,
        option: f,
        onClick: r
      },
      h
    ))
  ] });
}
function pP({ message: e }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "translate",
      text: e,
      loadingMsg: "Translating...",
      retry: !1
    }
  );
}
function mP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "spellcheck",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Checking spelling..."
    }
  );
}
function vP({ message: e }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "summarize",
      text: e,
      loadingMsg: "Summarizing...",
      retry: !1
    }
  );
}
function yP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "improve_writing",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Improving writing..."
    }
  );
}
function gP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "make_longer",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Making text longer..."
    }
  );
}
function bP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "make_shorter",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Making text shorter..."
    }
  );
}
function $P({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "make_more_formal",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Making more formal..."
    }
  );
}
function xP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "make_more_casual",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Making more casual..."
    }
  );
}
function DP({ text: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "continue_writing",
      text: e,
      onOptionSelected: (n, i) => {
        t(`${e} ${n}`, i);
      },
      loadingMsg: "Continuing your text..."
    }
  );
}
function EP({ message: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "review_reply",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Generating reply...",
      n: 3
    }
  );
}
function wP({ message: e, onOptionSelected: t }) {
  return /* @__PURE__ */ R(
    Ht,
    {
      type: "comment_reply",
      text: e,
      onOptionSelected: t,
      loadingMsg: "Generating reply...",
      n: 3
    }
  );
}
const A$ = [
  {
    name: "GenerateText",
    title: "Generate Text",
    Icon: vh,
    component: dP
  },
  {
    name: "GenerateCaption",
    title: "Generate Caption",
    Icon: vh,
    component: hP
  },
  {
    name: "GenerateReviewReply",
    title: "Generate Reply",
    Icon: GE,
    component: EP
  },
  {
    name: "GenerateCommentReply",
    title: "Generate Reply",
    Icon: HE,
    component: wP
  },
  {
    name: "Translate",
    title: "Translate",
    Icon: jE,
    component: pP
  },
  {
    name: "SpellCheck",
    title: "Fix Spelling & Grammar",
    Icon: QE,
    component: mP
  },
  {
    name: "Summarize",
    title: "Summarize",
    Icon: zE,
    component: vP
  },
  {
    name: "ImproveWriting",
    title: "Improve Writing",
    Icon: LE,
    component: yP
  },
  {
    name: "MakeLonger",
    title: "Make Longer",
    Icon: ME,
    component: gP
  },
  {
    name: "MakeShorter",
    title: "Make Shorter",
    Icon: BE,
    component: bP
  },
  {
    name: "MakeMoreFormal",
    title: "Make More Formal",
    Icon: OE,
    component: $P
  },
  {
    name: "MakeMoreCasual",
    title: "Make More Casual",
    Icon: WE,
    component: xP
  },
  {
    name: "ContinueWriting",
    title: "Continue Writing",
    Icon: NE,
    component: DP
  }
], CP = A$.map((e) => e.name);
function SP({
  message: e,
  text: t,
  onOptionSelected: r,
  onCloseButtonClick: n,
  tools: i
}) {
  i ?? (i = CP);
  const a = A$.filter((o) => i.includes(o.name)).map(
    (o) => /* @__PURE__ */ R(d$, { title: o.title, Icon: o.Icon, children: /* @__PURE__ */ R(
      o.component,
      {
        message: e,
        text: t,
        onOptionSelected: r
      }
    ) }, o.name)
  );
  return /* @__PURE__ */ R(
    g8,
    {
      title: "AI Helpers",
      Icon: Rs,
      onCloseButtonClick: n,
      children: a
    }
  );
}
function of(e) {
  return /* @__PURE__ */ R(
    ak,
    {
      ...e,
      className: Cr(
        "outline outline-0 p-4 [[data-placement]>&]:p-4 max-h-[inherit] overflow-auto relative",
        e.className
      )
    }
  );
}
function kP(e) {
  return /* @__PURE__ */ R(
    J1,
    {
      ...e,
      className: Cr("text-lg font-medium text-slate-900", e.className)
    }
  );
}
const PP = Dt({
  base: "bg-white dark:bg-zinc-900/70 dark:backdrop-blur-2xl dark:backdrop-saturate-200 forced-colors:bg-[Canvas] shadow-md rounded-md bg-clip-padding border border-black/10 dark:border-white/[15%] text-slate-700 dark:text-zinc-300",
  variants: {
    isEntering: {
      true: "animate-in fade-in placement-bottom:slide-in-from-top-1 placement-top:slide-in-from-bottom-1 placement-left:slide-in-from-right-1 placement-right:slide-in-from-left-1 ease-out duration-200"
    },
    isExiting: {
      true: "animate-out fade-out placement-bottom:slide-out-to-top-1 placement-top:slide-out-to-bottom-1 placement-left:slide-out-to-right-1 placement-right:slide-out-to-left-1 ease-in duration-150"
    }
  }
});
function ou({ children: e, showArrow: t, className: r, ...n }) {
  const i = wn(xi), a = (i == null ? void 0 : i.trigger) === "SubmenuTrigger";
  let o = t ? 12 : 8;
  return o = a ? o - 6 : o, /* @__PURE__ */ ge(
    rk,
    {
      UNSTABLE_portalContainer: document.getElementById("sfs-portal"),
      offset: o,
      ...n,
      className: Na(
        r,
        (s, u) => PP({ ...u, className: s })
      ),
      children: [
        t && /* @__PURE__ */ R(ek, { className: "group", children: /* @__PURE__ */ ge(
          "svg",
          {
            width: 12,
            height: 12,
            viewBox: "0 0 12 12",
            className: "block fill-white dark:fill-[#1f1f21] forced-colors:fill-[Canvas] stroke-1 stroke-black/10 dark:stroke-zinc-600 forced-colors:stroke-[ButtonBorder] group-placement-bottom:rotate-180 group-placement-left:-rotate-90 group-placement-right:rotate-90",
            children: [
              /* @__PURE__ */ R("title", { children: "Popover arrow" }),
              /* @__PURE__ */ R("path", { d: "M0 0 L6 6 L12 0" })
            ]
          }
        ) }),
        e
      ]
    }
  );
}
function fT({
  message: e,
  text: t,
  onOptionSelected: r,
  className: n,
  children: i,
  tools: a
}) {
  return /* @__PURE__ */ ge(Q1, { children: [
    /* @__PURE__ */ R(
      Rt,
      {
        circle: !0,
        Icon: Rs,
        "aria-label": "AI Text Helpers",
        className: n,
        children: i
      }
    ),
    /* @__PURE__ */ R(
      ou,
      {
        showArrow: !0,
        shouldCloseOnInteractOutside: () => !1,
        className: "w-[340px]",
        children: /* @__PURE__ */ R(
          of,
          {
            className: "p-0 [[data-placement]>&]:p-0",
            "aria-label": "AI Text Helpers",
            children: ({ close: o }) => /* @__PURE__ */ R(
              SP,
              {
                tools: a,
                message: e,
                text: t,
                onOptionSelected: r,
                onCloseButtonClick: o
              }
            )
          }
        )
      }
    )
  ] });
}
const zp = [
  "Loading, please wait...",
  "Still loading...",
  "Almost there...",
  "This is taking longer than expected..."
];
function TP({ msgInterval: e = 5e3, ...t }) {
  const [r, n] = ee(0);
  oe(() => {
    const a = setInterval(() => {
      n((o) => o < zp.length - 1 ? o + 1 : (clearInterval(a), o));
    }, e);
    return () => clearInterval(a);
  }, [e]);
  const i = zp[r];
  return /* @__PURE__ */ ge("div", { className: "flex flex-col gap-4 items-center justify-center w-full h-full", children: [
    /* @__PURE__ */ R(
      Vv,
      {
        size: 46,
        ...t,
        className: Cr("animate-spin text-spillover-700", t.className)
      }
    ),
    /* @__PURE__ */ R("p", { className: "text-slate-400 animate-pulse", children: i })
  ] });
}
function su(e) {
  return /* @__PURE__ */ R(
    O7,
    {
      ...e,
      className: Cr(
        "text-sm text-gray-500 dark:text-zinc-400 font-medium cursor-default w-fit",
        e.className
      )
    }
  );
}
function uu(e) {
  return /* @__PURE__ */ R(
    qd,
    {
      ...e,
      slot: "description",
      className: Cr("text-sm text-gray-600", e.className)
    }
  );
}
function lu(e) {
  return /* @__PURE__ */ R(
    P7,
    {
      ...e,
      className: Ei(
        e.className,
        "text-sm text-red-600 forced-colors:text-[Mark]"
      )
    }
  );
}
const Fc = Dt({
  variants: {
    isFocusWithin: {
      false: "border-gray-300 dark:border-zinc-500 forced-colors:border-[ButtonBorder]",
      true: "border-gray-600 dark:border-zinc-300 forced-colors:border-[Highlight]"
    },
    isInvalid: {
      true: "border-red-600 dark:border-red-600 forced-colors:border-[Mark]"
    },
    isDisabled: {
      true: "border-gray-200 dark:border-zinc-700 forced-colors:border-[GrayText]"
    }
  }
}), _$ = Dt({
  extend: Cn,
  base: "group flex gap-1 pr-1.5 items-center h-10 shadow-sm bg-white dark:bg-zinc-900 forced-colors:bg-[Field] border rounded-lg overflow-hidden",
  variants: Fc.variants
});
function F$(e) {
  return /* @__PURE__ */ R(
    H1,
    {
      ...e,
      className: Na(
        e.className,
        (t, r) => _$({ ...r, className: t })
      )
    }
  );
}
function O$(e) {
  return /* @__PURE__ */ R(
    a1,
    {
      ...e,
      className: Ei(
        e.className,
        "px-2 py-1.5 flex-1 min-w-0 outline outline-0 bg-white dark:bg-zinc-900 text-sm text-gray-800 dark:text-zinc-200 disabled:text-gray-200 dark:disabled:text-zinc-600"
      )
    }
  );
}
Dt({
  extend: Cn,
  base: "group relative flex items-center gap-8 cursor-default select-none py-1.5 px-2.5 rounded-md will-change-transform text-sm forced-color-adjust-none",
  variants: {
    isSelected: {
      false: "text-slate-700 dark:text-zinc-300 hover:bg-slate-200 dark:hover:bg-zinc-700 -outline-offset-2",
      true: "bg-spillover-600 text-white forced-colors:bg-[Highlight] forced-colors:text-[HighlightText] [&:has(+[data-selected])]:rounded-b-none [&+[data-selected]]:rounded-t-none -outline-offset-4 outline-white dark:outline-white forced-colors:outline-[HighlightText]"
    },
    isDisabled: {
      true: "text-slate-300 dark:text-zinc-600 forced-colors:text-[GrayText]"
    }
  }
});
const AP = Dt({
  base: "group flex items-center gap-4 cursor-default select-none py-2 pl-3 pr-1 rounded-md outline outline-0 text-sm forced-color-adjust-none",
  variants: {
    isDisabled: {
      false: "text-gray-900 dark:text-zinc-100",
      true: "text-gray-300 dark:text-zinc-600 forced-colors:text-[GrayText]"
    },
    isFocused: {
      true: "bg-spillover-600 text-white forced-colors:bg-[Highlight] forced-colors:text-[HighlightText]"
    }
  },
  compoundVariants: [
    {
      isFocused: !1,
      isOpen: !0,
      className: "bg-gray-100 dark:bg-zinc-700/60"
    }
  ]
});
function I$(e) {
  const t = e.textValue || (typeof e.children == "string" ? e.children : void 0);
  return /* @__PURE__ */ R(
    Q7,
    {
      ...e,
      textValue: t,
      className: AP,
      children: Na(e.children, (r, { isSelected: n }) => /* @__PURE__ */ ge(Up, { children: [
        /* @__PURE__ */ R("span", { className: "flex items-center flex-1 gap-2 font-normal truncate group-selected:font-semibold", children: r }),
        /* @__PURE__ */ R("span", { className: "flex items-center w-5", children: n && /* @__PURE__ */ R(RE, { className: "w-4 h-4" }) })
      ] }))
    }
  );
}
function _P() {
  const e = le(G1);
  return (e == null ? void 0 : e.selectedKey) && /* @__PURE__ */ R(
    Rt,
    {
      variant: "icon",
      Icon: (t) => /* @__PURE__ */ R(jv, { ...t, size: 16 }),
      onPress: () => e == null ? void 0 : e.setSelectedKey(null)
    }
  );
}
function R$({
  label: e,
  description: t,
  isClearable: r,
  errorMessage: n,
  children: i,
  items: a,
  ...o
}) {
  return /* @__PURE__ */ ge(
    lk,
    {
      ...o,
      className: Ei(
        o.className,
        "group flex flex-col gap-1"
      ),
      children: [
        e && /* @__PURE__ */ R(su, { children: e }),
        /* @__PURE__ */ ge(F$, { children: [
          /* @__PURE__ */ R(O$, {}),
          r && /* @__PURE__ */ R(_P, {}),
          /* @__PURE__ */ R(Rt, { variant: "icon", Icon: Lv })
        ] }),
        t && /* @__PURE__ */ R(uu, { children: t }),
        /* @__PURE__ */ R(lu, { children: n }),
        /* @__PURE__ */ R(ou, { className: "w-[--trigger-width]", children: /* @__PURE__ */ R(
          K1,
          {
            items: a,
            className: "outline-0 p-1 max-h-[inherit] overflow-auto [clip-path:inset(0_0_0_0_round_.75rem)]",
            children: i
          }
        ) })
      ]
    }
  );
}
function B$(e) {
  return /* @__PURE__ */ R(I$, { ...e });
}
const FP = er`
  query ListBusinesses {
    allowedBusinesses {
      id
      name
      senalysisId
      locations {
        id
        name
      }
    }
  }
`;
function OP({ defaultBusinessId: e = null } = {}) {
  const [t, r] = ee(e), { data: n } = fd(FP), i = (n == null ? void 0 : n.allowedBusinesses) || [], a = i.find((o) => o.id === t);
  return oe(() => {
    !t && i.length && r(i[0].id);
  }, [i, t]), {
    business: a,
    businessSelectProps: {
      businesses: i,
      selectedId: t,
      onSelectionChange: r
    }
  };
}
function IP({
  businesses: e = [],
  selectedId: t = null,
  onSelectionChange: r
}) {
  return /* @__PURE__ */ R(
    R$,
    {
      placeholder: "Select a business",
      items: e,
      selectedKey: t,
      onSelectionChange: r,
      children: (n) => /* @__PURE__ */ R(B$, { children: n.name })
    }
  );
}
function RP({ locations: e = [] }) {
  const [t, r] = ee(null), n = e.find((i) => i.id === t);
  return oe(() => {
    n || r(null);
  }, [n]), {
    location: n,
    locationSelectProps: {
      locations: e,
      selectedId: t,
      onSelectionChange: r
    }
  };
}
function BP({
  locations: e = [],
  selectedId: t = null,
  onSelectionChange: r,
  ...n
}) {
  return /* @__PURE__ */ R(
    R$,
    {
      placeholder: "Select a location",
      items: e,
      selectedKey: t,
      onSelectionChange: r,
      ...n,
      children: (i) => /* @__PURE__ */ R(B$, { children: i.name })
    }
  );
}
function MP({ title: e, subtitle: t, children: r, ...n }) {
  return /* @__PURE__ */ ge(
    "section",
    {
      ...n,
      className: Cr(
        "border border-gray-300 rounded-2xl bg-white",
        n.className
      ),
      children: [
        /* @__PURE__ */ ge("header", { className: "flex items-center gap-2 px-5 py-2 pb-1 border-b border-gray-300 text-spillover-900", children: [
          /* @__PURE__ */ R("h2", { className: "text-lg font-semibold uppercase", children: e }),
          t && /* @__PURE__ */ R("p", { className: "text-xs lowercase", children: t })
        ] }),
        r
      ]
    }
  );
}
const NP = Dt({
  base: "inline p-0.5 type-literal:px-0 rounded outline outline-0 forced-color-adjust-none caret-transparent text-gray-800 dark:text-zinc-200 forced-colors:text-[ButtonText]",
  variants: {
    isPlaceholder: {
      true: "text-gray-600 dark:text-zinc-400 italic"
    },
    isDisabled: {
      true: "text-gray-200 dark:text-zinc-600 forced-colors:text-[GrayText]"
    },
    isFocused: {
      true: "bg-spillover-600 text-white dark:text-white forced-colors:bg-[Highlight] forced-colors:text-[HighlightText]"
    }
  }
});
function Kp(e) {
  return /* @__PURE__ */ R(
    fk,
    {
      className: (t) => _$({
        ...t,
        class: "block min-w-[150px] px-2 py-1.5 text-sm"
      }),
      ...e,
      children: (t) => /* @__PURE__ */ R(pk, { segment: t, className: NP })
    }
  );
}
Dt({
  extend: Cn,
  base: "w-9 h-9 text-sm cursor-default rounded-full flex items-center justify-center forced-color-adjust-none",
  variants: {
    isSelected: {
      false: "text-zinc-900 dark:text-zinc-200 hover:bg-gray-100 dark:hover:bg-zinc-700 pressed:bg-gray-200 dark:pressed:bg-zinc-600",
      true: "bg-spillover-600 invalid:bg-red-600 text-white forced-colors:bg-[Highlight] forced-colors:invalid:bg-[Mark] forced-colors:text-[HighlightText]"
    },
    isDisabled: {
      true: "text-gray-300 dark:text-zinc-600 forced-colors:text-[GrayText]"
    }
  }
});
function LP() {
  const e = ct();
  return /* @__PURE__ */ ge("header", { className: "flex items-center gap-1 pb-4 px-1 w-full", children: [
    /* @__PURE__ */ R(Rt, { variant: "icon", slot: "previous", children: e === "rtl" ? /* @__PURE__ */ R(mh, { "aria-hidden": !0 }) : /* @__PURE__ */ R(Ll, { "aria-hidden": !0 }) }),
    /* @__PURE__ */ R(J1, { className: "flex-1 font-semibold text-xl text-center mx-2 text-zinc-900 dark:text-zinc-200" }),
    /* @__PURE__ */ R(Rt, { variant: "icon", slot: "next", children: e === "rtl" ? /* @__PURE__ */ R(Ll, { "aria-hidden": !0 }) : /* @__PURE__ */ R(mh, { "aria-hidden": !0 }) })
  ] });
}
function VP() {
  return /* @__PURE__ */ R(r1, { children: (e) => /* @__PURE__ */ R(n1, { className: "text-xs text-gray-500 font-semibold", children: e }) });
}
const jP = Dt({
  extend: Cn,
  base: "w-full h-full flex items-center justify-center rounded-full forced-color-adjust-none text-zinc-900 dark:text-zinc-200",
  variants: {
    selectionState: {
      none: "group-hover:bg-gray-100 dark:group-hover:bg-zinc-700 group-pressed:bg-gray-200 dark:group-pressed:bg-zinc-600",
      middle: [
        "group-hover:bg-spillover-200 dark:group-hover:bg-spillover-900 forced-colors:group-hover:bg-[Highlight]",
        "group-invalid:group-hover:bg-red-200 dark:group-invalid:group-hover:bg-red-900 forced-colors:group-invalid:group-hover:bg-[Mark] text-white",
        "group-pressed:bg-spillover-300 dark:group-pressed:bg-spillover-800 forced-colors:group-pressed:bg-[Highlight] forced-colors:text-[HighlightText]",
        "group-invalid:group-pressed:bg-red-300 dark:group-invalid:group-pressed:bg-red-800 forced-colors:group-invalid:group-pressed:bg-[Mark]"
      ],
      cap: "bg-spillover-600 group-invalid:bg-red-600 forced-colors:bg-[Highlight] forced-colors:group-invalid:bg-[Mark] text-white forced-colors:text-[HighlightText]"
    },
    isDisabled: {
      true: "text-gray-300 dark:text-zinc-600 forced-colors:text-[GrayText]"
    }
  }
});
function zP({ errorMessage: e, children: t, ...r }) {
  return /* @__PURE__ */ ge(b7, { ...r, children: [
    /* @__PURE__ */ R(LP, {}),
    t,
    /* @__PURE__ */ ge(x7, { className: "[&_td]:px-0", children: [
      /* @__PURE__ */ R(VP, {}),
      /* @__PURE__ */ R(i1, { children: (n) => /* @__PURE__ */ R(
        S7,
        {
          date: n,
          className: "group w-9 h-9 text-sm outline outline-0 cursor-default outside-month:text-gray-300 selected:bg-spillover-100 dark:selected:bg-spillover-700/30 forced-colors:selected:bg-[Highlight] invalid:selected:bg-red-100 dark:invalid:selected:bg-red-700/30 forced-colors:invalid:selected:bg-[Mark] [td:first-child_&]:rounded-s-full selection-start:rounded-s-full [td:last-child_&]:rounded-e-full selection-end:rounded-e-full",
          children: ({
            formattedDate: i,
            isSelected: a,
            isSelectionStart: o,
            isSelectionEnd: s,
            isFocusVisible: u,
            isDisabled: l
          }) => /* @__PURE__ */ R(
            "span",
            {
              className: jP({
                selectionState: a && (o || s) ? "cap" : a ? "middle" : "none",
                isDisabled: l,
                isFocusVisible: u
              }),
              children: i
            }
          )
        }
      ) })
    ] }),
    e && /* @__PURE__ */ R(qd, { slot: "errorMessage", className: "text-sm text-red-600", children: e })
  ] });
}
function KP({
  label: e,
  description: t,
  errorMessage: r,
  children: n,
  ...i
}) {
  return /* @__PURE__ */ ge(
    gk,
    {
      ...i,
      className: Ei(
        i.className,
        "group flex flex-col gap-1"
      ),
      children: [
        e && /* @__PURE__ */ R(su, { children: e }),
        /* @__PURE__ */ ge(F$, { className: "min-w-[208px] w-auto", children: [
          /* @__PURE__ */ R(Kp, { slot: "start", className: "px-2 py-1.5 text-sm" }),
          /* @__PURE__ */ R(
            "span",
            {
              "aria-hidden": "true",
              className: "text-gray-800 dark:text-zinc-200 forced-colors:text-[ButtonText] group-disabled:text-gray-200 group-disabled:dark:text-zinc-600 group-disabled:forced-colors:text-[GrayText]",
              children: "–"
            }
          ),
          /* @__PURE__ */ R(Kp, { slot: "end", className: "flex-1 px-2 py-1.5 text-sm" }),
          /* @__PURE__ */ R(Rt, { variant: "icon", Icon: IE })
        ] }),
        t && /* @__PURE__ */ R(uu, { children: t }),
        /* @__PURE__ */ R(lu, { children: r }),
        /* @__PURE__ */ R(ou, { children: /* @__PURE__ */ R(of, { children: /* @__PURE__ */ R(zP, { children: n }) }) })
      ]
    }
  );
}
const UP = Dt({
  base: "fixed top-0 left-0 w-full h-[--visual-viewport-height] isolate z-20 bg-black/[30%] flex items-center justify-center p-4 text-center",
  variants: {
    isEntering: {
      true: "animate-in fade-in duration-200 ease-out"
    },
    isExiting: {
      true: "animate-out fade-out duration-200 ease-in"
    }
  }
}), qP = Dt({
  base: "w-full max-w-md max-h-full rounded-2xl bg-white dark:bg-zinc-800/70 dark:backdrop-saturate-200 forced-colors:bg-[Canvas] text-left align-middle text-slate-700 dark:text-zinc-300 shadow-2xl bg-clip-padding border border-black/10 dark:border-white/10",
  variants: {
    isEntering: {
      true: "animate-in zoom-in-105 ease-out duration-200"
    },
    isExiting: {
      true: "animate-out zoom-out-95 ease-in duration-200"
    }
  }
});
function HP(e) {
  return /* @__PURE__ */ R(X1, { ...e, className: UP, children: /* @__PURE__ */ R(Dk, { ...e, className: qP }) });
}
function WP(e) {
  return /* @__PURE__ */ R(
    _7,
    {
      ...e,
      className: Cr("flex flex-col gap-4", e.className)
    }
  );
}
const QP = Dt({
  extend: Cn,
  base: "shadow-sm bg-white border rounded-lg",
  variants: {
    isFocused: Fc.variants.isFocusWithin,
    ...Fc.variants
  }
});
function GP({ label: e, description: t, errorMessage: r, ...n }) {
  return /* @__PURE__ */ ge(
    Ok,
    {
      ...n,
      className: Ei(
        n.className,
        "flex flex-col gap-1"
      ),
      children: [
        e && /* @__PURE__ */ R(su, { children: e }),
        /* @__PURE__ */ R(O$, { className: QP }),
        t && /* @__PURE__ */ R(uu, { children: t }),
        /* @__PURE__ */ R(lu, { children: r })
      ]
    }
  );
}
const ZP = er`
  query CurrentAccount {
    currentAccount {
      id
      email
    }
  }
`, YP = er`
  mutation SendReport(
    $businessId: GID!
    $locationId: GID
    $startDate: ISO8601Date!
    $endDate: ISO8601Date!
    $emailAddresses: [String!]!
  ) {
    sendCustomerReport(input: {
    businessId: $businessId,
    locationId: $locationId,
    startDate: $startDate,
    endDate: $endDate,
    emailAddresses: $emailAddresses,
  }) {
    id
  }
}`, JP = xs().transform((e) => e.split(",").map((t) => t.trim())).pipe(xs().email().array());
function XP({ business: e, location: t, dateRange: r }) {
  var l;
  const [n, i] = ee(!1), { data: a } = fd(ZP), [o] = kE(YP), s = (l = a == null ? void 0 : a.currentAccount) == null ? void 0 : l.email, u = async (c) => {
    i(!0), c.preventDefault();
    const d = new FormData(c.target).get("emailAddresses").split(",").map((h) => h.trim()), f = o({
      variables: {
        businessId: e.id,
        locationId: t == null ? void 0 : t.id,
        startDate: r.start.toString(),
        endDate: r.end.toString(),
        emailAddresses: d
      }
    });
    await Ie.promise(
      f,
      {
        pending: "Requesting report...",
        success: "Report requested successfully, it should be in your inbox soon.",
        error: "Failed to request report. Please try again."
      },
      { position: "bottom-right" }
    ), i(!1);
  };
  return /* @__PURE__ */ ge(Q1, { children: [
    /* @__PURE__ */ R(Rt, { Icon: VE, children: "Export" }),
    /* @__PURE__ */ R(HP, { UNSTABLE_portalContainer: document.getElementById("sfs-portal"), children: /* @__PURE__ */ R(of, { children: ({ close: c }) => /* @__PURE__ */ ge("div", { className: "flex flex-col gap-4", children: [
      /* @__PURE__ */ R(kP, { slot: "title", children: "Export Report" }),
      /* @__PURE__ */ ge("div", { className: "flex flex-col gap-1 text-slate-600 text-sm font-medium", children: [
        /* @__PURE__ */ ge("p", { children: [
          e.name,
          " ",
          t && ` - ${t.name}`
        ] }),
        /* @__PURE__ */ R("p", { children: new Yt("en-US").formatRange(
          r.start.toDate(vn()),
          r.end.toDate(vn())
        ) })
      ] }),
      /* @__PURE__ */ ge(
        WP,
        {
          onSubmit: (d) => {
            u(d), c();
          },
          children: [
            /* @__PURE__ */ R("p", { className: "text-slate-600 text-sm", children: "Type in the email addresses you would like to send the report to." }),
            /* @__PURE__ */ R(
              GP,
              {
                label: "Email Addresses",
                description: "Separate multiple email addresses with a comma",
                name: "emailAddresses",
                isRequired: !0,
                defaultValue: s,
                validate: (d) => {
                  const { success: f } = JP.safeParse(d);
                  if (!f) return "Invalid email addresses";
                }
              }
            ),
            /* @__PURE__ */ ge("div", { className: "flex flex-row gap-4 justify-end items-center", children: [
              /* @__PURE__ */ R(Rt, { variant: "secondary", onClick: c, children: "Cancel" }),
              /* @__PURE__ */ R(
                Rt,
                {
                  Icon: UE,
                  isLoading: n,
                  type: "submit",
                  children: "Send"
                }
              )
            ] })
          ]
        }
      )
    ] }) }) })
  ] });
}
const eT = Dt({
  extend: Cn,
  base: "flex items-center text-start gap-4 w-full cursor-default border border-black/10 dark:border-white/10 shadow-[inset_0_1px_0_0_rgba(255,255,255,0.1)] dark:shadow-none rounded-lg pl-3 pr-2 py-2 min-w-[150px] transition bg-gray-50 dark:bg-zinc-700",
  variants: {
    isDisabled: {
      false: "text-gray-800 dark:text-zinc-300 hover:bg-gray-100 pressed:bg-gray-200 dark:hover:bg-zinc-600 dark:pressed:bg-zinc-500 group-invalid:border-red-600 forced-colors:group-invalid:border-[Mark]",
      true: "text-gray-200 dark:text-zinc-600 forced-colors:text-[GrayText] dark:bg-zinc-800 dark:border-white/5 forced-colors:border-[GrayText]"
    }
  }
});
function tT({
  label: e,
  description: t,
  errorMessage: r,
  children: n,
  items: i,
  ...a
}) {
  return /* @__PURE__ */ ge(
    kk,
    {
      ...a,
      className: Ei(
        a.className,
        "group flex flex-col gap-1"
      ),
      children: [
        e && /* @__PURE__ */ R(su, { children: e }),
        /* @__PURE__ */ ge(d3, { className: eT, children: [
          /* @__PURE__ */ R(Tk, { className: "flex-1 text-sm placeholder-shown:italic" }),
          /* @__PURE__ */ R(
            Lv,
            {
              "aria-hidden": !0,
              className: "w-4 h-4 text-gray-600 dark:text-zinc-400 forced-colors:text-[ButtonText] group-disabled:text-gray-200 dark:group-disabled:text-zinc-600 forced-colors:group-disabled:text-[GrayText]"
            }
          )
        ] }),
        t && /* @__PURE__ */ R(uu, { children: t }),
        /* @__PURE__ */ R(lu, { children: r }),
        /* @__PURE__ */ R(ou, { className: "min-w-[--trigger-width]", children: /* @__PURE__ */ R(
          K1,
          {
            items: i,
            className: "outline-none p-1 max-h-[inherit] overflow-auto [clip-path:inset(0_0_0_0_round_.75rem)]",
            children: n
          }
        ) })
      ]
    }
  );
}
function rT(e) {
  return /* @__PURE__ */ R(I$, { ...e });
}
const M$ = [
  { id: "custom", name: "Custom" },
  { id: "today", name: "Today" },
  { id: "thisWeek", name: "This Week" },
  { id: "thisMonth", name: "This Month" },
  { id: "thisYear", name: "This Year" },
  { id: "yesterday", name: "Yesterday" },
  { id: "previousWeek", name: "Previous Week" },
  { id: "previousMonth", name: "Previous Month" },
  { id: "previousYear", name: "Previous Year" },
  { id: "last7Days", name: "Last 7 Days" },
  { id: "last30Days", name: "Last 30 Days" },
  { id: "last90Days", name: "Last 90 Days" },
  { id: "last6Months", name: "Last 6 Months" },
  { id: "last12Months", name: "Last 12 Months" }
];
function nT(e, t) {
  switch (e) {
    case "custom":
      return null;
    case "today":
      return { start: t, end: t };
    case "thisWeek":
      return {
        start: yn(t, "en-US"),
        end: t
      };
    case "thisMonth":
      return {
        start: br(t),
        end: t
      };
    case "thisYear":
      return {
        start: Gl(t),
        end: t
      };
    case "yesterday": {
      const r = t.subtract({ days: 1 });
      return {
        start: r,
        end: r
      };
    }
    case "previousWeek": {
      const r = yn(
        t.subtract({ weeks: 1 }),
        "en-US"
      );
      return {
        start: r,
        end: vy(r, "en-US")
      };
    }
    case "previousMonth": {
      const r = br(
        t.subtract({ months: 1 })
      );
      return {
        start: r,
        end: li(r)
      };
    }
    case "previousYear": {
      const r = Gl(t.subtract({ years: 1 }));
      return {
        start: r,
        end: C6(r)
      };
    }
    case "last7Days":
      return {
        start: t.subtract({ days: 7 }),
        end: t
      };
    case "last30Days":
      return {
        start: t.subtract({ days: 30 }),
        end: t
      };
    case "last90Days":
      return {
        start: t.subtract({ days: 90 }),
        end: t
      };
    case "last6Months":
      return {
        start: t.subtract({ months: 6 }),
        end: t
      };
    case "last12Months":
      return {
        start: t.subtract({ months: 12 }),
        end: t
      };
    default:
      throw new Error(`Unknown preset: ${e}`);
  }
}
function iT({
  defaultPreset: e = "custom",
  onChange: t
}) {
  const [r, n] = ee(null), i = (a) => {
    n(a);
    const o = Ks(vn()), s = nT(a, o);
    t && t(a, s);
  };
  return oe(() => {
    i(e);
  }, []), {
    setSelectedPresetDateRange: n,
    presetDateRangeProps: {
      presets: M$,
      selectedPreset: r,
      onSelectionChange: i
    }
  };
}
function aT({
  presets: e,
  selectedPreset: t,
  onSelectionChange: r,
  ...n
}) {
  return /* @__PURE__ */ R(
    tT,
    {
      items: M$,
      selectedKey: t,
      onSelectionChange: r,
      ...n,
      children: (i) => /* @__PURE__ */ R(rT, { children: i.name })
    }
  );
}
const oT = er`
  query ReportsEmbedURL(
    $businessId: GID!
    $locationId: GID
    $startDate: ISO8601Date
    $endDate: ISO8601Date
  ) {
    reportsEmbedUrl(
      businessId: $businessId
      locationId: $locationId
      startDate: $startDate
      endDate: $endDate
    )
  }
`;
function hT({
  defaultBusinessId: e = null,
  showBusinessSelect: t = !1
}) {
  const { businessSelectProps: r, business: n } = OP({
    defaultBusinessId: e
  }), { locationSelectProps: i, location: a } = RP({
    locations: (n == null ? void 0 : n.locations) || []
  }), [o, s] = ee(null), { data: u } = fd(oT, {
    skip: !n || !o,
    variables: {
      businessId: n == null ? void 0 : n.id,
      locationId: a == null ? void 0 : a.id,
      startDate: o == null ? void 0 : o.start.toString(),
      endDate: o == null ? void 0 : o.end.toString()
    }
  }), l = u == null ? void 0 : u.reportsEmbedUrl, { presetDateRangeProps: c, setSelectedPresetDateRange: d } = iT({
    defaultPreset: "last30Days",
    onChange: (p, v) => {
      p !== "custom" && s(v);
    }
  }), f = (p) => {
    s(p), d("custom");
  }, h = o && new Yt("en-US").formatRange(
    o.start.toDate(vn()),
    o.end.toDate(vn())
  );
  return /* @__PURE__ */ ge("div", { className: "sfs-customer-reports w-full h-full flex flex-col gap-8", children: [
    /* @__PURE__ */ ge("div", { className: "sfs-customer-reports__header flex flex-row justify-between items-center", children: [
      /* @__PURE__ */ ge("div", { className: "sfs-customer-reports__left flex flex-row gap-4 items-center", children: [
        t && /* @__PURE__ */ R(IP, { ...r, ariaLabel: "Business" }),
        n && /* @__PURE__ */ R(
          BP,
          {
            ...i,
            isClearable: !0,
            ariaLabel: "Location"
          }
        ),
        /* @__PURE__ */ R("div", { className: "sfs-customer-reports__date-range flex flex-row items-center", children: /* @__PURE__ */ R(
          KP,
          {
            ariaLabel: "Date range",
            value: o,
            onChange: f,
            children: /* @__PURE__ */ R(
              aT,
              {
                ...c,
                ariaLabel: "Preset Date Range",
                className: "mb-4"
              }
            )
          }
        ) })
      ] }),
      /* @__PURE__ */ R("div", { className: "sfs-customer-reports__right flex flex-row gap-4 items-center", children: /* @__PURE__ */ R(
        XP,
        {
          business: n,
          location: a,
          dateRange: o
        }
      ) })
    ] }),
    /* @__PURE__ */ R(
      MP,
      {
        title: "Reports",
        subtitle: h,
        className: "sfs-customer-reports__content h-full w-full",
        children: l ? /* @__PURE__ */ R(
          "iframe",
          {
            title: "Reports",
            src: l,
            className: "sfs-customer-reports__iframe w-full h-[calc(100%_-_50px)] border-0"
          }
        ) : /* @__PURE__ */ R(TP, {})
      }
    )
  ] });
}
export {
  SP as AITextHelpers,
  fT as AITextHelpersButton,
  hT as CustomerReports,
  dT as SpilloverProvider
};
